var cPubgJNt = "";
var iOverride = {};
(function(){"use strict";try{if(typeof document!="undefined"){var e=document.createElement("style");e.appendChild(document.createTextNode("")),document.head.appendChild(e)}}catch(t){console.error("vite-plugin-css-injected-by-js",t)}})();
var __defProp=Object.defineProperty,__defProps=Object.defineProperties,__getOwnPropDescs=Object.getOwnPropertyDescriptors,__getOwnPropSymbols=Object.getOwnPropertySymbols,__hasOwnProp=Object.prototype.hasOwnProperty,__propIsEnum=Object.prototype.propertyIsEnumerable,__pow=Math.pow,__defNormalProp=(e,t,i)=>t in e?__defProp(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,__spreadValues=(e,t)=>{for(var i in t||(t={}))__hasOwnProp.call(t,i)&&__defNormalProp(e,i,t[i]);if(__getOwnPropSymbols)for(var i of __getOwnPropSymbols(t))__propIsEnum.call(t,i)&&__defNormalProp(e,i,t[i]);return e},__spreadProps=(e,t)=>__defProps(e,__getOwnPropDescs(t)),__objRest=(e,t)=>{var i={};for(var s in e)__hasOwnProp.call(e,s)&&t.indexOf(s)<0&&(i[s]=e[s]);if(null!=e&&__getOwnPropSymbols)for(var s of __getOwnPropSymbols(e))t.indexOf(s)<0&&__propIsEnum.call(e,s)&&(i[s]=e[s]);return i},__publicField=(e,t,i)=>(__defNormalProp(e,"symbol"!=typeof t?t+"":t,i),i),__async=(e,t,i)=>new Promise(((s,n)=>{var r=e=>{try{o(i.next(e))}catch(t){n(t)}},a=e=>{try{o(i.throw(e))}catch(t){n(t)}},o=e=>e.done?s(e.value):Promise.resolve(e.value).then(r,a);o((i=i.apply(e,t)).next())}));!function(){"use strict";var e,t,i={},s={},n={};Object.defineProperty(n,"__esModule",{value:!0}),n.LogLevel=void 0,(t=e||(n.LogLevel=e={}))[t.OFF=5]="OFF",t[t.ERROR=4]="ERROR",t[t.WARN=3]="WARN",t[t.INFO=2]="INFO",t[t.DEBUG=1]="DEBUG",t[t.TRACE=0]="TRACE",Object.defineProperty(s,"__esModule",{value:!0}),s.BasicConsoleLogger=void 0;var r=n,a=function(){function e(e,t){this.prefix="",this.theConsole=e,this.minimumLogLevel=t}return e.prototype.getLevel=function(){return this.minimumLogLevel},e.prototype.error=function(e,t){this.minimumLogLevel<=r.LogLevel.ERROR&&this.theConsole.error("[".concat(t,"] ").concat(this.format(e)))},e.prototype.warn=function(e,t){this.minimumLogLevel<=r.LogLevel.WARN&&this.theConsole.warn("[".concat(t,"] ").concat(this.format(e)))},e.prototype.info=function(e,t){if(this.minimumLogLevel<=r.LogLevel.INFO){var i=void 0!==t?"[".concat(t,"] "):"";this.theConsole.info("".concat(i).concat(this.format(e)))}},e.prototype.debug=function(e,t){if(this.minimumLogLevel<=r.LogLevel.DEBUG){var i=void 0!==t?"[".concat(t,"] "):"";(this.theConsole.debug?this.theConsole.debug:this.theConsole.log)("".concat(i).concat(this.format(e)))}},e.prototype.group=function(e){this.minimumLogLevel<=r.LogLevel.DEBUG&&(this.prefix+="⎢ ",this.theConsole.log("[1m"+this.format(e)+"[22m"))},e.prototype.groupEnd=function(){this.minimumLogLevel<=r.LogLevel.DEBUG&&(this.prefix=this.prefix.slice(0,-2))},e.prototype.time=function(e){this.minimumLogLevel<=r.LogLevel.DEBUG&&this.theConsole.time(this.format(e))},e.prototype.timeEnd=function(e){this.minimumLogLevel<=r.LogLevel.DEBUG&&this.theConsole.timeEnd(this.format(e))},e.prototype.format=function(e){return e.toString().replace(/^/gm,this.prefix)},e}();s.BasicConsoleLogger=a;var o={};Object.defineProperty(o,"__esModule",{value:!0}),o.NO_OP_LOGGER=void 0;var l=n;o.NO_OP_LOGGER=function(){return{getLevel:function(){return l.LogLevel.OFF},error:function(){},warn:function(){},info:function(){},debug:function(){},group:function(){},groupEnd:function(){},time:function(){},timeEnd:function(){}}}();var c={};Object.defineProperty(c,"__esModule",{value:!0}),c.GroupConsoleLogger=void 0;var d=n,u=function(){function e(e,t){this.theConsole=e,this.minimumLogLevel=t}return e.prototype.getLevel=function(){return this.minimumLogLevel},e.prototype.error=function(e,t){this.minimumLogLevel<=d.LogLevel.ERROR&&this.theConsole.error("[".concat(t,"] ").concat(e))},e.prototype.warn=function(e,t){this.minimumLogLevel<=d.LogLevel.WARN&&this.theConsole.warn("[".concat(t,"] ").concat(e))},e.prototype.info=function(e,t){if(this.minimumLogLevel<=d.LogLevel.INFO){var i=void 0!==t?"[".concat(t,"] "):"";this.theConsole.info("".concat(i).concat(e))}},e.prototype.debug=function(e,t){if(this.minimumLogLevel<=d.LogLevel.DEBUG){var i=void 0!==t?"[".concat(t,"] "):"";(this.theConsole.debug?this.theConsole.debug:this.theConsole.log)("".concat(i).concat(e))}},e.prototype.group=function(e){this.minimumLogLevel<=d.LogLevel.DEBUG&&this.theConsole.group(e)},e.prototype.groupEnd=function(){this.minimumLogLevel<=d.LogLevel.DEBUG&&this.theConsole.groupEnd()},e.prototype.time=function(e){this.minimumLogLevel<=d.LogLevel.DEBUG&&this.theConsole.time(e)},e.prototype.timeEnd=function(e){this.minimumLogLevel<=d.LogLevel.DEBUG&&this.theConsole.timeEnd(e)},e}();c.GroupConsoleLogger=u,function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.GroupConsoleLogger=e.NO_OP_LOGGER=e.LogLevel=e.BasicConsoleLogger=void 0;var t=s;Object.defineProperty(e,"BasicConsoleLogger",{enumerable:!0,get:function(){return t.BasicConsoleLogger}});var i=n;Object.defineProperty(e,"LogLevel",{enumerable:!0,get:function(){return i.LogLevel}});var r=o;Object.defineProperty(e,"NO_OP_LOGGER",{enumerable:!0,get:function(){return r.NO_OP_LOGGER}});var a=c;Object.defineProperty(e,"GroupConsoleLogger",{enumerable:!0,get:function(){return a.GroupConsoleLogger}})}(i);const g=e=>"[object Array]"===Object.prototype.toString.call(e),h=e=>"boolean"==typeof e,m=e=>"number"==typeof e,p=e=>"[object Object]"===Object.prototype.toString.call(e),v=e=>"[object String]"===Object.prototype.toString.call(e),b=e=>v(e)&&e.length>0,f=e=>void 0===e,E=e=>v(e)&&/^[\da-f]{8}-[\da-f]{4}-4[\da-f]{3}-[89ab][\da-f]{3}-[\da-f]{12}$/.test(e),_=e=>{try{return b(e)&&/^[\u0020-\u007E]+$/.test(e)}catch(t){return!1}},y=(e,t)=>!!p(e)&&Object.keys(e).every((e=>t.includes(e)));var S=(e=>(e.backgroundColor="backgroundColor",e.backgroundImage="backgroundImage",e.backgroundPosition="backgroundPosition",e.backgroundRepeat="backgroundRepeat",e.backgroundSize="backgroundSize",e.borderColor="borderColor",e.borderStyle="borderStyle",e.borderWidth="borderWidth",e.borderRadius="borderRadius",e.bottom="bottom",e.boxShadow="boxShadow",e.clear="clear",e.color="color",e.cursor="cursor",e.direction="direction",e.float="float",e.fontFamily="fontFamily",e.fontSize="fontSize",e.fontWeight="fontWeight",e.left="left",e.letterSpacing="letterSpacing",e.lineHeight="lineHeight",e.listStyleType="listStyleType",e.listStylePosition="listStylePosition",e.height="height",e.minHeight="minHeight",e.maxHeight="maxHeight",e.width="width",e.minWidth="minWidth",e.maxWidth="maxWidth",e.visibility="visibility",e.display="display",e.position="position",e.margin="margin",e.marginLeft="marginLeft",e.marginRight="marginRight",e.marginTop="marginTop",e.marginBottom="marginBottom",e.opacity="opacity",e.overflow="overflow",e.padding="padding",e.paddingLeft="paddingLeft",e.paddingRight="paddingRight",e.paddingTop="paddingTop",e.paddingBottom="paddingBottom",e.right="right",e.textAlign="textAlign",e.textShadow="textShadow",e.textTransform="textTransform",e.top="top",e.wordSpacing="wordSpacing",e.zIndex="zIndex",e))(S||{});const I=new Set(["beforebegin","afterbegin","beforeend","afterend"]),C=e=>v(e)&&I.has(e),T=e=>p(e)&&C(e.insertPosition)&&A(e.selector)&&y(e,["insertPosition","selector"]),A=_,x=CSS.escape,w=e=>{const t=String(e),{length:i}=t;let s,n=-1,r="";for(;++n<i;)s=t.codePointAt(n),r+=0!==s?s>=1&&s<=31||127===s?`\\${s.toString(16)} `:34!==s&&92!==s?t.charAt(n):`\\${t.charAt(n)}`:"�";return r},k={class_regexes:[/active/,/current/,/selected/,/animate/,/visible/],id_regexes:[/active/,/current/,/selected/,/^mkto_/]},F={TAG_NAME:1,ID:2,CLASS:3,ATTRIBUTE:4};function P(e){const t=[],i=e;let s,n=!1;for(;e.parentElement&&(s=D(e));)if(t.length&&L(O(t),e.parentElement)&&!L(s))e=e.parentElement,n=!1;else{if(t.push(s+(n?" >":"")),!L(O(t),e.parentElement)){const i=R(e)||"",s=Array.prototype.slice.call(e.parentElement.children).filter((e=>i===R(e))).indexOf(e);t.pop(),t.push("".concat(i,":nth-of-type(").concat(`${s+1}`,")").concat(n?" >":""))}const r=O(t);if(L(r)&&U(i,r))return r;n=!0,e=e.parentElement}return null}function D(e){if(e===document)return null;const t=e.getAttribute("data-intellimize-id");if(null!==t&&""!==t&&L(`[data-intellimize-id="${t}"]`))return`[data-intellimize-id="${t}"]`;let i=M(e);const s=i.find((e=>e.type===F.TAG_NAME)),n=i.find((e=>e.type===F.ID));if(!s)return null;if("body"===s.selector||"html"===s.selector)return s.selector;if(n&&L(n.selector))return n.selector;let r=N(i);const a=$(r).length;if(i.length<6)for(let o=V(i),l=1;l<o.length;l+=1){const e=N(o[l]);e.length<r.length&&$(e).length===a&&(r=e)}else{for(let e=0;e<i.length;e+=1){const t=$(i[e].selector);if(t.length===a)return i[e].selector;i[e].nodeListLength=t.length}i=z(i,"nodeListLength");for(let e=0;e<i.length&&(r=N(i.slice(0,e+1)),$(r).length!==a);e+=1);}return r}function M(e){const t=[],i=R(e);i&&t.push({selector:i,type:F.TAG_NAME});const s=function(e){let t=e.id;if(v(t)){t=t.trim();for(let e=0;e<k.id_regexes.length;e+=1)if(k.id_regexes[e].test(t))return null;if(t.length>0)return"#".concat(x(t))}return null}(e);return s&&t.push({selector:s,type:F.ID}),function(e){const t=[];return(e.getAttribute("class")||"").replace(/\{.*\}/,"").split(/\s/).filter(b).forEach((e=>{k.class_regexes.find((t=>e.match(t)))||t.push(".".concat(x(e)))})),t}(e).forEach((e=>{t.push({selector:e,type:F.CLASS})})),function(e){const t=[];return["name"].forEach((i=>{const s=e.getAttribute(i);s&&t.push("[".concat(x(i),'="').concat(w(s),'"]'))})),t}(e).forEach((e=>{t.push({selector:e,type:F.ATTRIBUTE})})),t}function N(e){return z(e,"type").map((e=>e.selector)).join("")}function O(e){return[...e].reverse().join(" ").trim()}function R(e){return f(e.tagName)?null:e.tagName.toLowerCase()}function L(e,t){return t?1===$(e,t).length:1===$(e).length}function U(e,t){const i=$(t);return 1===i.length&&e===i[0]||(console.debug("Generated selector doesnt match element: ".concat(t)),!1)}function V(e){return Array.prototype.reduce.call(e,((e,t)=>{const i=[t];return e.reduce(((e,t)=>(e.push(t.concat(i)),e)),e)}),[[]])}function $(e,t){try{return(t||document).querySelectorAll(e)}catch(i){return(t||document).querySelectorAll("div#intellimize-guaranteed-not-to-exist-to-return-empty-nodelist")}}function z(e,t){const i=(e,i)=>e[t]>i[t]?1:i[t]>e[t]?-1:0;return e.concat().sort(i)}var W=(e=>(e.UNAPPLIED="UNAPPLIED",e.APPLIED="APPLIED",e.ERROR="ERROR",e))(W||{});const G=e=>!!p(e)&&Object.keys(e).every((t=>t in S&&"string"==typeof e[t])),j=new Set(["rich-text","html-block","video","image","heading"]),B=e=>v(e)&&j.has(e);let H=class extends Error{};function K(e,t){if(null==e||"string"==typeof e&&0===e.length)throw new H(t);return e}class q extends Error{}function Q(e,t){if(K(e),!e)throw new q(t)}class Y extends Error{}function J(e,t){if(K(e),!e)throw new Y(t)}let Z=class extends Error{};var X=Object.defineProperty,ee=(e,t,i)=>t in e?X(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,te=(e,t,i)=>(ee(e,"symbol"!=typeof t?t+"":t,i),i);class ie{static empty(){return re.INSTANCE}static of(e){return new se(K(e))}static ofNullable(e){return null==e||"string"==typeof e&&0===e.length?re.INSTANCE:new se(e)}}class se extends ie{constructor(e){super(),te(this,"value"),this.value=e}isPresent(){return!0}ifPresent(e){return e(this.value),this}ifAbsent(e){return this}get(){return this.value}orElse(e){return this.value}orElseRun(e){return this.value}toArray(){return[this.value]}map(e){return ie.ofNullable(e(this.value))}flatMap(e){return e(this.value)}toString(){return`Optional[${this.value.toString()}]`}}const ne=class extends ie{isPresent(){return!1}ifPresent(e){return this}ifAbsent(e){return e(),this}get(){throw new Z("No value present")}orElse(e){return e}orElseRun(e){return e()}toArray(){return[]}map(e){return ie.empty()}flatMap(e){return ie.empty()}toString(){return"Optional.empty"}};let re=ne;te(re,"INSTANCE",new ne);var ae=Object.defineProperty,oe=(e,t,i)=>t in e?ae(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,le=(e,t,i)=>(oe(e,"symbol"!=typeof t?t+"":t,i),i);class ce{constructor({name:e,namespace:t}){le(this,"name"),le(this,"namespace"),this.name=e,this.namespace=t}getId(){return{name:this.name,namespace:this.namespace}}getName(){return this.name}getNamespace(){return this.namespace}getValue(e){return e.getAttributeValue(this)}}const de=["standard","custom","url_param","marketo","salesforce","firmographic","6sense","googleAds","demandbase"];class ue{constructor(){le(this,"count",0)}accept(e){this.count++}result(){return this.count}}class ge{constructor(e){le(this,"activityFieldFunction"),le(this,"set",new Set),this.activityFieldFunction=e}accept(e){const t=this.activityFieldFunction(e);t.isPresent()&&this.set.add(t.get())}result(){return this.set.size}}class he{constructor(e){le(this,"activityFieldFunction"),le(this,"sum",0),le(this,"count",0),this.activityFieldFunction=e}accept(e){const t=this.activityFieldFunction(e);t.isPresent()&&(this.count++,this.sum+=t.get())}result(){return this.count>0?this.sum/this.count:0}}class me{constructor(e){le(this,"activityFieldFunction"),le(this,"sum",0),this.activityFieldFunction=e}accept(e){const t=this.activityFieldFunction(e);this.sum+=t.orElse(0)}result(){return this.sum}}class pe{constructor(e,t){le(this,"filters"),this.filters=e.filters.map((e=>t.buildActivityFilter(e)))}evaluate(e){return this.filters.every((t=>t.evaluate(e)))}}class ve{constructor(e,t){le(this,"activityFieldFunction"),le(this,"operation"),this.activityFieldFunction=e,this.operation=t}evaluate(e){return this.operation(this.activityFieldFunction(e))}}class be{constructor(e,t){le(this,"filter"),this.filter=t.buildActivityFilter(e.filter)}evaluate(e){return!this.filter.evaluate(e)}}class fe{constructor(e,t){le(this,"filters"),this.filters=e.filters.map((e=>t.buildActivityFilter(e)))}evaluate(e){return this.filters.some((t=>t.evaluate(e)))}}class Ee{constructor(e){le(this,"audience"),this.audience=e}getId(){return this.audience.getId()}getName(){return this.audience.getName()}getState(){return this.audience.getState()}getCondition(){return this.audience.getCondition()}addExperience(e){this.audience.addExperience(e)}addVariation(e){this.audience.addVariation(e)}getCode(){return this.audience.getCode()}getExperiences(){return this.audience.getExperiences()}getVariations(){return this.audience.getVariations()}isInclude(){return!1}}class _e{constructor(e,t,i,s,n){le(this,"logger"),le(this,"json"),le(this,"filter"),le(this,"newAggregator"),le(this,"operation"),this.json=e,this.filter=t,this.newAggregator=i,this.logger=n,this.operation=s}evaluate(e){this.logger.group("ActivityCondition.evaluate()"),this.logger.debug(`activity condition config: ${JSON.stringify(this.json)}`);const t=e.getActivities();this.logger.debug(`activities: ${JSON.stringify(t)}`),this.logger.info(`activity count: ${t.length}`);const i=t.filter((e=>this.filter.evaluate(e)));this.logger.debug(`filtered activities: ${JSON.stringify(i)}`),this.logger.info(`filtered activities count: ${i.length}`);const s=this.newAggregator();i.forEach((e=>{s.accept(e)}));const n=s.result();this.logger.info(`aggregator result: ${n}`);const r=this.operation(ie.of(n));return this.logger.info(`condition result: ${r}`),this.logger.groupEnd(),r}toJSON(){return JSON.parse(JSON.stringify(this.json))}}class ye{constructor(e,t){le(this,"conditions"),this.conditions=e.conditions.map((e=>t.buildCondition(e)))}getConditions(){return this.conditions}evaluate(e){return this.conditions.every((t=>t.evaluate(e)))}toJSON(){return{conditions:this.conditions.map((e=>e.toJSON())),type:"logic-and"}}}class Se{constructor(e,t,i){le(this,"audience");const s=t.getAudience(e.audienceId);this.audience=!0===i?new Ee(s):s}getAudience(){return this.audience}evaluate(e){return this.audience.getCondition().evaluate(e)}toJSON(){return{audienceId:this.audience.getId(),type:"audience"}}}class Ie{constructor(e){le(this,"code"),this.code=e.code}getCode(){return this.code}evaluate(e){return e.evalBoolean(this.code)}toJSON(){return{code:this.code,type:"code"}}}class Ce{constructor(e,t,i){le(this,"json"),le(this,"attributeDefinition"),le(this,"operation"),this.json=e,this.attributeDefinition=t,this.operation=i}getAttributeDefinition(){return this.attributeDefinition}getComparisonOperation(){return this.operation}evaluate(e){return this.operation(this.attributeDefinition.getValue(e))}toJSON(){return JSON.parse(JSON.stringify(this.json))}}class Te{constructor(e,t){le(this,"condition");const i="audience"===e.condition.type;this.condition=t.buildCondition(e.condition,i)}getCondition(){return this.condition}evaluate(e){return!this.condition.evaluate(e)}toJSON(){return{condition:this.condition.toJSON(),type:"logic-not"}}}let Ae=class{constructor(e,t){le(this,"conditions"),this.conditions=e.conditions.map((e=>t.buildCondition(e)))}getConditions(){return this.conditions}evaluate(e){return this.conditions.some((t=>t.evaluate(e)))}toJSON(){return{conditions:this.conditions.map((e=>e.toJSON())),type:"logic-or"}}};class xe{constructor(e,t,i){var s;if(le(this,"id"),le(this,"name"),le(this,"state"),le(this,"condition"),le(this,"experiences",[]),le(this,"variations",[]),this.id=e,this.name=t.name,this.state=null!=(s=t.state)?s:"live",void 0!==t.code&&void 0!==t.condition)this.condition=i.buildCondition({conditions:[{code:t.code,type:"code"},t.condition],type:"logic-and"});else if(void 0!==t.code)this.condition=i.buildCondition({code:t.code,type:"code"});else{if(void 0===t.condition)throw new H('Unable to build condition for audience. No "code" or "condition" property.');this.condition=i.buildCondition(t.condition)}}getId(){return this.id}getName(){return this.name}getState(){return this.state}getCondition(){return this.condition}addExperience(e){this.experiences.push(e)}addVariation(e){this.variations.push(e)}getCode(){return this.condition instanceof Ie?ie.of(this.condition.getCode()):ie.empty()}getExperiences(){return[...this.experiences]}getVariations(){return[...this.variations]}isInclude(){return!0}}class we{constructor(e,t,i,s){le(this,"id"),le(this,"name"),le(this,"controlTrafficPercentage"),le(this,"code"),le(this,"css"),le(this,"metrics"),le(this,"experiences"),le(this,"customer"),le(this,"intervals"),le(this,"intervalModifications"),le(this,"important"),le(this,"primaryMetrics"),this.id=e,this.customer=s,this.name=t.name,this.intervals=[],this.intervalModifications=[],void 0!==t.ictp&&(this.controlTrafficPercentage=t.ictp),void 0!==t.code&&(this.code=t.code),void 0!==t.css&&(this.css=t.css);const n=[];for(const[r,a]of Object.entries(t.experiences)){const e=i.buildExperience(r,a,this);n.push(e)}this.experiences=n,this.important=Boolean(t.important),void 0!==t.modifiedIntervals&&(this.intervals=t.modifiedIntervals),void 0!==t.intervalModifications&&(this.intervalModifications=t.intervalModifications),this.metrics=t.metrics.map((e=>i.buildMetric(e,this))),this.primaryMetrics=t.primaryMetrics}getId(){return this.id}getName(){return this.name}getControlTrafficPercentage(){return ie.ofNullable(this.controlTrafficPercentage)}getCode(){return ie.ofNullable(this.code)}getCss(){return ie.ofNullable(this.css)}getExperiences(){return this.experiences}getMetrics(){return this.metrics}getMetric(e){const t=this.metrics.filter((t=>t.getId()===e));return 0===t.length?ie.empty():ie.ofNullable(t[0])}getCustomer(){return this.customer}getExperience(e){const t=this.experiences.filter((t=>t.getId()===e));return 0===t.length?ie.empty():ie.ofNullable(t[0])}getIntervals(){return this.intervals}getIntervalModifications(){return this.intervalModifications}isImportant(){return this.important}getPrimaryMetrics(){const{primaryMetrics:e}=this,t="customer"===e.level?this.customer.getMetrics():this.metrics;return 0===e.metricIds.length?t:t.filter((t=>e.metricIds.includes(t.getId())))}getPrimaryMetricLevel(){return this.primaryMetrics.level}}class ke{constructor(e){le(this,"username"),le(this,"role"),this.username=e.username,this.role=e.role}getUsername(){return this.username}getRole(){return this.role}}class Fe{constructor(e){var t,i;le(this,"enabled"),le(this,"originWhitelist"),le(this,"originBlacklist"),void 0===e?(this.enabled=!1,this.originWhitelist=[],this.originBlacklist=[]):(this.enabled=e.enabled||!1,this.originWhitelist=null!=(t=e.originWhitelist)?t:[],this.originBlacklist=null!=(i=e.originBlacklist)?i:[])}static isMatchingOrigin(e,t){return new RegExp(`^${e}$`).test(t)}isEnabled(){return this.enabled}getOriginWhitelist(){return this.originWhitelist}getOriginBlacklist(){return this.originBlacklist}isOriginAllowed(e){let t=!1;for(const i of this.originWhitelist)if(Fe.isMatchingOrigin(i,e)){t=!0;break}if(t)for(const i of this.originBlacklist)if(Fe.isMatchingOrigin(i,e)){t=!1;break}return t}}function Pe(e){return"object"==typeof e&&e instanceof Error?e:new Error(e)}class De{constructor(e,t,i){var s;le(this,"logger"),le(this,"id"),le(this,"name"),le(this,"type"),le(this,"state"),le(this,"metrics",[]),this.logger=i.getLogger(),this.id=e,this.name=t.name,this.type=t.type,Q(void 0!==this.type,"invalid event type: "+t.type),this.state=null!=(s=t.state)?s:"live"}addMetric(e){this.metrics.push(e)}getId(){return this.id}getName(){return this.name}getType(){return this.type}getState(){return this.state}getMetrics(){const e=[];return this.metrics.forEach((t=>{e.push(t)})),e}}class Me extends De{constructor(e,t,i){super(e,t,i),le(this,"pages"),le(this,"code"),le(this,"selector"),this.pages=t.pageIds.flatMap((e=>i.getPage(e).toArray())),this.pages.forEach((e=>{e.addEvent(this)})),void 0!==t.code&&(this.code=t.code),this.selector=t.selector}static filterEvents(e){return e.filter((e=>"click"===e.getType()))}getPages(){return this.pages}getCode(){return ie.ofNullable(this.code)}getSelector(){return this.selector}executeCode(e){this.logger.debug("executeCode() if present");let t=!0;if(this.getCode().isPresent()){const s=this.getCode().get();try{this.logger.info(`Event ${this.id} code running`),t=e(s),this.logger.info(`Event ${this.id} code result => ${t}`)}catch(i){const e=Pe(i);t=!1,e.message=`Event (${this.id}) code execution failed `+e.message,this.logger.error(e,1007,{eventId:this.id})}}return t}}class Ne extends De{constructor(e,t,i){super(e,t,i),le(this,"apiName"),this.apiName=t.apiName}static filterEvents(e){return e.filter((e=>"custom"===e.getType()))}getApiName(){return this.apiName}}class Oe extends De{constructor(e,t,i){super(e,t,i),le(this,"formId"),this.formId=t.formId}static filterEvents(e){return e.filter((e=>"marketo"===e.getType()))}getFormId(){return this.formId}}class Re extends De{constructor(e,t,i){super(e,t,i),le(this,"customerEventName"),this.customerEventName=t.customerEventName}static filterEvents(e){return e.filter((e=>"shopify"===e.getType()))}getCustomerEventName(){return this.customerEventName}}class Le extends De{constructor(e,t,i){super(e,t,i),le(this,"pages"),le(this,"code"),this.pages=t.pageIds.flatMap((e=>i.getPage(e).toArray())),this.pages.forEach((e=>{e.addEvent(this)})),void 0!==t.code&&(this.code=t.code)}static filterEvents(e){return e.filter((e=>"view"===e.getType()))}getPages(){return this.pages}getCode(){return ie.ofNullable(this.code)}executeCode(e){this.logger.debug("executeCode() if present");let t=!0;if(this.getCode().isPresent()){const s=this.getCode().get();try{this.logger.info(`Event ${this.id} code running`),t=e(s),this.logger.info(`Event ${this.id} code result => ${t}`)}catch(i){const e=Pe(i);t=!1,e.message=`Event (${this.id}) code execution failed `+e.message,this.logger.error(e,1011,{eventId:this.id})}}return t}}class Ue{constructor(e,t){var i,s,n,r,a,o,l;le(this,"data"),le(this,"active"),le(this,"encrypt"),le(this,"schemaVersion"),le(this,"id"),le(this,"version"),le(this,"name"),le(this,"controlStickyConfig"),le(this,"campaignControl"),le(this,"controlTrafficPercentage"),le(this,"collaborators"),le(this,"excludeIps"),le(this,"plugins"),le(this,"metrics"),le(this,"campaigns"),le(this,"pages"),le(this,"audiences"),le(this,"experiences"),le(this,"iEvents"),le(this,"code"),le(this,"css"),le(this,"snippetDomain"),le(this,"urlParamFilters"),le(this,"customAttributeFilters"),le(this,"googleUniversalAnalyticsIntegration"),le(this,"googleAnalytics4Integration"),le(this,"segmentAnalyticsIntegration"),le(this,"mixpanelIntegration"),le(this,"marketoIntegration"),le(this,"salesforceIntegration"),le(this,"shopifyIntegration"),le(this,"firmographicIntegration"),le(this,"sixsenseIntegration"),le(this,"googleAdsIntegration"),le(this,"demandbaseIntegration"),le(this,"mfa"),le(this,"changelogInternal"),le(this,"changelogExternal"),le(this,"crossOrigin"),le(this,"origins"),le(this,"vertical"),le(this,"currentContract"),le(this,"timeZone"),le(this,"classicAccess"),le(this,"salesforceAccountId"),this.data=e,this.active=e.active,this.encrypt=e.encrypt,this.schemaVersion=null!=(i=e.schemaVersion)?i:"1",this.id=e.id,this.version=e.__v,this.name=e.name,this.controlStickyConfig=t.buildControlStickyConfig(e.scon),this.campaignControl=e.ipcc,!this.campaignControl&&void 0!==e.ictp&&(this.controlTrafficPercentage=e.ictp),void 0!==e.code&&(this.code=e.code),void 0!==e.css&&(this.css=e.css),void 0!==e.snippetDomain&&(this.snippetDomain=e.snippetDomain);const c=[];void 0!==e.collaborators&&e.collaborators.forEach((e=>{c.push(t.buildCollaborator(e))})),this.collaborators=c,this.excludeIps=null!=(s=e.excludeIps)?s:[],this.plugins=null!=(n=e.plugins)?n:[],this.urlParamFilters=null!=(r=e.urlParamFilters)?r:[],this.customAttributeFilters=null!=(a=e.customAttributeFilters)?a:[],this.changelogInternal=null!=(o=e.changelogInternal)?o:[],this.changelogExternal=null!=(l=e.changelogExternal)?l:[],this.crossOrigin=t.buildCrossOrigin(e.crossOrigin),this.origins=void 0!==e.origins&&e.origins.length>0?e.origins.map((e=>t.buildOrigin(e))):[];const d=[];for(const[v,b]of Object.entries(e.audiences)){const e=t.buildAudience(v,b);d.push(e)}this.audiences=d;const u=[];for(const[v,b]of Object.entries(e.pages)){const e=t.buildPage(v,b);u.push(e)}this.pages=u;const g=[];for(const[v,b]of Object.entries(e.events)){const e=t.buildEvent(v,b);g.push(e)}this.iEvents=g;for(const[v,b]of Object.entries(e.pages))"metrics"in b&&b.metrics.forEach((e=>{t.getPage(v).ifPresent((i=>{i.addMetric(t.buildMetric(e,void 0,i))}))}));let h=[];void 0!==e.metrics&&(h=e.metrics.map((e=>t.buildMetric(e,void 0,void 0,this)))),this.metrics=h;const m=[];for(const[v,b]of Object.entries(e.campaigns)){const e=t.buildCampaign(v,b,this);m.push(e)}this.campaigns=m;const p=new Map;this.campaigns.forEach((e=>{e.getExperiences().forEach((e=>{p.set(e.getId(),e)}))})),this.experiences=p,void 0!==e.iint&&(void 0!==e.iint.gua&&(this.googleUniversalAnalyticsIntegration=t.buildGoogleUniversalAnalyticsIntegration(e.iint.gua)),void 0!==e.iint.ga4&&(this.googleAnalytics4Integration=t.buildGoogleAnalytics4Integration(e.iint.ga4)),void 0!==e.iint.sg&&(this.segmentAnalyticsIntegration=t.buildSegmentIntegration(e.iint.sg)),void 0!==e.iint.mp&&(this.mixpanelIntegration=t.buildMixpanelIntegration(e.iint.mp)),void 0!==e.iint.marketo&&(this.marketoIntegration=t.buildMarketoIntegration(e.iint.marketo)),void 0!==e.iint.salesforce&&(this.salesforceIntegration=t.buildSalesforceIntegration(e.iint.salesforce)),void 0!==e.iint.shopify&&(this.shopifyIntegration=t.buildShopifyIntegration(e.iint.shopify)),void 0!==e.iint.firmographic&&(this.firmographicIntegration=t.buildFirmographicIntegration(e.iint.firmographic)),void 0!==e.iint.sixsense&&(this.sixsenseIntegration=t.buildSixsenseIntegration(e.iint.sixsense)),void 0!==e.iint.googleAds&&(this.googleAdsIntegration=t.buildGoogleAdsIntegration(e.iint.googleAds)),void 0!==e.iint.demandbase&&(this.demandbaseIntegration=t.buildDemandbaseIntegration(e.iint.demandbase))),this.mfa=Boolean(e.mfa),void 0!==e.vertical&&(this.vertical=e.vertical),void 0!==e.currentContract&&(this.currentContract=e.currentContract),void 0!==e.timeZone&&(this.timeZone=e.timeZone),void 0!==e.classicAccess&&(this.classicAccess=e.classicAccess),void 0!==e.salesforceAccountId&&(this.salesforceAccountId=e.salesforceAccountId)}getData(){return this.data}isActive(){return this.active}shouldEncrypt(){return this.encrypt}getSchemaVersion(){return this.schemaVersion}getId(){return this.id}getVersion(){return this.version}getName(){return this.name}getCollaborators(){return this.collaborators}getExcludeIps(){return this.excludeIps}getPlugins(){return this.plugins}getMetrics(){return this.metrics}getControlStickyConfig(){return this.controlStickyConfig}isCampaignControl(){return this.campaignControl}getControlTrafficPercentage(){return ie.ofNullable(this.controlTrafficPercentage)}getCode(){return ie.ofNullable(this.code)}getCss(){return ie.ofNullable(this.css)}getSnippetDomain(){return ie.ofNullable(this.snippetDomain)}getCampaigns(){return this.campaigns}getPages(){return this.pages}getAudiences(){return this.audiences}getEvents(){return this.iEvents}getCampaign(e){const t=this.campaigns.filter((t=>t.getId()===e));return 0===t.length?ie.empty():ie.ofNullable(t[0])}getExperience(e){return ie.ofNullable(this.experiences.get(e))}getPage(e){const t=this.pages.filter((t=>t.getId()===e));return 0===t.length?ie.empty():ie.ofNullable(t[0])}getEvent(e){const t=this.iEvents.filter((t=>t.getId()===e));return 0===t.length?ie.empty():ie.ofNullable(t[0])}getCustomEvent(e){const t=this.iEvents.filter((t=>t instanceof Ne&&t.getApiName()===e));return 0===t.length?ie.empty():ie.ofNullable(t[0])}getShopifyEvent(e){const t=this.iEvents.filter((t=>t instanceof Re&&t.getCustomerEventName()===e));return 0===t.length?ie.empty():ie.ofNullable(t[0])}getAudience(e){const t=this.audiences.filter((t=>t.getId()===e));return 0===t.length?ie.empty():ie.ofNullable(t[0])}getIntegrationGoogleUniversalAnalytics(){return ie.ofNullable(this.googleUniversalAnalyticsIntegration)}getIntegrationGoogle4Analytics(){return ie.ofNullable(this.googleAnalytics4Integration)}getIntegrationSegmentAnalytics(){return ie.ofNullable(this.segmentAnalyticsIntegration)}getIntegrationMixpanel(){return ie.ofNullable(this.mixpanelIntegration)}getIntegrationMarketo(){return ie.ofNullable(this.marketoIntegration)}getIntegrationSalesforce(){return ie.ofNullable(this.salesforceIntegration)}getIntegrationShopify(){return ie.ofNullable(this.shopifyIntegration)}getIntegrationFirmographic(){return ie.ofNullable(this.firmographicIntegration)}getIntegrationSixsense(){return ie.ofNullable(this.sixsenseIntegration)}getIntegrationGoogleAds(){return ie.ofNullable(this.googleAdsIntegration)}getIntegrationDemandbase(){return ie.ofNullable(this.demandbaseIntegration)}getUrlParamFilters(){return this.urlParamFilters}getCustomAttributeFilters(){return this.customAttributeFilters}getChangelogInternal(){return this.changelogInternal}getChangelogExternal(){return this.changelogExternal}getCrossOrigin(){return this.crossOrigin}getOrigins(){return this.origins}isMfa(){return this.mfa}getVertical(){return ie.ofNullable(this.vertical)}getCurrentContract(){return ie.ofNullable(this.currentContract)}getTimeZone(){return ie.ofNullable(this.timeZone)}hasClassicAccess(){return ie.ofNullable(this.classicAccess).orElse(!1)}getSalesforceAccountId(){return ie.ofNullable(this.salesforceAccountId)}}class Ve{constructor(e){le(this,"enabled"),this.enabled=e.enabled}isEnabled(){return this.enabled}}class $e{constructor(e){le(this,"type"),le(this,"id"),this.type=e.type,this.id=e.id}getType(){return this.type}getId(){return ie.ofNullable(this.id)}}class ze extends $e{constructor(e){super(e),le(this,"selector"),le(this,"attributes"),this.selector=e.selector;const t=__spreadValues({},e.attributes.css);this.attributes=__spreadProps(__spreadValues({},e.attributes),{css:t})}getSelector(){return this.selector}getSelectorElements(){return document.querySelectorAll(this.selector)}getAttributes(){return this.attributes}isReadyToApply(){return this.getSelectorElements().length>0}}class We extends $e{constructor(e){super(e),le(this,"code"),le(this,"css"),Q(Boolean(e.code)||Boolean(e.css),'Either "code" or "css" must be specified'),this.code=e.code,this.css=e.css}getCode(){return ie.ofNullable(this.code)}getCss(){return ie.ofNullable(this.css)}isReadyToApply(){return!0}}function Ge(e){return e.replace(/['\\]/g,(e=>"\\"+e))}function je(e,t=!0){return`document.querySelectorAll('${Ge(e)}').length ${t?"> 0":"=== 1"}`}function Be(e){const t=document.querySelectorAll(e),i=null==t?void 0:t[0];return 1===t.length&&void 0!==i?ie.of(i):ie.empty()}class He extends $e{constructor(e){super(e),le(this,"elementType"),le(this,"targetPosition"),le(this,"idAttribute"),this.targetPosition=e.targetPosition,this.elementType=e.elementType,this.idAttribute=e.idAttribute}getElementType(){return this.elementType}getTargetPosition(){return this.targetPosition}getIdAttribute(){return this.idAttribute}getTargetElement(){return Be(this.targetPosition.selector)}isReadyToApply(){return this.getTargetElement().isPresent()}}class Ke extends He{constructor(e){super(e),le(this,"size"),this.size=e.size}getSize(){return this.size}}class qe extends $e{constructor(e){super(e),le(this,"targetPosition"),le(this,"selector"),le(this,"moveId"),this.targetPosition=e.targetPosition,this.selector=e.selector,this.moveId=e.moveId}getTargetPosition(){return this.targetPosition}getSelector(){return this.selector}getMoveId(){return this.moveId}getSelectorElement(){return Be(this.selector)}getTargetElement(){return Be(this.targetPosition.selector)}isReadyToApply(){return this.getTargetElement().isPresent()&&this.getSelectorElement().isPresent()}}var Qe=(e=>(e.ATTRIBUTE="ATTRIBUTE",e.CUSTOM_CODE="CUSTOM_CODE",e.INSERT_ELEMENT="INSERT_ELEMENT",e.MOVE_ELEMENT="MOVE_ELEMENT",e))(Qe||{});const Ye=e=>{if(!ot(e))return!1;const t=e;return"ATTRIBUTE"===t.type&&A(t.selector)&&_t(t.attributes)},Je=e=>Ye(e)&&y(e,["type","selector","attributes","id"]),Ze=new Set(["1","2","3","4","5","6"]),Xe=e=>Ze.has(e),et=e=>{if(!ot(e))return!1;const t=e;return"INSERT_ELEMENT"===t.type&&B(t.elementType)&&T(t.targetPosition)&&b(t.idAttribute)},tt=e=>!!et(e)&&("heading"!==e.elementType||Xe(e.size)),it=["id","type","targetPosition","elementType","size","idAttribute"],st=e=>tt(e)&&y(e,it),nt=e=>p(e)&&e.type===Qe.MOVE_ELEMENT&&E(e.moveId)&&A(e.selector)&&T(e.targetPosition),rt=["id","type","targetPosition","selector","moveId"],at=e=>nt(e)&&y(e,rt),ot=e=>p(e)&&ut(e.type)&&(f(e.id)||b(e.id)),lt=e=>{if(!ot(e))return!1;const t=e,{code:i,css:s}=t;return"CUSTOM_CODE"===t.type&&(void 0!==i||void 0!==s)&&(f(i)||b(i))&&(f(s)||b(s))},ct=e=>lt(e)&&y(e,["type","id","code","css"]),dt=(()=>new Set([Qe.ATTRIBUTE,Qe.CUSTOM_CODE,Qe.INSERT_ELEMENT,Qe.MOVE_ELEMENT]))(),ut=e=>dt.has(e),gt=new Set(de),ht=e=>v(e)&&gt.has(e),mt=e=>p(e)&&b(e.name)&&ht(e.namespace)&&y(e,["name","namespace"]),pt=e=>p(e)&&mt(e.attrDefId)&&v(e.defaultString)&&y(e,["defaultString","attrDefId"]),vt=e=>p(e)&&"attribute"===e.type&&pt(e.value)&&y(e,["type","value"]),bt=e=>p(e)&&"string"===e.type&&b(e.value)&&y(e,["type","value"]),ft=e=>bt(e)||vt(e),Et=e=>v(e)||g(e)&&e.every((e=>ft(e))),_t=e=>!(!p(e)||!f(e.html)&&!Et(e.html)||!f(e.style)&&!v(e.style)||!f(e.className)&&!v(e.className)||!f(e.src)&&!v(e.src)||!f(e.alt)&&!v(e.alt)||!f(e.srcset)&&!v(e.srcset)||!f(e.sizes)&&!v(e.sizes)||!f(e.href)&&!v(e.href)||!f(e.value)&&!v(e.value)||!f(e.placeholder)&&!v(e.placeholder)||!f(e.maxlength)&&!m(e.maxlength)||!f(e.required)&&!h(e.required)||!f(e.poster)&&!v(e.poster)||!f(e.loop)&&!h(e.loop)||!f(e.autoplay)&&!h(e.autoplay)||!f(e.muted)&&!h(e.muted)||!f(e.controls)&&!h(e.controls)||!f(e.css)&&!G(e.css))&&y(e,["html","style","className","src","alt","srcset","sizes","href","css","value","placeholder","maxlength","required","poster","loop","autoplay","muted","controls"]);function yt(e){if(Je(e))return new ze(e);if(ct(e))return new We(e);if(at(e))return new qe(e);if(st(e)){if("heading"===e.elementType)return new Ke(e);return new He(e)}throw new H(`Invalid dom change type ${e.type}`)}class St{constructor(e,t,i,s){var n,r,a,o;le(this,"allVariationsMap",{}),le(this,"id"),le(this,"name"),le(this,"type"),le(this,"state"),le(this,"pages"),le(this,"condition"),le(this,"audiences"),le(this,"realPreconditions"),le(this,"preconditions"),le(this,"dependsOnExperienceIds"),le(this,"dependsOnExperiences",[]),le(this,"realVariations"),le(this,"campaign"),le(this,"ignore"),le(this,"inclusionStickyConfig"),le(this,"variationStickyConfig"),le(this,"boundingSelectors"),le(this,"playbookId"),le(this,"note"),this.id=e,this.name=t.name,this.type=null!=(n=t.type)?n:"cc",this.state=t.state,this.inclusionStickyConfig=i.buildExperienceIncludeStickyConfig(t.sinc),this.variationStickyConfig=i.buildVariationStickyConfig(t.svar),this.ignore=t.ignore,this.playbookId=t.playbookId,this.note=t.note,this.pages=t.pageIds.flatMap((e=>i.getPage(e).toArray())),this.pages.forEach((e=>{e.addExperience(this)})),this.condition=i.buildConditionFromVariationOrExperience(t),this.audiences=ni.addExperienceToAudiences(this),this.dependsOnExperienceIds=null!=(r=t.dependsOnExperienceIds)?r:[],this.dependsOnExperiences=[];const l=[];for(const[c,d]of Object.entries(t.variations)){const e=i.buildVariation(c,d,this);l.push(e),this.allVariationsMap[c]=e}this.realVariations=l,this.boundingSelectors=null!=(a=t.boundingSelectors)?a:[],this.realPreconditions=null!=(o=t.preconditions)?o:[],this.preconditions=[...this.realPreconditions,...this.generatePreconditionsForBoundingSelectors()],this.campaign=s}inflateDependsOnExperiences(e){this.dependsOnExperienceIds.forEach((t=>{const i=e[t];void 0!==i&&this.dependsOnExperiences.push(i)}))}getId(){return this.id}getName(){return this.name}getType(){return this.type}isEnabled(){return"live"===this.state}getState(){return this.state}getPages(){return this.pages}getCondition(){return ie.ofNullable(this.condition)}getAudiences(){return this.audiences}getPreconditions(){return this.preconditions}getBoundingSelectors(){return this.boundingSelectors}getRealPreconditions(){return this.realPreconditions}getDependsOnExperiences(){return this.dependsOnExperiences}getRealVariations(){return this.realVariations}getVariation(e){return ie.ofNullable(this.allVariationsMap[e])}getCampaign(){return this.campaign}getInclusionStickyConfig(){return this.inclusionStickyConfig}getVariationStickyConfig(){return this.variationStickyConfig}getIgnore(){return this.ignore}getPlaybookId(){return ie.ofNullable(this.playbookId)}getNote(){return ie.ofNullable(this.note)}generatePreconditionsForBoundingSelectors(){const e=[];return this.boundingSelectors.forEach((t=>{e.push(je(t))})),e}}class It extends St{constructor(e,t,i,s){super(e,t,i,s),le(this,"logger"),le(this,"trafficAllocation"),this.logger=i.getLogger(),this.trafficAllocation=t.trafficAllocation}static filterExperiences(e){return e.filter((e=>"ab"===e.getType()))}selectVariation(e){let t;for(const[i,s]of Object.entries(this.trafficAllocation))if(e>=s.lowerEndpoint&&e<s.upperEndpoint){t=i;break}return void 0!==t?this.getVariation(t):(this.logger.error(`Could not determine A/B variation for ${e}`,1012,{experienceId:this.getId()}),ie.empty())}getTrafficAllocation(){const e={};for(const[t,i]of Object.entries(this.trafficAllocation))e[t]=__spreadValues({},i);return e}}class Ct extends St{constructor(e,t,i,s){super(e,t,i,s),le(this,"controlVariation");const n=i.buildControlVariation(this);this.controlVariation=n,this.allVariationsMap[n.getId()]=n}static filterExperiences(e){return e.filter((e=>"cc"===e.getType()))}getControlVariation(){return this.controlVariation}}class Tt extends St{constructor(e,t,i,s){super(e,t,i,s),le(this,"logger"),le(this,"variationPriority"),this.logger=i.getLogger(),this.variationPriority=t.variationPriority}static filterExperiences(e){return e.filter((e=>"rbp"===e.getType()))}getPrioritizedVariations(){const e=[];if(void 0!==this.variationPriority)for(const t of this.variationPriority)this.getVariation(t).ifPresent((t=>{e.push(t)})).ifAbsent((()=>{this.logger.debug("Could not find prioritized variation for RBP",1013,{experienceId:this.getId(),variationId:t})}));return e}}class At{constructor(e){le(this,"enabled"),this.enabled=e.enabled}isEnabled(){return this.enabled}}class xt{constructor(e){le(this,"enabled"),le(this,"managedAccounts"),this.enabled=e.enabled,this.managedAccounts=e.managedAccounts}isEnabled(){return this.enabled}getManagedAccounts(){return this.managedAccounts}}class wt{constructor(e){le(this,"enabled"),le(this,"autoConfig"),le(this,"measurementIds"),this.enabled=e.enabled,this.autoConfig=e.autoConfig,this.measurementIds=e.measurementIds}isEnabled(){return this.enabled}isAutoConfig(){return this.autoConfig}getMeasurementIds(){return this.measurementIds}}class kt{constructor(e){le(this,"enabled"),le(this,"autoConfig"),le(this,"trackingIds"),le(this,"dimensionName"),this.enabled=e.enabled,this.autoConfig=e.autoConfig,this.trackingIds=e.trackingIds,this.dimensionName=e.dimensionName}isEnabled(){return this.enabled}isAutoConfig(){return this.autoConfig}getTrackingIds(){return this.trackingIds}getDimensionName(){return ie.ofNullable(this.dimensionName)}}class Ft{constructor(e){le(this,"enabled"),le(this,"munchkinId"),le(this,"fieldsToIngest"),le(this,"listsToIngest"),this.enabled=e.enabled,this.munchkinId=e.munchkinId,this.fieldsToIngest=e.fieldsToIngest,this.listsToIngest=e.listsToIngest}isEnabled(){return this.enabled}getMunchkinId(){return this.munchkinId}getFieldsToIngest(){return this.fieldsToIngest}getListsToIngest(){return this.listsToIngest}}class Pt{constructor(e,t,i,s,n){le(this,"id"),le(this,"name"),le(this,"iEvents"),le(this,"scope"),le(this,"type"),le(this,"countingMethod"),le(this,"goal"),le(this,"page"),le(this,"campaign"),le(this,"customer"),Q(void 0===i||void 0===n),this.id=e.id,this.name=e.name,this.scope=e.scope,this.type=e.type,this.countingMethod=e.countingMethod,this.goal=e.isGoal,this.iEvents=e.eventIds.flatMap((e=>t.getEvent(e).toArray())),this.iEvents.forEach((e=>{e.addMetric(this)})),this.campaign=i,this.page=s,this.customer=n}getId(){return this.id}getName(){return this.name}getIEvents(){return this.iEvents}getScope(){return this.scope}getType(){return this.type}getCountingMethod(){return this.countingMethod}isGoal(){return this.goal}getCampaign(){return ie.ofNullable(this.campaign)}getPage(){return ie.ofNullable(this.page)}getCustomer(){return ie.ofNullable(this.customer)}}class Dt{constructor(e){le(this,"enabled"),this.enabled=e.enabled}isEnabled(){return this.enabled}}const Mt="exists",Nt="notExists";function Ot(e){return t=>t.map((t=>e(t))).orElse(!1)}function Rt(e){switch(e.operator){case"includesAny":return Ot((t=>t.some((t=>e.argument.includes(t)))));case"excludesAll":return Ot((t=>!t.some((t=>e.argument.includes(t)))));case Mt:return e=>e.isPresent();case Nt:return e=>!e.isPresent();default:throw new Error(`Unknown array enum operator: ${e.operator}`)}}function Lt(e){switch(e.operator){case"includesAny":return Ot((t=>t.some((t=>e.argument.includes(t)))));case Mt:return e=>e.isPresent();case Nt:return e=>!e.isPresent();default:throw new Error(`Unknown array string operator: ${e.operator}`)}}function Ut(e){switch(e.operator){case"isTrue":return Ot((e=>e));case"isFalse":return Ot((e=>!e));case Mt:return e=>e.isPresent();case Nt:return e=>!e.isPresent();default:throw new Error(`Unknown boolean operator: ${e.operator}`)}}function Vt(e){switch(e.operator){case"eq":return Ot((t=>t===e.argument));case"ne":return Ot((t=>t!==e.argument));case Mt:return e=>e.isPresent();case Nt:return e=>!e.isPresent();default:throw new Error(`Unknown enum operator: ${e.operator}`)}}function $t(e){switch(e.operator){case"==":return Ot((t=>t===e.argument));case"!=":return Ot((t=>t!==e.argument));case">":return Ot((t=>t>e.argument));case"<":return Ot((t=>t<e.argument));case">=":return Ot((t=>t>=e.argument));case"<=":return Ot((t=>t<=e.argument));case Mt:return e=>e.isPresent();case Nt:return e=>!e.isPresent();default:throw new Error(`Unknown number operator: ${e.operator}`)}}function zt(e){switch(e.operator){case"eq":return Ot((t=>t===e.argument));case"ne":return Ot((t=>t!==e.argument));case"substr":return Ot((t=>t.includes(e.argument)));case"startsWith":return Ot((t=>t.startsWith(e.argument)));case"endsWith":return Ot((t=>t.endsWith(e.argument)));case"regex":return Ot((t=>new RegExp(e.argument).test(t)));case Mt:return e=>e.isPresent();case Nt:return e=>!e.isPresent();default:throw new Error(`Unknown string operator: ${e.operator}`)}}function Wt(e){switch(e.operator){case"withinPastDuration":return Ot((t=>{const i=/^P(\d+)D$/.exec(e.argument);if(void 0===(null==i?void 0:i[1]))throw new Error(`Invalid unix time operator duration: ${e.argument}`);const s=24*Number(i[1])*60*60*1e3;return t>=Date.now()-s}));case"inBetween":return Ot((t=>{const[i,s]=e.argument;return t>=i&&t<s}));case Mt:return e=>e.isPresent();case Nt:return e=>!e.isPresent();default:throw new Error(`Unknown unix time operator: ${e.operator}`)}}const Gt=e=>{const t=/[|\\{}()[\]^$+*?.-]/g;return e.replace(t,"\\$&")};class jt{constructor(e){le(this,"includeSubdomains"),le(this,"domain"),le(this,"port"),this.includeSubdomains=e.includeSubdomains,this.domain=e.domain,this.port=e.port}static isMatchingAllowedDomain(e,t){return new RegExp(`^${e}$`).test(t)}getIncludeSubdomains(){return this.includeSubdomains}getDomain(){return this.domain}getPort(){return ie.ofNullable(this.port)}getDomainAndPort(){return void 0===this.port?this.domain:`${this.domain}:${this.port}`}isOriginAllowed(e){const t=this.getDomainAndPort();let i="https?://";return i+=this.includeSubdomains?"([^.]+\\.)?":"(www\\.)?",i+=Gt(t),jt.isMatchingAllowedDomain(i,e)}}class Bt{constructor(e,t,i){var s,n;le(this,"logger"),le(this,"id"),le(this,"name"),le(this,"type"),le(this,"state"),le(this,"iEvents",[]),le(this,"experiences",[]),le(this,"metrics",[]),le(this,"code"),le(this,"timeBudget"),le(this,"changes"),this.logger=i.getLogger(),this.id=e,this.name=t.name,this.type=null!=(s=t.type)?s:"matching",void 0!==t.code&&(this.code=t.code),void 0!==t.timeBudget&&(this.timeBudget=t.timeBudget);const r=[];void 0!==t.changes&&t.changes.forEach((e=>{r.push(i.buildDomChange(e))})),this.changes=r,this.state=null!=(n=t.state)?n:"live"}addEvent(e){this.iEvents.push(e)}addMetric(e){this.metrics.push(e)}addExperience(e){this.experiences.push(e)}getId(){return this.id}getName(){return this.name}getType(){return this.type}getState(){return this.state}getCode(){return ie.ofNullable(this.code)}getChanges(){return[...this.changes]}getExperiences(){return[...this.experiences]}getEvents(){return[...this.iEvents]}getTimeBudgetMs(){return ie.ofNullable(this.timeBudget)}getMetrics(){return[...this.metrics]}getMetric(e){const t=this.metrics.filter((t=>t.getId()===e));return 0===t.length?ie.empty():ie.ofNullable(t[0])}executeCode(e){this.logger.debug("executeCode() if present");let t=!0;if(this.getCode().isPresent()){const s=this.getCode().get();try{this.logger.info(`Page ${this.id} code running`),t=e(s),this.logger.info(`Page ${this.id} code result => ${t}`)}catch(i){const e=Pe(i);t=!1,e.message=`Page (${this.id}) code execution failed `+e.message,this.logger.error(e,1009,{pageId:this.id})}}return t}}class Ht extends Bt{constructor(e,t,i){var s;super(e,t,i),le(this,"templateUrl"),le(this,"paramName"),this.templateUrl=t.templateUrl,this.paramName=null!=(s=t.paramName)?s:Ht.defaultParamName}static filterPages(e){return e.filter((e=>"landing"===e.getType()))}static get defaultParamName(){return"page"}getTemplateUrl(){return this.templateUrl}getParamName(){return this.paramName}getPreviewUrl(){const{name:e,value:t}=this.determineLandingParam(),i=`${encodeURIComponent(e)}=${encodeURIComponent(t)}`,s=this.templateUrl.indexOf("?");if(-1!==s)return this.templateUrl.slice(0,s+1)+i+"&"+this.templateUrl.slice(s+1);const n=this.templateUrl.indexOf("#");return-1!==n?this.templateUrl.slice(0,n)+"?"+i+this.templateUrl.slice(n):this.templateUrl+"?"+i}matches(e,t){this.logger.group("check page matches");try{const i=new URL(e),s=new URL(this.templateUrl);let n=!0;s.searchParams.forEach(((e,t)=>{i.searchParams.getAll(t).includes(e)||(n=!1)}));const r=ie.ofNullable(s.hash).map((e=>e===i.hash)).orElse(!0),{name:a,value:o}=this.determineLandingParam(),l=i.searchParams.getAll(a).includes(o),c=i.protocol===s.protocol&&i.host===s.host&&i.port===s.port&&i.pathname===s.pathname&&n&&l&&r,d=this.executeCode(t);return this.logger.debug(`didMatch: ${c.toString()}, didPassCode: ${d.toString()}`),this.logger.groupEnd(),c&&d}catch(i){const e=Pe(i);return e.message="Could not parse URL\n"+e.message,this.logger.warn(e,1018,{pageId:this.getId()}),!1}}determineLandingParam(){return{name:this.getParamName(),value:this.getName().trim().replace(/[^\w\-._~!'()*]+/g,"-")}}}class Kt extends Bt{constructor(e,t,i){super(e,t,i),le(this,"urls"),le(this,"previewUrl");const s=[];t.urls.forEach((e=>{s.push(i.buildUrl(e))})),this.urls=s,this.previewUrl=t.previewUrl}static filterPages(e){return e.filter((e=>"matching"===e.getType()))}getPreviewUrl(){return this.previewUrl}getUrls(){return this.urls}matches(e,t){this.logger.group("check page matches");const i=this.urls.some((t=>{this.logger.group("check url");const i=t.matches(e);return this.logger.groupEnd(),i})),s=this.executeCode(t);return this.logger.debug(`didMatch: ${i.toString()}, didPassCode: ${s.toString()}`),this.logger.groupEnd(),i&&s}}class qt{constructor(e){le(this,"enabled"),le(this,"objectsToIngest"),this.enabled=e.enabled,this.objectsToIngest=e.objectsToIngest}isEnabled(){return this.enabled}getObjectsToIngest(){return this.objectsToIngest}}class Qt{constructor(e){le(this,"enabled"),le(this,"eventName"),this.enabled=e.enabled,this.eventName=e.dim}isEnabled(){return this.enabled}getEventName(){return this.eventName}}class Yt{constructor(e){le(this,"pixel"),this.pixel=e.pixel}isPixelEnabled(){return this.pixel}}class Jt{constructor(e){le(this,"enabled"),le(this,"oemEnabled"),this.enabled=e.enabled,this.oemEnabled=e.oemEnabled}isEnabled(){return this.enabled}isOemEnabled(){return this.oemEnabled}}class Zt extends Pt{constructor(e,t,i,s,n){super(e,t,i,s,n),le(this,"valueType"),this.valueType=e.valueType}getValueType(){return this.valueType}}class Xt extends Zt{constructor(e,t,i,s,n){super(e,t,i,s,n),le(this,"value"),this.value=e.value}getValue(){return this.value}}class ei{constructor(e,t,i){this.sticky=e,this.relativeExpirationTimeSec=t,this.absoluteExpirationTimeSec=i}isSticky(){return this.sticky}getRelativeExpirationTimeSec(){return ie.ofNullable(this.relativeExpirationTimeSec)}getAbsoluteExpirationTimeSec(){return ie.ofNullable(this.absoluteExpirationTimeSec)}isExpired(e,t){return void 0!==this.absoluteExpirationTimeSec&&t<this.absoluteExpirationTimeSec||void 0!==this.relativeExpirationTimeSec&&t+this.relativeExpirationTimeSec<e}}const ti="118";class ii{constructor(e,t){le(this,"logger"),le(this,"value"),le(this,"match"),this.logger=t.getLogger(),this.value=e.value,this.match=e.match,Q(void 0!==this.match,"invalid match type: "+e.match)}static simplifyUrl(e){let t=e;const i=t.indexOf("?");i>0&&(t=t.slice(0,Math.max(0,i)));const s=t.indexOf("#");s>0&&(t=t.slice(0,Math.max(0,s))),t.endsWith("/")&&(t=t.slice(0,Math.max(0,t.length-1)));const n=/^(?:https?:\/\/)?(?:www\.)?(.+)$/.exec(t);return void 0!==(null==n?void 0:n[1])&&(t=n[1]),t}getMatch(){return this.match}getValue(){return this.value}matches(e){let t=!1;switch(this.logger.debug("checking match: "+this.match+", value: "+this.value),this.match){case"simple":t=ii.simplifyUrl(this.value)===ii.simplifyUrl(e);break;case"regex":{const i=new RegExp(this.value);t=Boolean(i.test(e));break}case"exact":t=e===this.value;break;case"substring":t=e.includes(this.value);break;default:this.logger.error(`Unknown url match type: ${this.match}`,1010)}return this.logger.debug(t.toString()),t}}class si{constructor(e,t,i,s){le(this,"id"),le(this,"name"),le(this,"state"),le(this,"condition"),le(this,"audiences"),le(this,"preconditions"),le(this,"code"),le(this,"redirect"),le(this,"css"),le(this,"changes"),le(this,"experience"),le(this,"playbookTemplateId"),this.id=e,this.name=t.name,this.state=t.state,this.preconditions=t.preconditions,void 0!==t.code&&(this.code=t.code),void 0!==t.redirect&&(this.redirect=t.redirect),void 0!==t.css&&(this.css=t.css),this.condition=i.buildConditionFromVariationOrExperience(t),this.audiences=ni.addVariationToAudiences(this);const n=[];void 0!==t.changes&&t.changes.forEach((e=>{n.push(i.buildDomChange(e))})),this.changes=n,this.experience=s,this.playbookTemplateId=t.playbookTemplateId}getId(){return this.id}getName(){return this.name}isEnabled(){return"live"===this.state}getState(){return this.state}getCode(){return ie.ofNullable(this.code)}getCss(){return ie.ofNullable(this.css)}getRedirect(){return ie.ofNullable(this.redirect)}getPreconditions(){return this.preconditions}getCondition(){return ie.ofNullable(this.condition)}getAudiences(){return this.audiences}getChanges(){return this.changes}isTypeChange(){return this.getChanges().length>0}isRedirect(){return this.getRedirect().isPresent()}getExperience(){return this.experience}getTrafficAllocation(){if(this.experience instanceof It){const e=this.experience.getTrafficAllocation()[this.id];if(void 0!==e)return ie.of(__spreadValues({},e))}return ie.empty()}getPlaybookTemplateId(){return ie.ofNullable(this.playbookTemplateId)}}class ni{constructor(e){le(this,"logger"),le(this,"experienceMap",{}),le(this,"pageMap",{}),le(this,"audienceMap",{}),le(this,"eventMap",{}),this.logger=e}static buildStickyConfiguration(e,t){let i,s,n;return void 0!==e&&(void 0!==e.s&&(i=e.s),void 0!==e.r&&(s=e.r),void 0!==e.a&&(n=e.a)),void 0===i&&(i=t.s),void 0===s&&void 0!==t.r&&(s=t.r),void 0===n&&void 0!==t.a&&(n=t.a),new ei(i,s,n)}static addExperienceToAudiences(e){const t=[];return e.getCondition().ifPresent((i=>{if(i instanceof Se)t.push(ni.addExperienceToAudience(e,i));else if(i instanceof ye||i instanceof Ae)i.getConditions().forEach((i=>{if(i instanceof Se)t.push(ni.addExperienceToAudience(e,i));else if(i instanceof Te){const s=i.getCondition();s instanceof Se&&(s.getAudience().addExperience(e),t.push(s.getAudience()))}}));else if(i instanceof Te){const s=i.getCondition();s instanceof Se&&(s.getAudience().addExperience(e),t.push(s.getAudience()))}})),t}static addVariationToAudiences(e){const t=[];return e.getCondition().ifPresent((i=>{if(i instanceof Se)t.push(ni.addVariationToAudience(e,i));else if(i instanceof ye||i instanceof Ae)i.getConditions().forEach((i=>{if(i instanceof Se)t.push(ni.addVariationToAudience(e,i));else if(i instanceof Te){const s=i.getCondition();s instanceof Se&&(s.getAudience().addVariation(e),t.push(s.getAudience()))}}));else if(i instanceof Te){const s=i.getCondition();s instanceof Se&&(s.getAudience().addVariation(e),t.push(s.getAudience()))}})),t}static addExperienceToAudience(e,t){const i=t.getAudience();return t.getAudience().addExperience(e),i}static addVariationToAudience(e,t){const i=t.getAudience();return t.getAudience().addVariation(e),i}static audienceIdToConditionJson(e){let t=!1,i=e;e.startsWith("!")&&(t=!0,i=e.slice(1));const s={audienceId:i,type:"audience"};let n=s;return t&&(n={type:"logic-not",condition:s}),n}getLogger(){return this.logger}buildCustomer(e){const t=new Ue(e,this);return t.getCampaigns().forEach((e=>{e.getExperiences().forEach((e=>{e.inflateDependsOnExperiences(this.experienceMap)}))})),t}buildCollaborator(e){return new ke(e)}buildCrossOrigin(e){return new Fe(e)}buildOrigin(e){return new jt(e)}buildPage(e,t){const i=this.pageMap[e];if(void 0!==i)return this.logger.warn(`Trying to build page twice ${e}`,1e3,{pageId:e}),i;const s=this.buildTypedPage(e,t);return this.pageMap[e]=s,s}buildTypedPage(e,t){return"matching"===t.type?new Kt(e,t,this):"landing"===t.type?new Ht(e,t,this):new Kt(e,t,this)}getPage(e){return ie.ofNullable(this.pageMap[e]).ifAbsent((()=>{this.logger.error(`Could not find page in builder map ${e}`,1001,{pageId:e})}))}buildAudience(e,t){const i=this.audienceMap[e];if(void 0!==i)return this.logger.warn(`Trying to build audience twice ${e}`,1002,{audienceId:e}),i;const s=new xe(e,t,this);return this.audienceMap[e]=s,s}buildConditionFromVariationOrExperience({audienceIds:e,condition:t}){const i=[];if(void 0!==e&&e.length>0&&e.forEach((e=>{i.push(ni.audienceIdToConditionJson(e))})),void 0!==t&&("logic-and"===t.type?i.push(...t.conditions):i.push(t)),0===i.length)return;const[s]=i;return 1===i.length&&void 0!==s?this.buildCondition(s):this.buildCondition({conditions:i,type:"logic-and"})}buildCondition(e,t){switch(e.type){case"logic-not":return new Te(e,this);case"logic-and":return new ye(e,this);case"logic-or":return new Ae(e,this);case"comparison-number":return new Ce(e,new ce(e.attrDefId),$t({operator:e.operator,argument:e.value}));case"comparison-string":return new Ce(e,new ce(e.attrDefId),zt({operator:e.operator,argument:e.value}));case"comparison-enum":return new Ce(e,new ce(e.attrDefId),Vt({operator:e.operator,argument:e.value}));case"comparison-boolean":return new Ce(e,new ce(e.attrDefId),Ut({operator:e.operator,argument:void 0}));case"comparison-array-string":return new Ce(e,new ce(e.attrDefId),Lt({operator:e.operator,argument:e.value}));case"comparison-array-enum":return new Ce(e,new ce(e.attrDefId),Rt({operator:e.operator,argument:e.value}));case"audience":return new Se(e,this,t);case"code":return new Ie(e);case"activity":return new _e(e,this.buildActivityFilter(e.filter),(()=>this.buildAggregator(e.aggregation)),$t(e.operation),this.getLogger());default:throw new Error(`Unknown ConditionType: ${e.type}`)}}buildActivityFilter(e){switch(e.type){case"logic-not":return new be(e,this);case"logic-and":return new pe(e,this);case"logic-or":return new fe(e,this);case"comparison-number":return new ve(this.getActivityPathValue(e.fieldName,["number"]),$t(e.operation));case"comparison-string":return new ve(this.getActivityPathValue(e.fieldName,["string"]),zt(e.operation));case"comparison-enum":return new ve(this.getActivityPathValue(e.fieldName,["string"]),Vt(e.operation));case"comparison-array-enum":return new ve(this.getActivityPathValue(e.fieldName,["array-enum"]),Rt(e.operation));case"comparison-unix-time":return new ve(this.getActivityPathValue(e.fieldName,["number"]),Wt(e.operation));default:throw new Error(`Unknown activity filter type: ${e.type}`)}}buildAggregator(e){switch(e.type){case"count":return new ue;case"sum":return new me(this.getActivityPathValue(e.fieldName,["number"]));case"mean":return new he(this.getActivityPathValue(e.fieldName,["number"]));case"countDistinct":return new ge(this.getActivityPathValue(e.fieldName,["string","number"]));default:throw new Error(`Unknown aggregator type: ${e.type}`)}}getAudience(e){return ie.ofNullable(this.audienceMap[e]).orElseRun((()=>(this.logger.error(`Could not find audience in builder map ${e}`,1003,{audienceId:e}),new xe(e,{name:`Missing Audience ${e}`,code:'throw new Error("Missing audience");'},this))))}buildEvent(e,t){const i=this.eventMap[e];if(void 0!==i)return this.logger.warn(`Trying to build event twice ${e}`,1004,{eventId:e}),i;const s=this.buildTypedEvent(e,t);return this.eventMap[e]=s,s}buildTypedEvent(e,t){if("click"===t.type)return new Me(e,t,this);if("view"===t.type)return new Le(e,t,this);if("custom"===t.type)return new Ne(e,t,this);if("shopify"===t.type)return new Re(e,t,this);if("marketo"===t.type)return new Oe(e,t,this);throw new H(`Invalid event type ${t.type}`)}getEvent(e){return ie.ofNullable(this.eventMap[e]).ifAbsent((()=>{this.logger.error(`Could not find event in builder map ${e}`,1005,{eventId:e})}))}buildCampaign(e,t,i){return new we(e,t,this,i)}buildExperience(e,t,i){const s=this.experienceMap[e];if(void 0!==s)return this.logger.warn(`Trying to build experience twice ${e}`,1006,{experienceId:e}),s;const n=this.buildTypedExperience(e,t,i);return this.experienceMap[e]=n,n}buildTypedExperience(e,t,i){return"ab"===t.type?new It(e,t,this,i):"rbp"===t.type?new Tt(e,t,this,i):new Ct(e,t,this,i)}buildMetric(e,t,i,s){return Q(Boolean(t)&&void 0===s&&void 0===i||Boolean(s)&&void 0===t&&void 0===i||Boolean(i)&&void 0===s&&void 0===t),"value"===e.type?"static"===e.valueType?new Xt(e,this,t,i,s):new Zt(e,this,t,i,s):new Pt(e,this,t,i,s)}buildUrl(e){return new ii(e,this)}buildVariation(e,t,i){return new si(e,t,this,i)}buildControlVariation(e){const t={name:"Intellimize Control",state:"live",preconditions:[]};return this.buildVariation(ti,t,e)}buildControlStickyConfig(e){return ni.buildStickyConfiguration(e,{s:!0})}buildExperienceIncludeStickyConfig(e){return ni.buildStickyConfiguration(e,{s:!0})}buildVariationStickyConfig(e){return ni.buildStickyConfiguration(e,{s:!0,r:302400})}buildGoogleUniversalAnalyticsIntegration(e){return new kt(e)}buildGoogleAnalytics4Integration(e){return new wt(e)}buildSegmentIntegration(e){return new Qt(e)}buildMixpanelIntegration(e){return new Dt(e)}buildMarketoIntegration(e){return new Ft(e)}buildSalesforceIntegration(e){return new qt(e)}buildShopifyIntegration(e){return new Yt(e)}buildFirmographicIntegration(e){return new At(e)}buildSixsenseIntegration(e){return new Jt(e)}buildGoogleAdsIntegration(e){return new xt(e)}buildDemandbaseIntegration(e){return new Ve(e)}buildDomChange(e){return yt(e)}getActivityPathValue(e,t){return i=>{let s=e,n=i;for(;void 0!==n&&void 0!==s;){const i=s.split(".");if(!(i.length>1&&void 0!==i[0])){const i=n[s];let r=typeof i;return g(i)&&i.every((e=>"string"==typeof e))&&(r="array-enum"),t.includes(r)?ie.ofNullable(i):(void 0!==i&&this.logger.warn(`Field "${e}" is not an allowed type (wanted ${t.join(", ")}; found ${r})`,1017),ie.empty())}n=n[i[0]],s=i.slice(1).join(".")}return ie.empty()}}}const ri="imize-move-id";var ai=function e(t){return Object.freeze(t),Object.getOwnPropertyNames(t).forEach((function(i){!t.hasOwnProperty(i)||null===t[i]||"object"!=typeof t[i]&&"function"!=typeof t[i]||Object.isFrozen(t[i])||e(t[i])})),t};const oi=ie.ofNullable("v4.ceca795c").orElse("NA"),li=1e3,ci=50,NO_PROGRESS_TOLERANCE_TIME_MS=48e4,di=1800,ui=86400,gi=3600,hi=500,mi=1e3,pi="api.intellimize.co",vi="log.intellimize.co",bi="intellimize_api_",fi="intellimize_attributes_",Ei="intellimize_integrations_",_i="intellimize_",yi="intellimize_policy_",Si="intellimize_server_context_",Ii="intellimize_activity_",Ci="intellimize_user_",Ti="intellimize_opt_out_",Ai="_mkto_trk",xi=i.LogLevel.WARN,wi=i.LogLevel.OFF,ki=["utt","utm","uts","utcn","utcm"],Fi="mkt_tok",Pi=0,Di=2;function Mi(e,t,i){try{return Ni(e,t,i)}catch(s){return"CAN_NOT_SERIALIZE"}}function Ni(e,t,i){let s;if(void 0!==Array.prototype.toJSON&&"[3]"!==JSON.stringify([3])){const n=Array.prototype.toJSON;delete Array.prototype.toJSON,s=JSON.stringify(e,t,i),Array.prototype.toJSON=n}else s=JSON.stringify(e,t,i);return s}function Oi(e){return JSON.parse(e)}function Ri(e){const t={type:e.type,target:Ui(e.target)};return e.addedNodes&&e.addedNodes.length>0&&(t.addedNodes=Array.prototype.map.call(e.addedNodes,Ui)),e.removedNodes&&e.removedNodes.length>0&&(t.removedNodes=Array.prototype.map.call(e.removedNodes,Ui)),e.attributeName&&(t.attributeName=e.attributeName),e.oldValue&&(t.oldValue=e.oldValue),Ni(t)}function Li(e){return Ni(Ui(e))}function Ui(e){const t={nodeName:e.nodeName};return null!==e.textContent&&e.textContent.length<500&&(t.textContent=e.textContent),e instanceof Element&&(e.id&&(t.id=e.id),e.classList&&e.classList.length>0&&(t.classList=e.classList),e.attributes&&e.attributes.length>0&&(t.attributes=Vi(e.attributes))),t}function Vi(e){const t=e.length,i=[];for(let s=0;s<t;s+=1){const t=e.item(s);null!==t&&i.push({name:t.name,value:t.value})}return i}function $i(e,t){const i=Gi(e,encodeURIComponent(t));return e.getWindow().btoa(i)}function zi(e,t){const i=e.getWindow().atob(t),s=Gi(e,i);return decodeURIComponent(s)}function Wi(e,t){return Oi(zi(e,t))}function Gi(e,t){const i=[...e.getWindow().atob("YmdKTnQ=")],s=[];for(let n=0;n<t.length;n++){const e=t.codePointAt(n)^i[n%i.length].codePointAt(0);s.push(String.fromCodePoint(e))}return s.join("")}function ji(e){return e.getWindow().atob("Y1B1YmdKTnQ=")}function Bi(e){let t;if(void 0!==e)t=e;else{if("undefined"==typeof window)return i.NO_OP_LOGGER;t=window}const s=Qi(t);return s===i.LogLevel.OFF?i.NO_OP_LOGGER:"group"in t.console?new Hi(t,s):new Ki(t,s)}class Hi extends i.GroupConsoleLogger{constructor(e,t){super(e.console,t),__publicField(this,"idebFilters"),this.idebFilters=Xi(e)}debug(e,t,i,s){qi(this.idebFilters,s)&&super.debug(e,t,i)}info(e,t,i,s){qi(this.idebFilters,s)&&super.info(e,t,i)}warn(e,t,i,s){qi(this.idebFilters,s)&&super.warn(e,t,i)}error(e,t,i,s){qi(this.idebFilters,s)&&super.error(e,t,i)}group(e,t){qi(this.idebFilters,t)&&super.group(e)}groupEnd(e){qi(this.idebFilters,e)&&super.groupEnd()}time(e,t){qi(this.idebFilters,t)&&super.time(e)}timeEnd(e,t){qi(this.idebFilters,t)&&super.timeEnd(e)}}class Ki extends i.BasicConsoleLogger{constructor(e,t){super(e.console,t),__publicField(this,"idebFilters"),this.idebFilters=Xi(e)}debug(e,t,i,s){qi(this.idebFilters,s)&&super.debug(e,t,i)}info(e,t,i,s){qi(this.idebFilters,s)&&super.info(e,t,i)}warn(e,t,i,s){qi(this.idebFilters,s)&&super.warn(e,t,i)}error(e,t,i,s){qi(this.idebFilters,s)&&super.error(e,t,i)}group(e,t){qi(this.idebFilters,t)&&super.group(e)}groupEnd(e){qi(this.idebFilters,e)&&super.groupEnd()}time(e,t){qi(this.idebFilters,t)&&super.time(e)}timeEnd(e,t){qi(this.idebFilters,t)&&super.timeEnd(e)}}function qi(e,t){const i=[],s=[];for(const n of e)n.startsWith("!")?s.push(n.slice(1)):i.push(n);return void 0===t&&0===i.length||(!0===(null==t?void 0:t.some((e=>i.includes(e))))||!0!==(null==t?void 0:t.some((e=>s.includes(e))))&&(!(i.length>0)||void 0!==t&&!t.every((e=>!i.includes(e)))))}function Qi(e){let t=Yi(e);return t.isPresent()?t.get():(t=Ji(e),t.isPresent()?t.get():(t=Zi(e),t.isPresent()?t.get():wi))}function Yi(e){var t,i;return ie.ofNullable(null==(i=null==(t=null==e?void 0:e.location)?void 0:t.search)?void 0:i.slice(1)).flatMap((e=>ie.ofNullable(/(?:^|\?|&)ideb=([0-5])(?:$|&|#)/.exec(e)).map((e=>Number.parseInt(e[1],10)))))}function Ji(e){var t;return ie.ofNullable(null==(t=null==e?void 0:e.localStorage)?void 0:t.getItem("ideb")).flatMap((e=>ie.ofNullable(/^([0-5])$/.exec(e)).map((e=>Number.parseInt(e[1],10)))))}function Zi(e){var t;return ie.ofNullable(null==(t=null==e?void 0:e.iOverride)?void 0:t.logLevel)}function Xi(e){var t;return ie.ofNullable(null==(t=null==e?void 0:e.localStorage)?void 0:t.getItem("ideb_filters")).map((e=>e.split(","))).orElse([])}function es(e){return"[object Array]"===Object.prototype.toString.call(e)}function ts(e){return"[object Arguments]"===Object.prototype.toString.call(e)}function is(e){return"[object Object]"===Object.prototype.toString.call(e)}function ss(e){return"[object Function]"===Object.prototype.toString.call(e)}function ns(e){return"[object Error]"===Object.prototype.toString.call(e)}function rs(e){return"[object HTMLImageElement]"===Object.prototype.toString.call(e)}function as(e,t){const i=[];for(const s of e)t.includes(s)||i.push(s);for(const s of t)e.includes(s)||i.push(s);return i}function os(e){return e.replace(/([a-z\d])([A-Z])/g,"$1-$2").toLowerCase()}function ls(e,t){const i=e.indexOf(t);i>-1&&e.splice(i,1)}function cs(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[t,e])))}function ds(e,t){return`${"https://"}${e}${t}`}function us(e,t){const i=e.getCrossOrigin().isEnabled(),s=e.getOrigins().length>0,n=e.getCrossOrigin().isOriginAllowed(t),r=e.getOrigins().some((e=>e.isOriginAllowed(t)));return i&&s&&n!==r&&fs.error(`Customer crossOrigin ${n} does not match origins ${r} for url ${t}`,251),n||r}function gs(e){return new vs(e)}const hs={[i.LogLevel.OFF]:"o",[i.LogLevel.ERROR]:"e",[i.LogLevel.WARN]:"w",[i.LogLevel.INFO]:"i",[i.LogLevel.DEBUG]:"d",[i.LogLevel.TRACE]:"t"},ms=["audienceId","campaignId","experienceId","variationId","eventId","pageId","changeId"],ps={audienceId:"aid",campaignId:"cmid",experienceId:"eid",variationId:"vid",eventId:"ei",pageId:"pid",changeId:"chid"};class vs{constructor(e){__publicField(this,"minimumLogLevel"),__publicField(this,"customer"),__publicField(this,"environment"),__publicField(this,"serverContext"),__publicField(this,"user"),this.minimumLogLevel=e}static get LOGGING_APP_STRING(){return"client"}static get PATH(){return"/clientlogger"}configureCustomer(e){this.customer=e}configureEnvironment(e){this.environment=e}configureServerContext(e){this.serverContext=e}configureUser(e){this.user=e}getLevel(){return this.minimumLogLevel}error(e,t,s){this.log(i.LogLevel.ERROR,e,t,s)}warn(e,t,s){this.log(i.LogLevel.WARN,e,t,s)}info(e,t,s){this.log(i.LogLevel.INFO,e,t,s)}debug(e,t,s){this.log(i.LogLevel.DEBUG,e,t,s)}group(e){}groupEnd(){}time(e){}timeEnd(e){}log(e,t,i,s){this.minimumLogLevel<=e&&this.send(__spreadProps(__spreadValues(__spreadValues(__spreadValues({},this.buildCommonPayload()),this.entityIdsToPayload(s)),this.messageToPayload(t)),{app:vs.LOGGING_APP_STRING,mc:i,ll:hs[e]}))}buildCommonPayload(){const e={v:oi};return void 0!==this.customer&&(e.cid=this.customer.getId()),void 0!==this.serverContext&&(e.rid=this.serverContext.requestId),void 0!==this.environment&&(e.pvid=this.environment.getPageviewId(),this.environment.getHostingPageUrl().getUrl().ifPresent((t=>{e.hpurl=t})),e.lut=this.environment.getNowUnixTimeMs(),e.ltz=this.environment.getTimeZone()),void 0!==this.user&&(e.uid=this.user.getId()),e}messageToPayload(e){if(ns(e)){const t={m:e.message,en:e.name};return"stack"in e&&void 0!==e.stack&&(t.es=e.stack),t}return{m:e}}entityIdsToPayload(e){const t={};return void 0!==e&&ms.forEach((i=>{void 0!==e[i]&&(t[ps[i]]=e[i])})),t}convertToStringValues(e){return Object.assign({},...Object.entries(e).map((([e,t])=>({[e]:String(t)}))))}send(e){const t=ds(vi,vs.PATH),i=JSON.stringify(this.convertToStringValues(e));void 0===this.environment?navigator.sendBeacon(t,i):this.environment.sendBeacon(t,i)}}class bs{constructor(){__publicField(this,"consoleLogger"),__publicField(this,"serverLogger"),__publicField(this,"isLogging",!1),this.consoleLogger=Bi(),this.serverLogger=gs(xi)}configureCustomer(e){this.serverLogger.configureCustomer(e)}configureEnvironment(e){this.serverLogger.configureEnvironment(e)}configureServerContext(e){this.serverLogger.configureServerContext(e)}configureUser(e){this.serverLogger.configureUser(e)}getLevel(){return this.consoleLogger.getLevel()}error(e,t,i,s){this.isLogging||(this.isLogging=!0,this.consoleLogger.error(e,t,i,s),this.serverLogger.error(e,t,i),this.isLogging=!1)}warn(e,t,i,s){this.isLogging||(this.isLogging=!0,this.consoleLogger.warn(e,t,i,s),this.serverLogger.warn(e,t,i),this.isLogging=!1)}info(e,t,i,s){this.isLogging||(this.isLogging=!0,this.consoleLogger.info(e,t,i,s),this.serverLogger.info(e,t,i),this.isLogging=!1)}debug(e,t,i,s){this.isLogging||(this.isLogging=!0,this.consoleLogger.debug(e,t,i,s),this.serverLogger.debug(e,t,i),this.isLogging=!1)}group(e,t){this.isLogging||(this.isLogging=!0,this.consoleLogger.group(e,t),this.isLogging=!1)}groupEnd(e){this.isLogging||(this.isLogging=!0,this.consoleLogger.groupEnd(e),this.isLogging=!1)}time(e,t){this.isLogging||(this.isLogging=!0,this.consoleLogger.time(e,t),this.isLogging=!1)}timeEnd(e,t){this.isLogging||(this.isLogging=!0,this.consoleLogger.timeEnd(e,t),this.isLogging=!1)}}const fs=new bs,Es="Other";class _s{constructor(e,t,i,s,n,r,a){__publicField(this,"environment"),__publicField(this,"serverContext"),__publicField(this,"attributeStorage"),__publicField(this,"override"),__publicField(this,"customerStorage"),__publicField(this,"integrationDataStorage"),__publicField(this,"user"),__publicField(this,"data"),this.environment=e,this.serverContext=t,this.attributeStorage=i,this.override=s,this.customerStorage=n,this.integrationDataStorage=r,this.user=a,this.reinitialize()}reinitialize(){this.data=this.withAttributeDataOverrides({location:this.initializeLocationData(),utmParams:this.initializeUtmParamData(),userAgent:this.initializeUserAgentData(),dayPart:this.environment.getDayPart(),weekPart:this.environment.getWeekPart(),trafficSource:this.initializeTrafficSourceData(),custom:this.initializeCustomData(),urlParam:this.initializeUrlParamData(),userVisitStatus:this.initializeUserVisitStatusData(),userBucket:this.initializeUserBucketData(),marketo:this.initializeMarketoData(),salesforce:this.initializeSalesforceData(),firmographic:this.initializeFirmographicData(),"6sense":this.initializeSixsenseData(),googleAds:this.initializeGoogleAdsData(),demandbase:this.initializeDemandbaseData()}),fs.debug(`[AttributeData] Initialized: ${Mi(this.data)}`)}getLocationData(){return this.data.location}getUtmParamsData(){return this.data.utmParams}getUserAgentData(){return this.data.userAgent}getDayPartData(){return this.data.dayPart}getWeekPartData(){return this.data.weekPart}getTrafficSourceData(){return this.data.trafficSource}getCustomData(){return this.data.custom}getUrlParamData(){return this.data.urlParam}getUserVisitStatusData(){return this.data.userVisitStatus}getUserBucketData(){return this.data.userBucket}getMarketoData(){return this.data.marketo}getSalesforceData(){return this.data.salesforce}getFirmographicData(){return this.data.firmographic}getSixsenseData(){return this.data["6sense"]}getGoogleAdsData(){return this.data.googleAds}getDemandbaseData(){return this.data.demandbase}getAttributeValue(e){switch(e.getNamespace()){case"standard":switch(e.getName()){case"utm_source":return ie.ofNullable(this.getUtmParamsData().utmSource);case"utm_medium":return ie.ofNullable(this.getUtmParamsData().utmMedium);case"utm_campaign":return ie.ofNullable(this.getUtmParamsData().utmCampaign);case"utm_content":return ie.ofNullable(this.getUtmParamsData().utmContent);case"utm_term":return ie.ofNullable(this.getUtmParamsData().utmTerm);case"country":return ie.ofNullable(this.getLocationData().country);case"state":return ie.ofNullable(this.getLocationData().state);case"timezone":return ie.ofNullable(this.getLocationData().tz);case"device_type":return ie.ofNullable(this.getUserAgentData().deviceType);case"day_part":return ie.ofNullable(this.getDayPartData());case"week_part":return ie.ofNullable(this.getWeekPartData());case"traffic_source":return ie.ofNullable(this.getTrafficSourceData());case"user_visit_status":return ie.ofNullable(this.getUserVisitStatusData());case"user_bucket":return ie.ofNullable(this.getUserBucketData());default:return fs.error(`Standard attribute name (${e.getName()}) not supported`,214),ie.empty()}case"url_param":return ie.ofNullable(this.getUrlParamData()[e.getName()]);case"custom":return ie.ofNullable(this.getCustomData()[e.getName()]);case"marketo":return ie.ofNullable(this.getMarketoData()[e.getName()]);case"salesforce":return ie.ofNullable(this.getSalesforceData()[e.getName()]);case"firmographic":return ie.ofNullable(this.getFirmographicData()[e.getName()]);case"6sense":return ie.ofNullable(this.getSixsenseData()[e.getName()]);case"googleAds":return ie.ofNullable(this.getGoogleAdsData()[e.getName()]);case"demandbase":return ie.ofNullable(this.getDemandbaseData()[e.getName()]);default:return fs.error(`Attribute namespace (${e.getNamespace()}) not supported`,215),ie.empty()}}initializeCustomData(){return this.attributeStorage.getFlattenedCustomAttributes()}initializeUrlParamData(){const e=this.environment.getHostingPageUrl().getAllUrlParamsUnsafe();fs.debug(`[AttributeData] All UrlParamsUnsafe: ${Mi(e)}`);const t={};return Object.keys(e).forEach((i=>{const s=e[i];b(i)&&(t[i]=s)})),t}initializeUserVisitStatusData(){return this.customerStorage.getUserVisitStatus(this.user)}initializeUserBucketData(){return this.user.getUserBucket()}initializeLocationData(){var e,t,i,s;const n=null!=(e=this.serverContext.location)?e:{};return{country:null!=(t=n.country)?t:Es,state:null!=(i=n.state)?i:Es,city:null!=(s=n.city)?s:Es,tz:this.environment.getTimeZone(),dma:n.dma,postal:n.postal}}initializeUserAgentData(){var e,t,i,s,n,r,a,o,l,c;const d=null!=(e=this.serverContext.userAgent)?e:{};let u,g,h;switch(d.deviceClass){case"Desktop":case"Set-top box":case"TV":case"Game Console":default:u="D";break;case"Mobile":case"Phone":case"Handheld Game Console":u="P";break;case"Tablet":case"eReader":u="T"}switch(d.agentName){case"Firefox":case"Gecko":case"Camino":case"SeaMonkey":g="Firefox";break;case"Chrome":case"Chrome Webview":case"Chromium":case"Epiphany":g="Chrome";break;case"Edge":case"Edge Webview":g="Edge";break;case"Safari":case"Mobile Safari":g="Safari";break;case"Internet Explorer":case"IE Mobile":case"Internet Explorer Webview":g="IE";break;default:g=Es}switch(d.osName){case"Mac OS X":h="Macintosh";break;case"Windows Phone":h="WindowsPhone";break;case"Windows NT":case"Windows 9x":case"Windows CE":h="Windows";break;case"Android":h="Android";break;case"Linux":case"Fedora":h="Linux";break;case"iOS":h="iOS";break;default:h=Es}return{deviceType:u,browser:g,os:h,deviceClass:null!=(t=d.deviceClass)?t:Es,deviceName:null!=(i=d.deviceName)?i:Es,deviceBrand:null!=(s=d.deviceBrand)?s:Es,osClass:null!=(n=d.osClass)?n:Es,osName:null!=(r=d.osName)?r:Es,osVersion:null!=(a=d.osVersion)?a:Es,agentClass:null!=(o=d.agentClass)?o:Es,agentName:null!=(l=d.agentName)?l:Es,agentVersionMajor:null!=(c=d.agentVersionMajor)?c:Es}}initializeUtmParamData(){const e=this.attributeStorage.getInternalAttributes("user",ki);return{utmSource:e.uts,utmMedium:e.utm,utmCampaign:e.utcm,utmContent:e.utcn,utmTerm:e.utt}}initializeTrafficSourceData(){const{ts:e}=this.attributeStorage.getInternalAttributes("user",["ts"]);return null!=e?e:"OT"}initializeMarketoData(){return this.integrationDataStorage.getData("marketo").map((e=>null!=e?e:{})).orElse({})}initializeSalesforceData(){return this.integrationDataStorage.getData("salesforce").map((e=>{const t={};return void 0!==e&&Object.entries(e).forEach((([e,i])=>{Object.entries(i).forEach((([i,s])=>{t[`${e}.${i}`]=s}))})),t})).orElse({})}initializeFirmographicData(){return this.integrationDataStorage.getData("firmographic").map((e=>null!=e?e:{})).orElse({})}initializeSixsenseData(){return this.integrationDataStorage.getData("6sense").map((e=>null!=e?e:{})).orElse({})}initializeGoogleAdsData(){return this.integrationDataStorage.getData("googleAds").map((e=>null!=e?e:{})).orElse({})}initializeDemandbaseData(){return this.integrationDataStorage.getData("demandbase").map((e=>{const t={};return void 0!==e&&Object.entries(e).forEach((([e,i])=>{"custom"===e?Object.entries(i).forEach((([e,i])=>{t[`custom.${e}`]=i})):t[e]=i})),t})).map((e=>null!=e?e:{})).orElse({})}withAttributeDataOverrides(e){const t=this.override.getAttributeDataOverrides();return this.overrideObject(e.location,t.location),this.overrideObject(e.utmParams,t.utmParams),this.overrideObject(e.userAgent,t.userAgent),void 0!==t.dayPart&&(e.dayPart=t.dayPart),void 0!==t.weekPart&&(e.weekPart=t.weekPart),void 0!==t.trafficSource&&(e.trafficSource=t.trafficSource),this.overrideObject(e.custom,t.custom),this.overrideObject(e.urlParam,t.urlParam),void 0!==t.userVisitStatus&&(e.userVisitStatus=t.userVisitStatus),void 0!==t.userBucket&&(e.userBucket=t.userBucket),e}overrideObject(e,t){Object.entries(t).forEach((([t,i])=>{void 0!==i&&(e[t]=i)}))}}function ys(e,t,i){const s=e.isPaidTraffic()||t.isPaidTraffic();let n=Cs(e,t,s);return"OT"===n&&(n=Ts(e,t,s)),"OT"===n&&(n=t.getSourceFromAllParams(s)),"OT"===n&&(n=s?"OP":e.getUrl().isPresent()?Ss(e,t,i)?"RC":"OT":"DN"),n}function Ss(e,t,i){const s=Is(e.getUrl().orElse(""),t.getUrl().orElse("")),n=e.getOrigin().map((e=>us(i,e))).orElse(!1);return s||n}function Is(e,t){const i=/(https?):\/\/([^/]+)\/?.*$/.exec(e),s=/(https?):\/\/([^/]+)\/?.*$/.exec(t);return null!==i&&null!==s&&i[1]===s[1]&&i[2]===s[2]}function Cs(e,t,i){return e.isFromEmail()?"EM":e.isFromSocialNetwork()?i||t.isSocialPaid()?"CP":"CO":e.isFromSearchEngine()?i||t.isSearchTagged(e)||e.isSearchPaid()||t.isSearchPaid()?"SP":"SO":"OT"}function Ts(e,t,i){return t.isSocialTagged()?i||t.isSocialPaid()?"CP":"CO":t.isSearchTagged(e)?i||t.isSearchPaid()?"SP":"SO":t.getUrl().isPresent()&&t.isEmailTagged()?"EM":"OT"}function As(e){return"object"==typeof e&&e instanceof Error?e:new Error(e)}class xs{static evalBoolean(e){const t=xs.eval(e);if("boolean"==typeof t)return t;throw new TypeError("Expected boolean response, but got "+typeof t+": "+t)}static evalString(e){const t=xs.eval(e);if("string"==typeof t)return t;throw new TypeError("Expected string response, but got "+typeof t+": "+t)}static eval(e){return fs.info(`eval code: ${e}`),(0,eval)('"use strict";\n'+xs.reformatJqueryCode(e))}static injectCss(e,t,i){fs.info(`inject css: ${e}`);const s=`intellimize-${t}`,n=i.querySelectorAll(`head #${s}`),[r]=n;if(void 0===r){const t=i.createElement("style");t.id=s,t.className="iStyleBlock",t.append(e),i.head.append(t)}else r.innerHTML=e}static executeFunction(e,t){try{e.call(void 0)}catch(i){const e=As(i);e.message=`Caught exception in function callback: ${e.message}`,fs.error(e,t)}}static reformatJqueryCode(e){return`var $ = (window.intellimize && window.intellimize.plugins && window.intellimize.plugins.jquery) ? window.intellimize.plugins.jquery : window.$;\n${e}`}}class ws{constructor(){__publicField(this,"onVariationRecordedCallbackTuples",[])}static updateInternalAttributes(e,t,i){const s=e.getReferrerUrl(),n=e.getHostingPageUrl();if(!Ss(s,n,i)){const r={utcm:"utm_campaign",utcn:"utm_content",utm:"utm_medium",uts:"utm_source",utt:"utm_term"},a=ys(s,n,i);t.setInternalAttributes("user",{ts:a}),t.deleteInternalAttributes("user",ki);const o={};ki.forEach((t=>{const i=r[t],s=e.getUrlParameter(i,(()=>!0));s.isPresent()&&(o[t]=s.get())})),Object.keys(o).length>0&&t.setInternalAttributes("user",o)}}static runCustomerCode(e,t,i){e.getCss().ifPresent((s=>{try{fs.info(`Injecting customer ${e.getId()} css`),xs.injectCss(s,`customer-${e.getId()}`,i),t.setCustomer("css",!0)}catch(n){const i=As(n);i.message=`Customer (${e.getId()}) css injection failed\n`+i.message,fs.error(i,26),t.setCustomer("css",!1)}})),e.getCode().ifPresent((i=>{try{fs.info(`Running customer ${e.getId()} code`),xs.eval(i),t.setCustomer("code",!0)}catch(s){const i=As(s);i.message=`Customer (${e.getId()}) code execution failed\n`+i.message,fs.error(i,13),t.setCustomer("code",!1)}}))}static iE(e){return!e.startsWith('{"')}getVariationRecordedCallbackTuples(){return this.onVariationRecordedCallbackTuples}addVariationRecordedCallbackTuple(e){this.onVariationRecordedCallbackTuples.push(e)}}class ks{constructor(e,t){__publicField(this,"attributeData"),__publicField(this,"activityStorage"),this.attributeData=e,this.activityStorage=t}evalBoolean(e){fs.info(`ConditionEvaluationRuntime.evalBoolean(${e.slice(0,10)})`);const t=xs.evalBoolean(e);return fs.info(`ConditionEvaluationRuntime.evalBoolean() => ${t}`),t}getAttributeValue(e){return this.attributeData.getAttributeValue(e)}getActivities(){return this.activityStorage.getAll()}}const Fs=["mutations"],Ps={debug(e,t,i){fs.debug(e,t,i,Fs)},group(e){fs.group(e,Fs)},groupEnd(){fs.groupEnd(Fs)},time(e){fs.time(e,Fs)},timeEnd(e){fs.timeEnd(e,Fs)}};class Ds{attachObserver(){}detachObserver(){}registerSelectorAndExecute(e,t,i,s){const n=document.querySelectorAll(e);Ps.debug(`Found ${n.length} matching elements`),n.length>0?n.forEach((e=>{Ps.debug(`Processing element: ${Li(e)}`),t(e)})):Ps.debug(`No matching elements for selector: ${e}`)}reset(){}}class Ms{constructor(){__publicField(this,"state",0),this.state=0}markHiddenIfUnknown(){0===this.state&&(this.state=1)}markRevealed(){this.state=2}isHidden(){return 1===this.state}getChangeSelector(e){return e.getType()===Qe.ATTRIBUTE||e.getType()===Qe.MOVE_ELEMENT?ie.of(e.getSelector()):ie.empty()}}class Ns extends Ms{constructor(e){super(),__publicField(this,"experience"),this.experience=e}static getId(e){return`exp-${e.getId()}`}getId(){return Ns.getId(this.experience)}getSelectors(){let e=!1;const t={},i=this.experience.getBoundingSelectors();return this.experience.getRealVariations().forEach((i=>{i.isTypeChange()?i.getChanges().forEach((i=>{this.getChangeSelector(i).ifPresent((e=>{t[e]=!0})),i.getType()===Qe.CUSTOM_CODE&&(e=!0)})):i.isRedirect()?t.body=!0:e=!0})),e&&i.forEach((e=>{t[e]=!0})),Object.keys(t)}getEntityIds(){return{experienceId:this.experience.getId()}}}class Os extends Ms{constructor(e){super(),__publicField(this,"page"),this.page=e}static getId(e){return`page-${e.getId()}`}getId(){return Os.getId(this.page)}getSelectors(){const e={};return this.page.getChanges().forEach((t=>{this.getChangeSelector(t).ifPresent((t=>{e[t]=!0}))})),Object.keys(e)}getEntityIds(){return{pageId:this.page.getId()}}}class Rs{constructor(){__publicField(this,"regions",{})}registerExperience(e){const t=Ns.getId(e);return void 0===this.regions[t]&&(this.regions[t]=new Ns(e)),this.regions[t]}registerPage(e){const t=Os.getId(e);return void 0===this.regions[t]&&(this.regions[t]=new Os(e)),this.regions[t]}getAll(){return Object.values(this.regions)}}const Ls=class{constructor(e,t=!1){__publicField(this,"localWindow"),__publicField(this,"skipRegionHiding"),__publicField(this,"regionRegistry"),__publicField(this,"experienceRegionsHidden",!1),__publicField(this,"pageRegionsHidden",!1),this.localWindow=e,this.skipRegionHiding=t,this.regionRegistry=new Rs}static revealAll(e){Ls._revealDocument(e),Ls._revealAllRegions(e)}static get ANTI_FLICKER_CLASS_NAME(){return"anti-flicker"}static get REGION_TIMEOUT_MS(){return 3e3}static get RENDERING_ATTRIBUTE_NAME(){return`${Ls.ATTRIBUTE_NAME_PREFIX}rendering`}static getRegionAttribute(e){return`${Ls.ATTRIBUTE_NAME_PREFIX}${e.getId()}`}static _revealDocument(e){fs.debug(`Hider.revealDocument() - before:${e.documentElement.className}`),e.documentElement.className=e.documentElement.className.replace(new RegExp(` ?${Ls.ANTI_FLICKER_CLASS_NAME}`,"g"),""),fs.debug(`Hider.revealDocument() - after:${e.documentElement.className}`)}static _revealAllRegions(e){fs.info(`Removing ${Ls.RENDERING_ATTRIBUTE_NAME} attribute`),e.documentElement.removeAttribute(Ls.RENDERING_ATTRIBUTE_NAME)}revealDocument(){Ls._revealDocument(this.localWindow.document)}revealDocumentIfAllRegionsHidden(){this.experienceRegionsHidden&&this.pageRegionsHidden&&this.revealDocument()}startTimedRegionHider(){fs.debug("Hider.startTimedRegionHider()"),this.localWindow.document.documentElement.setAttribute(Ls.RENDERING_ATTRIBUTE_NAME,"true"),this.localWindow.setTimeout((()=>{Ls._revealAllRegions(this.localWindow.document),this.regionRegistry.getAll().forEach((e=>{e.isHidden()&&fs.warn(`Region (${e.getId()}) was hidden at timeout`,209,e.getEntityIds())}))}),Ls.REGION_TIMEOUT_MS)}hideExperiences(e){for(const t of e)fs.debug(`Hider - hide experience ${t.getId()}`),this.regionRegistry.registerExperience(t);this.setRegionHidingCss(),this.experienceRegionsHidden=!0}hidePages(e){for(const t of e)fs.debug(`Hider - hide page ${t.getId()}`),this.regionRegistry.registerPage(t);this.setRegionHidingCss(),this.pageRegionsHidden=!0}revealExperience(e){fs.debug(`Hider - reveal experience ${e.getId()}`),this.revealRegion(this.regionRegistry.registerExperience(e))}revealPage(e){fs.debug(`Hider - reveal page ${e.getId()}`),this.revealRegion(this.regionRegistry.registerPage(e))}revealRegion(e){const t=e.getSelectors();if(t.length>0){const i=this.localWindow.document.querySelectorAll(t.join(", "));Array.prototype.forEach.call(i,(t=>{t.setAttribute(`${Ls.getRegionAttribute(e)}`,"true")}))}e.markRevealed()}setRegionHidingCss(){if(this.skipRegionHiding)return;const e=[];this.regionRegistry.getAll().forEach((t=>{t.getSelectors().forEach((i=>{const s=`html[${Ls.RENDERING_ATTRIBUTE_NAME}] ${i}:not([${Ls.getRegionAttribute(t)}])`;e.push(s,`${s} *`)}))}));const t=e.length>0?`${e.join(", ")} { visibility: hidden !important; }`:"";xs.injectCss(t,"anti-flicker-regions",this.localWindow.document),this.regionRegistry.getAll().forEach((e=>{e.markHiddenIfUnknown()}))}};let Us=Ls;function Vs(){return Ws("xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx")}function $s(){return Ws("xxxx-yxxx-xxxxxxxxxxxx")}function zs(){return Ws("xxxxxxxxxx")}function Ws(e){let t=Date.now();return e.replace(/[xy]/g,(e=>{const i=Math.trunc((t+16*Math.random())%16);return t=Math.floor(t/16),("x"===e?i:3&i|8).toString(16)}))}__publicField(Us,"ATTRIBUTE_NAME_PREFIX","data-intellimize-");const Gs=2,js=1,Bs=js,Hs=class{constructor(){__publicField(this,"mutationObserver"),__publicField(this,"mutationHandlers",{}),__publicField(this,"currentUrl"),this.mutationObserver=new MutationObserver((e=>{if(Object.keys(this.mutationHandlers).length>0){if(Ps.group("MutationObserver.observe() - window.location.href: "+window.location.href),this.currentUrl||(this.currentUrl=window.location.href),this.currentUrl!==window.location.href)return Ps.debug("MutationObserver skip processing since URL changed"),void Ps.groupEnd();Hs.containsValidMutations(e)?(Ps.debug("mutationList contains at least one valid mutation; processing store"),this.processStore()):Ps.debug("mutationList contains no valid mutations; skipping store processing"),Ps.groupEnd()}})),this.reset()}static get CALLBACK_MAX_COUNT(){return 25}static get MISSING_ELEMENT_MAX_COUNT(){return 5}static get CALLBACK_THROTTLE_MS(){return 50}static selectorExists(e){try{return Boolean(document.querySelector(e))}catch(t){return!1}}static isProcessed(e,t){var i,s,n,r;switch(Bs){case js:return"string"==typeof(null==(i=e.imizeObserverProcessed)?void 0:i[t])||!0===(null==(s=e.imizeObserverProcessed)?void 0:s[t])?(Ps.debug('isProcessed (OPT_CHECK_BOOL): imizeObserverProcessed is "true"'),!0):(Ps.debug('isProcessed (OPT_CHECK_BOOL): imizeObserverProcessed is NOT "true"'),!1);case Gs:return"string"==typeof(null==(n=e.imizeObserverProcessed)?void 0:n[t])||!0===(null==(r=e.imizeObserverProcessed)?void 0:r[t])?e.imizeObserverProcessed[t]===e.outerHTML?(Ps.debug("isProcessed (OPT_COMPARE_HTML): imizeObserverProcessed outerHTML matches"),!0):(Ps.debug("isProcessed (OPT_COMPARE_HTML): imizeObserverProcessed outerHTML DOES NOT match"),Ps.debug(`outerHTML: ${e.outerHTML}`),Ps.debug(`imizeObserverProcessed: ${e.imizeObserverProcessed[t]}`),e.imizeObserverProcessed[t]=!1,!1):(Ps.debug("isProcessed (OPT_COMPARE_HTML): imizeObserverProcessed does not exist on the element"),!1);default:return Ps.debug("isProcessed (OPT_ALWAYS_CALLBACK): skipping check"),!1}}static setIsProcessed(e,t){switch(void 0===e.imizeObserverProcessed&&(e.imizeObserverProcessed={}),Bs){case js:e.imizeObserverProcessed[t]=!0;break;case Gs:e.imizeObserverProcessed[t]=e.outerHTML}}static isValidNodeNameMutation(e){var t;if(Hs.INVALID_NODE_NAMES.includes(e.target.nodeName))return Ps.debug(`Invalid mutation - Node is one of ${Mi(Hs.INVALID_NODE_NAMES)}`),!1;if(!0===(null==(t=e.attributeName)?void 0:t.startsWith(Us.ATTRIBUTE_NAME_PREFIX)))return!1;if("childList"===e.type){if(Array.prototype.every.call([...Array.prototype.slice.call(e.addedNodes),...Array.prototype.slice.call(e.removedNodes)],(e=>Hs.INVALID_NODE_NAMES.includes(e.nodeName))))return Ps.debug("Invalid mutation - All nodes in child list contain one of "+Mi(Hs.INVALID_NODE_NAMES)),!1}return!0}static isUnchangedAttributeMutation(e){const{target:t,type:i,attributeName:s,oldValue:n}=e;if(t instanceof HTMLElement&&"attributes"===i&&s){const e=t.attributes.getNamedItem(s);if(null!==e&&e.value===n)return Ps.debug(`Invalid mutation - value for attribute "${s}" hasn't changed (value: "${n}")`),!0}return!1}static isStatusModuleNode(e){const t="intellimize____status-module-root";return e instanceof HTMLElement&&(e.id===t?(Ps.debug("Invalid mutation - Node is part of the status module"),!0):null!==e.parentNode&&Hs.isStatusModuleNode(e.parentNode))}static containsValidMutations(e){Ps.group("containsValidMutations()");const t=e.every((e=>(Ps.debug(`Mutation: ${Ri(e)}`),!(Hs.isValidNodeNameMutation(e)&&!Hs.isUnchangedAttributeMutation(e)&&!Hs.isStatusModuleNode(e.target))||(Ps.debug("Found valid mutation"),!1))));return Ps.groupEnd(),!t}registerSelectorAndExecute(e,t,i,s){if(!Hs.selectorExists(e))throw new Error(`Selector "${e}" does not exist in the DOM`);const n=Vs();this.mutationHandlers[n]={selector:e,callback:t,options:i,startTime:new Date,mutationCnt:0,missingElementCnt:0,entityIds:s},Ps.group(`registerSelectorAndExecute(${n})`),Ps.debug("Manually calling handleObservation()"),this.detachObserver(),this.handleObservation(n,!1),this.attachObserver(),Ps.groupEnd()}attachObserver(){Ps.debug("Attaching observer to document"),this.mutationObserver.observe(document.documentElement,Hs.observerOpts)}detachObserver(){Ps.debug("Detaching observer from document"),this.mutationObserver.disconnect()}reset(){Ps.debug("Resetting ElementObserver state"),this.mutationHandlers={},this.currentUrl=void 0,this.detachObserver()}processStore(){Ps.group("ReapplyElementObserver.processStore()"),Ps.debug(`mutationHandlers: ${Mi(this.mutationHandlers)}`),this.detachObserver(),Object.keys(this.mutationHandlers).forEach((e=>{this.handleObservation(e,!0)})),this.attachObserver(),Ps.groupEnd()}handleObservation(e,t){const i=this.mutationHandlers[e];if(Ps.group(`handleObservation(${e})`),t&&i.options.observationTimeMs&&Date.now()-i.startTime.getTime()>i.options.observationTimeMs)return 0===i.mutationCnt?void 0!==i.options.onTimeout&&(fs.error(`MutationHandler timed out for ${i.selector}. observationTimeMs (${i.options.observationTimeMs}) has passed.`,140,i.entityIds),i.options.onTimeout()):fs.warn(`Observation cancelled for ${i.selector}. observationTimeMs (${i.options.observationTimeMs}) has passed.`,141,i.entityIds),this.cancelObservation(e),void Ps.groupEnd();if(i.mutationCnt>=Hs.CALLBACK_MAX_COUNT)return Ps.debug(`Reached CALLBACK_MAX_COUNT (${Hs.CALLBACK_MAX_COUNT})`),this.cancelObservation(e),void Ps.groupEnd();if(void 0!==i.lastCallbackTime){const e=Date.now()-i.lastCallbackTime.getTime();if(e<Hs.CALLBACK_THROTTLE_MS)return Ps.debug(`Throttling callback (${Hs.CALLBACK_THROTTLE_MS}ms). Only (${e})ms have elapsed`),void Ps.groupEnd()}const s=document.querySelectorAll(i.selector);if(Ps.debug(`Found ${s.length} matching elements`),s.length>0){const n=t=>!Hs.isProcessed(t,e)||void 0!==i.options.shouldReapply&&i.options.shouldReapply(t);Array.prototype.forEach.call(s,(s=>{if(Ps.debug(`Processing element: ${Li(s)}`),!t||n(s)){Ps.debug("isProcessed: false");let n="Triggering callback for element";t&&(i.mutationCnt+=1,i.lastCallbackTime=new Date,n+=` (mutationCnt: ${i.mutationCnt})`),Ps.debug(n),i.callback(s),Hs.setIsProcessed(s,e),i.options.once&&this.cancelObservation(e)}else Ps.debug("isProcessed: true (skipping)")}))}else fs.warn(`Could not find any matching elements for ${i.selector}`,139,i.entityIds),i.missingElementCnt+=1,i.missingElementCnt>=Hs.MISSING_ELEMENT_MAX_COUNT&&(Ps.debug(`Reached MISSING_ELEMENT_MAX_COUNT (${Hs.MISSING_ELEMENT_MAX_COUNT})`),this.cancelObservation(e));Ps.groupEnd()}cancelObservation(e){delete this.mutationHandlers[e]}};let Ks=Hs;__publicField(Ks,"INVALID_NODE_NAMES",["HTML","SCRIPT","LINK","STYLE","HEAD","BODY","IFRAME","TITLE","META"]),__publicField(Ks,"observerOpts",{subtree:!0,childList:!0,attributes:!0,characterData:!0,attributeOldValue:!0,characterDataOldValue:!0});class qs{constructor(e){__publicField(this,"optionalUrl"),__publicField(this,"optionalOrigin"),__publicField(this,"urlParamsUnsafe"),this.optionalUrl=qs.sanitizeUrl(e);const t=!0===(null==e?void 0:e.includes("?"))?e.slice(e.indexOf("?")):void 0;if(this.urlParamsUnsafe=ai(qs.parseQueryStringUnsafe(t)),this.optionalOrigin=ie.empty(),this.optionalUrl.isPresent()){const e=this.optionalUrl.get();try{const{origin:t}=new URL(e);this.optionalOrigin=ie.ofNullable(t)}catch(i){const e=As(i);e.message="Could not construct URL to determine origin\n"+e.message,fs.warn(e,135)}}else fs.debug("cannot determine url origin")}static parseQueryStringUnsafe(e){const t={};return void 0!==e&&e.length>0&&e.slice(1).split("&").forEach((e=>{try{if(void 0!==e&&e.length>0){const i=e.split("=",2),s=decodeURIComponent(i[0]);if(!Object.prototype.hasOwnProperty.call(t,s)){let e="";void 0!==i[1]&&(e=decodeURIComponent(i[1].replace(/\+/g," "))),t[s]=e}}}catch(i){const e=As(i);fs.warn(e,29)}})),t}static sanitizeUrl(e){try{if(void 0!==e)return ie.ofNullable(decodeURI(e))}catch(t){fs.error(`Url could not be decoded: '${e}'`,44)}return ie.ofNullable(e)}getAllUrlParamsUnsafe(){return this.urlParamsUnsafe}getUrl(){return this.optionalUrl}getOrigin(){return this.optionalOrigin}}class Qs extends qs{constructor(e){super(e),__publicField(this,"urlParamsEncoded"),__publicField(this,"utmMedium"),__publicField(this,"utmSource"),this.urlParamsEncoded=ai(Qs.standardUrlParameterParser(e)),this.utmSource=this.urlParamsUnsafe.utm_source,this.utmMedium=this.urlParamsUnsafe.utm_medium}static standardUrlParameterParser(e){const t={};if(void 0===e)return t;const i=e.indexOf("#");let s=e.length-1;-1!==i&&(s=i-1);const n=e.indexOf("?"),r=n+1;return-1===n||r>=s||e.slice(r,s+1).split("&").filter((e=>void 0!==e&&e.length>0)).forEach((e=>{let i=e,s="";const n=e.indexOf("=");-1!==n&&(i=e.slice(0,Math.max(0,n)),s=e.slice(n+1)),void 0===t[i]?t[i]=[s]:t[i].push(s)})),t}get emailTagRegExp(){return/email|^send|hs_em|[\W_^]mail[\W_$]|sms|newsletter|^em[\W_$]|^attentive$/}get searchTagRegExp(){return/(search|bing|google|googlepla|sem|adwords)/i}get socialTagRegExp(){return/facebook|[\W_^]fb[\W_$]|youtube|[\W_^]ig[\W_$]|twitter|igstories|^tw$|twtr|profile|pinterest|instagram|socialmedia|quora|newsfeed|reddit|social|influencer|yelp|snapchat|linkedin|googleplus|g\+|gplus|google\+/i}get paidSocialRegExp(){return/influencer|ctc|ocpm|smm|socialp|cbo|bid|paidsocial/i}get organicSocialRegExp(){return/organic|socialo|stories|story|profile/i}get paidRegExp1(){return/(placement|attentive|taboola|gdn|criteo|googlepla|mrkt_adwords|outbrain|shareasale|klaviyo|inboxdollars|liveintent|adwords|ads|listrak|gsp|bluecore)/i}get paidRegExp2(){return/(cpc|affiliate|paid|smm|sem|ocpm|adroll|reengagement|remarketing|retargeting|cpa|paids|native|ppc|leads|display|[\W_^]ad[\W_$]|cpm|advertising|channel_partner|sponsored)/i}get searchIdRegExp(){return/([?&])(gclid|msclkid)=/i}get socialIdRegEx(){return/([?&])fbclid=/i}getAllUrlParamsEncoded(){return this.urlParamsEncoded}getSourceFromAllParams(e){let t=!1;for(const i of Object.keys(this.urlParamsUnsafe))if(Object.prototype.hasOwnProperty.call(this.urlParamsUnsafe,i)){const s=this.urlParamsUnsafe[i];if(t=t||this.isParamPaid(s),this.isParamSocialTagged(s))return e||t||this.isParamSocialPaid(s)?"CP":"CO";if(this.isParamSearchTagged(s))return e||t||this.isSearchPaid()?"SP":"SO";if(this.getUrl().isPresent()&&this.isParamEmailTagged(s))return"EM"}return t?"OP":"OT"}isSocialTagged(){return!(!this.optionalUrl.isPresent()||!this.socialIdRegEx.test(this.optionalUrl.get()))||(this.isParamSocialTagged(this.utmMedium)||this.isParamSocialTagged(this.utmSource))}isSocialPaid(){return this.isParamSocialPaid(this.utmMedium)||this.isParamSocialPaid(this.utmSource)}isSearchTagged(e){return!(!this.optionalUrl.isPresent()||!this.searchIdRegExp.test(this.optionalUrl.get()))||(!(!this.isParamSearchTagged(this.utmSource)&&!this.isParamSearchTagged(this.utmMedium))||e.getUrl().isPresent()&&e.isFromSearchEngine()&&(Boolean(this.utmMedium)||Boolean(this.utmSource)))}isSearchPaid(){return!(!this.optionalUrl.isPresent()||!this.searchIdRegExp.test(this.optionalUrl.get()))||(this.isParamSearchPaid(this.utmMedium)||this.isParamSearchPaid(this.utmSource))}isPaidTraffic(){return this.isParamPaid(this.utmSource)||this.isParamPaid(this.utmMedium)}isEmailTagged(){return this.isParamEmailTagged(this.utmSource)||this.isParamEmailTagged(this.utmMedium)}isParamPaid(e){return void 0!==e&&(this.paidRegExp1.test(e)||this.paidRegExp2.test(e))}isParamEmailTagged(e){return void 0!==e&&this.emailTagRegExp.test(e)}isParamSearchTagged(e){return void 0!==e&&this.searchTagRegExp.test(e)}isParamSearchPaid(e){return void 0!==e&&/googlep|adwords/.test(e)}isParamSocialPaid(e){return(void 0===e||!this.organicSocialRegExp.test(e))&&(void 0!==e&&this.paidSocialRegExp.test(e))}isParamSocialTagged(e){return void 0!==e&&this.socialTagRegExp.test(e)}}class Ys extends qs{get emailDomainRegExp(){return/([/.])(webmail|live|mail|inbox|zimbra|email|em)\d{0,2}\.|google.android.gm/i}get socialDomainRegExp(){return/([/.])(t\.co|(plus\.google|facebook|twitter|linkedin|youtube|instagram|pinterest|quora|reddit|github|medium|producthunt|yelp|ycombinator|messenger)\.)/i}get paidDomainRegExp(){return/([/.])(taboola|aimtell|attentive|googlesyndication|shareasale|outbrain|shareasale-analytics|doubleclick)\./i}get invalidSearchRegExp(){return/([/.])((plus|mail|myactivity|chrome|classroom|accounts|news|docs|keep|sites)\.google|googlesyndication|google\.android\.(?!googlequicksearchbox))/i}get paidSearchRegExp(){return/([/.])(google|googleadservices)\..*?\/aclk\?/i}get validSearchRegExp(){return/([/.])(google|bing|baidu|duckduckgo|ask|search\.(yahoo|xfinity|aol|naver))\./i}isFromSearchEngine(){return this.optionalUrl.isPresent()&&!this.invalidSearchRegExp.test(this.optionalUrl.get())&&this.validSearchRegExp.test(this.optionalUrl.get())}isFromEmail(){return this.optionalUrl.isPresent()&&this.emailDomainRegExp.test(this.optionalUrl.get())}isFromSocialNetwork(){return this.optionalUrl.isPresent()&&this.socialDomainRegExp.test(this.optionalUrl.get())}isPaidTraffic(){return this.optionalUrl.isPresent()&&this.paidDomainRegExp.test(this.optionalUrl.get())}isSearchPaid(){return this.optionalUrl.isPresent()&&!this.invalidSearchRegExp.test(this.optionalUrl.get())&&this.paidSearchRegExp.test(this.optionalUrl.get())}}var Js=(e=>(e[e.LN=0]="LN",e[e.EA=1]="EA",e[e.DT=2]="DT",e[e.EE=3]="EE",e[e.NT=4]="NT",e))(Js||{}),Zs=(e=>(e[e.WD=0]="WD",e[e.WE=1]="WE",e))(Zs||{});class Xs{constructor(e,t){__publicField(this,"localWindow"),__publicField(this,"timeZone"),__publicField(this,"hostName"),__publicField(this,"date"),__publicField(this,"userAgent"),__publicField(this,"windowWidth"),__publicField(this,"windowHeight"),__publicField(this,"pageviewId"),__publicField(this,"visibilityChangeName"),__publicField(this,"isHidden"),__publicField(this,"navigationHostUrl"),__publicField(this,"navigationReferrerUrl"),this.timeZone=t,this.localWindow=e,this.visibilityChangeName="visibilitychange",this.isHidden=()=>!1,this.reinitialize()}reinitialize(){fs.debug("Environment.reinitialize()"),"location"in this.localWindow&&(this.navigationHostUrl=new Qs(this.localWindow.location.href),"hostname"in this.localWindow.location&&(this.hostName=this.localWindow.location.hostname)),"document"in this.localWindow&&(this.navigationReferrerUrl=new Ys(this.localWindow.document.referrer),void 0!==this.localWindow.document.hidden?(this.isHidden=()=>this.localWindow.document.hidden,this.visibilityChangeName="visibilitychange"):void 0!==this.localWindow.document.msHidden?(this.isHidden=()=>this.localWindow.document.msHidden,this.visibilityChangeName="msvisibilitychange"):void 0!==this.localWindow.document.webkitHidden&&(this.isHidden=()=>this.localWindow.document.webkitHidden,this.visibilityChangeName="webkitvisibilitychange")),"navigator"in this.localWindow&&"userAgent"in this.localWindow.navigator&&(this.userAgent=this.localWindow.navigator.userAgent),this.windowWidth=this.localWindow.innerWidth,this.windowHeight=this.localWindow.innerHeight,this.date=this.getNowDate(),this.pageviewId=Vs()}getHostingPageUrl(){return this.navigationHostUrl}getUrlParameter(e,t){let i=ie.ofNullable(this.navigationHostUrl.getAllUrlParamsUnsafe()[e]);return i.isPresent()&&!t(i.get())&&(fs.error(`Validator failed for ${e}`,28),i=ie.empty()),i}getAllUrlParamsEncoded(){return this.navigationHostUrl.getAllUrlParamsEncoded()}hasHostingPageUrlChanged(){let e;return"location"in this.localWindow&&"href"in this.localWindow.location&&(e=this.localWindow.location.href),this.navigationHostUrl.getUrl().map((t=>!e||e!==t)).orElse(Boolean(e))}getHostName(){return ie.ofNullable(this.hostName)}getReferrerUrl(){return this.navigationReferrerUrl}getTimeZone(){return this.timeZone}getDayPart(){const e=this.getInitializeDate().getHours();let t;return t=e>=0&&e<7?0:e>=7&&e<10?1:e>=10&&e<17?2:e>=17&&e<20?3:4,Js[t]}getWeekPart(){const e=this.getInitializeDate().getDay();return Zs[0===e||6===e?1:0]}getInitializeDate(){return new Date(this.date.getTime())}getInitializeUnixTime(){return Math.round(this.date.getTime()/li)}getNowDate(){return new Date}getNowUnixTime(){return Math.round(this.getNowUnixTimeMs()/li)}getNowUnixTimeMs(){return this.getNowDate().getTime()}getUserAgent(){return ie.ofNullable(this.userAgent)}getWidowWidth(){return ie.ofNullable(this.windowWidth)}getWidowHeight(){return ie.ofNullable(this.windowHeight)}getScreenOrientation(){return void 0!==this.windowHeight&&void 0!==this.windowWidth?this.windowWidth>this.windowHeight?ie.of("landscape"):ie.of("portrait"):ie.empty()}getPageviewId(){return this.pageviewId}writeCookie(e){fs.debug("Environment.writeCookie("+e+")"),this.localWindow.document.cookie=e}readAllCookies(){return ie.ofNullable(this.localWindow.document.cookie)}readCookie(e){const t=e+"=";let i=ie.empty();return this.readAllCookies().ifPresent((e=>{const s=e.split(";");for(let n of s){for(;n.startsWith(" ");)n=n.slice(1);n.startsWith(t)&&(i=ie.of(n.slice(t.length)))}})),i}writeLocalStorage(e,t){this.localWindow.localStorage.setItem(e,t)}readLocalStorage(e){return ie.ofNullable(this.localWindow.localStorage.getItem(e))}writeSessionStorage(e,t){this.localWindow.sessionStorage.setItem(e,t)}removeSessionStorage(e){this.localWindow.sessionStorage.removeItem(e)}readSessionStorage(e){return ie.ofNullable(this.localWindow.sessionStorage.getItem(e))}readLocalStorageMatching(e){const t={};return Object.keys(this.localWindow.localStorage).forEach((i=>{e.test(i)&&(t[i]=this.readLocalStorage(i).get())})),t}deleteLocalStorage(e){this.localWindow.localStorage.removeItem(e)}getWindow(){return this.localWindow}getNowVisibilityState(){return"document"in this.localWindow&&"visibilityState"in this.localWindow.document?ie.ofNullable(this.localWindow.document.visibilityState):ie.empty()}isNowDocumentHidden(){return"document"in this.localWindow?ie.ofNullable(this.isHidden()):ie.empty()}addListener(e,t){this.localWindow.addEventListener(e,t)}addListenerVisibilityChange(e){this.localWindow.document.addEventListener(this.visibilityChangeName,e,{once:!0,capture:!1})}addUnloadHandler(e){this.localWindow.addEventListener("beforeunload",e,!1)}redirect(e){this.localWindow.document.location.replace(e)}generateActionId(){return this.getNowUnixTime()+"-"+zs()}injectScript(e,t=!1){const i=this.localWindow.document.createElement("script");i.async=t,i.src=e;const s=this.localWindow.document.querySelectorAll("script")[0];s.parentNode.insertBefore(i,s)}sendBeacon(e,t){return this.localWindow.navigator.sendBeacon(e,t)}}class en{constructor(e,t,i,s){__publicField(this,"iEvent"),__publicField(this,"actionId"),__publicField(this,"eventInstanceId"),__publicField(this,"eventValue"),__publicField(this,"nativeClickEvent"),this.iEvent=e,this.actionId=t,this.eventInstanceId=`${e.getId()}:${t}`,this.eventValue=i,this.nativeClickEvent=s}getEvent(){return this.iEvent}getEventId(){return this.iEvent.getId()}getActionId(){return this.actionId}getEventInstanceId(){return this.eventInstanceId}getEventValue(){return ie.ofNullable(this.eventValue)}getNativeMouseEvent(){return ie.ofNullable(this.nativeClickEvent)}toString(){return`ConversionEventContext(${this.getEventId()}, ${this.getEventInstanceId()})`}}function tn(e){return e.getIntegrationDemandbase().map((e=>e.isEnabled())).orElse(!1)}function sn(e){return e.getIntegrationFirmographic().map((e=>e.isEnabled())).orElse(!1)}const nn=["marketo","salesforce","firmographic","6sense","googleAds","demandbase"];function rn(e){return e.getIntegrationGoogleAds().map((e=>e.isEnabled())).orElse(!1)}function an(e){return e.getIntegrationMarketo().map((e=>e.isEnabled())).orElse(!1)}function on(e){return e.readCookie(Ai)}function ln(e){var t,i;return void 0!==(null==(t=null==e?void 0:e.lead)?void 0:t.fields)||void 0!==(null==(i=null==e?void 0:e.lead)?void 0:i.lists)}function cn(e){var t,i;return void 0===(null==(t=null==e?void 0:e.lead)?void 0:t.fields)&&void 0===(null==(i=null==e?void 0:e.lead)?void 0:i.lists)}function dn(e){if(void 0===e)return ie.empty();if(ln(e))return ie.of(e);if(cn(e)){const t=e,{smartLists:i,staticLists:s}=t,n=__objRest(t,["smartLists","staticLists"]),r=(null!=i?i:[]).map((e=>({type:"smart",id:Number(e)}))),a=(null!=s?s:[]).map((e=>({type:"static",id:Number(e)})));return ie.of({lead:{fields:n,lists:[...r,...a]}})}return ie.empty()}function un(e){return e.getIntegrationSalesforce().map((e=>e.isEnabled())).orElse(!1)}function gn(e){return e.getIntegrationSixsense().map((e=>e.isEnabled())).orElse(!1)}const hn={"6sense":e=>gn(e),demandbase:e=>tn(e),firmographic:e=>sn(e),googleAds:e=>rn(e),marketo:e=>an(e),salesforce:e=>un(e)};class mn{constructor(e){__publicField(this,"timestamp"),this.timestamp=e.getNowUnixTime()}get id(){return"missing-policy"}getId(){return this.id}getTimestamp(){return this.timestamp}toJson(){return Ni({id:this.id,timestamp:this.timestamp})}}class pn extends Error{constructor(e,t){super(`(${t}) ${e}`),this.name="JsonFetchError"}}function vn(){return __async(this,arguments,(function*(e,t,i={}){const s=ds(e,t);return fetch(s,i).then((e=>{if(!e.ok)throw new pn(s,e.status);if(204!==e.status)return e.json()}))}))}function bn(){return __async(this,arguments,(function*(e,t,i={}){return new Promise(((s,n)=>{var r;const a=ds(e,t),o=new XMLHttpRequest;o.open(null!=(r=i.method)?r:"GET",a,!1),o.addEventListener("load",(()=>{o.status>=200&&o.status<=299?s():n(new pn(a,o.status))})),o.addEventListener("error",(()=>{n(new pn(a,o.status))})),o.send(i.body)}))}))}class fn{static sendPageview(e,t,i,s,n,r,a,o,l){return __async(this,null,(function*(){fs.debug("BrowserEventLogger.sendPageview()");const c=fn.buildPageviewEvent(e,t,i,s,n,r,a,o);return fn.send(e,c,!0,l)}))}static sendContext(e,t,i,s,n){return __async(this,null,(function*(){fs.debug("BrowserEventLogger.sendContext()");const r=fn.buildContextEvent(e,t,i,s);return fn.send(e,r,!0,n)}))}static sendConversion(e,t,i,s,n,r,a,o,l,c){return __async(this,null,(function*(){fs.debug("BrowserEventLogger.sendConversion()");const d=fn.buildConversionEvent(t,i,s,n,r,a,o,l,e);return fn.send(t,d,!0,c)}))}static sendView(e,t,i,s,n,r,a,o,l,c){return __async(this,null,(function*(){fs.debug("BrowserEventLogger.sendView()");const d=fn.buildViewEvent(e,t,i,s,n,r,a,o,l);return fn.send(t,d,!0,c)}))}static sendGoal(e,t,i,s,n,r,a,o,l,c,d,u){return __async(this,null,(function*(){fs.debug("BrowserEventLogger.sendGoal()");const g=fn.buildGoalEvent(e,t,i,s,n,r,a,o,l,c);return fn.send(t,g,d,u)}))}static get PATH(){return"/logger"}static buildPageviewEvent(e,t,i,s,n,r,a,o){fs.debug("BrowserEventLogger.buildPageviewEvent()");const l={eventType:"pv"};return fn.buildCommonEvent(l,t,e,i,n,r,a,s),l.pageviewId=e.getPageviewId(),l.sessionId=s.updateAndGetSessionId(),l.policyId=o.getId(),l.policyTimestamp=o.getTimestamp(),s.getCustomerControlStatus(t).ifPresent((e=>{l.controlStatus=e})),l}static buildContextEvent(e,t,i,s){fs.debug("BrowserEventLogger.buildContextEvent()");const n={eventType:"ctx",pageviewId:e.getPageviewId(),customerId:t.getId(),userId:i.getId()},r=s.getAllData();return Object.keys(r).length>0&&(n.integrationData=r),n}static buildConversionEvent(e,t,i,s,n,r,a,o,l){fs.debug("BrowserEventLogger.buildConversionEvent()");const c={eventType:"c"};return fn.buildCommonEvent(c,t,e,i,n,r,a,s),this.populateConversionInfo(c,l),c.pageviewId=e.getPageviewId(),c.sessionId=s.updateAndGetSessionId(),c.policyId=o.getId(),c.policyTimestamp=o.getTimestamp(),s.getCustomerControlStatus(t).ifPresent((e=>{c.controlStatus=e})),c}static buildViewEvent(e,t,i,s,n,r,a,o,l){fs.debug("BrowserEventLogger.buildViewEvent()");const c={eventType:"v"};fn.buildBaseEvent(c,e,t,s,r,a,o,n);const d=e.getExperience(),u=d.getCampaign(),g=u.getCustomer();return i.isStickyVariation(e)?n.getVariationPredictionModelVersion(e).ifPresent((e=>{c.modelVersion=e})):c.modelVersion=i.getModelVersion(d.getId()),c.isPrediction=!i.isStickyVariation(e)&&e.getId()!==ti,c.isVariationSticky=i.isStickyVariation(e),c.isCampaignFirstTime=n.updateAndGetIsCampaignFirstTimeView(u,t.getInitializeUnixTime()),c.isVariationFirstTime=n.updateAndGetIsVariationFirstTimeView(e,t.getInitializeUnixTime()),c.pageviewId=t.getPageviewId(),c.sessionId=n.updateAndGetSessionId(),c.policyId=l.getId(),c.policyTimestamp=l.getTimestamp(),n.getCustomerControlStatus(g).ifPresent((e=>{c.controlStatus=e})),c}static buildGoalEvent(e,t,i,s,n,r,a,o,l,c){fs.debug("BrowserEventLogger.buildGoalEvent()");const d={eventType:"ocg"};fn.buildBaseEvent(d,e,t,s,r,a,o,n);const u=e.getExperience().getCampaign();return d.isCampaignFirstTime=n.updateAndGetIsCampaignFirstTimeGoal(u,i,t.getInitializeUnixTime()),d.isVariationFirstTime=n.updateAndGetIsVariationFirstTimeGoal(e,i,t.getInitializeUnixTime()),n.getVariationPredictionModelVersion(e).ifPresent((e=>{d.modelVersion=e})),d.metricId=i.getId(),d.isGoal=i.isGoal(),d.goalPageviewId=t.getPageviewId(),d.goalSessionId=n.updateAndGetSessionId(),this.populateConversionInfo(d,c),n.getVariationPredictionPageviewId(e).ifPresent((e=>{d.pageviewId=e})),n.getVariationPredictionSessionId(e).ifPresent((e=>{d.sessionId=e})),d.policyId=l.getId(),d.policyTimestamp=l.getTimestamp(),n.getCustomerControlStatus(u.getCustomer()).ifPresent((e=>{d.controlStatus=e})),d}static populateConversionInfo(e,t){e.actionId=t.getActionId(),t.getNativeMouseEvent().ifPresent((i=>{const s=P(i.target);s?e.clickTargetSelector=s:(e.clickTargetSelector="unknown",fs.error(`Could not generate selector: ${Mi(i.target)}`,136,{eventId:t.getEventId()})),fn.getAnchorHref(i).ifPresent((t=>{e.clickTargetUrl=t}))})),e.eventId=t.getEventId(),e.eventInstanceId=t.getEventInstanceId(),t.getEventValue().ifPresent((t=>{e.eventValue=t}))}static getAnchorHref(e){var t,i;let s,n=e.target;for(;void 0!==n;){if(n instanceof HTMLAnchorElement){s=null!=(t=n.getAttribute("href"))?t:void 0;break}n=null!=(i=n.parentNode)?i:void 0}return ie.ofNullable(s)}static buildCommonEvent(e,t,i,s,n,r,a,o){e.userId=s.getId(),e.isFirstTimeUser=s.isNewVisitor(),e.userVisitStatus=o.getUserVisitStatus(s),e.userBucket=s.getUserBucket(),e.intellimizeClientIp=a.clientIp,e.customerId=t.getId(),i.getNowVisibilityState().ifPresent((t=>{e.visibilityState=t})),e.clientVersion=oi,e.requestId=a.requestId,i.getReferrerUrl().getUrl().ifPresent((t=>{e.referrerUrl=t})),i.getHostingPageUrl().getUrl().ifPresent((t=>{e.hostingPageUrl=t})),e.intellimizeUserAgentDigest=a.userAgentDigest,e.time=i.getNowUnixTimeMs(),e.timeZone=i.getTimeZone(),i.getWidowWidth().ifPresent((t=>{e.windowWidth=t})),i.getWidowHeight().ifPresent((t=>{e.windowHeight=t})),i.getScreenOrientation().ifPresent((t=>{e.screenOrientation=t}));const l=n.getFlattenedInternalAttributes();Object.keys(l).length>0&&(e.internalAttributes=l);const c=n.getFlattenedCustomAttributes();Object.keys(c).length>0&&(e.customAttributes=c);const d=r.getPages().map((e=>e.getId()));d.length>0&&(e.pageIds=d);const u=r.getAudiences().map((e=>e.getId()));u.length>0&&(e.audienceIds=u)}static buildBaseEvent(e,t,i,s,n,r,a,o){const l=t.getExperience(),c=l.getCampaign(),d=c.getCustomer();fn.buildCommonEvent(e,d,i,s,n,r,a,o),e.campaignId=c.getId(),e.experienceId=l.getId(),e.variationId=t.getId()}static send(e,t,i,s){return __async(this,null,(function*(){const n=Date.now();if(fs.debug(`BrowserEventLogger.send(async: ${i}) ${n}`),s.sendBrowserEvents().orElse(!0)){if(i){const i=ds(vi,fn.PATH),s=JSON.stringify(t);e.sendBeacon(i,s)}else yield bn(vi,fn.PATH,{method:"POST",body:JSON.stringify(t)});fs.debug("BrowserEvent sent")}else fs.debug("BrowserEvent send skipped")}))}}var En=(e=>(e[e.NOT_STARTED=0]="NOT_STARTED",e[e.TRY_LATER=1]="TRY_LATER",e[e.WAITING=2]="WAITING",e[e.SUCCEEDED=3]="SUCCEEDED",e[e.FAILED=4]="FAILED",e[e.CANCELED=5]="CANCELED",e))(En||{});const _n=new Set([0,1,2]),yn=class{constructor(){__publicField(this,"manager"),__publicField(this,"id"),__publicField(this,"doneFunctions",[]),__publicField(this,"currentStatus",0),this.id=++yn.lastId}static isDone(e){return!_n.has(e)}getId(){return this.id}setManager(e){this.manager=e}cancel(){this.currentStatus=5,this.cleanup()}cleanup(){}runWrapper(){fs.group(this.toString()+".run()");const e=this.currentStatus;try{this.currentStatus=this.run()}catch(i){const e=As(i);e.message=`Task exception\n${e.message}`,fs.error(e,179,this.getEntityIds()),this.currentStatus=4}const t=this.currentStatus;return!yn.isDone(e)&&yn.isDone(t)&&this.executeDoneFunctions(),fs.groupEnd(),this.currentStatus}onDone(e){this.isDone()?xs.executeFunction(e,153):this.doneFunctions.push(e)}getStatus(){return this.currentStatus}isDone(){return!_n.has(this.currentStatus)}getNotDoneDependencies(){return[]}isBlocked(){if(2===this.currentStatus)return!0;return this.getNotDoneDependencies().filter((e=>e.isBlocked())).length>0}toString(){return`Task(${this.id})`}getEntityIds(){return{}}setStatusTryLater(){this.currentStatus=1}executeDoneFunctions(){for(let e=this.doneFunctions.shift();void 0!==e;e=this.doneFunctions.shift())xs.executeFunction(e,154)}};let Sn=yn;__publicField(Sn,"lastId",0);class In extends Sn{constructor(e,t,i,s,n,r,a,o,l){super(),__publicField(this,"conversionEventContext"),__publicField(this,"environment"),__publicField(this,"customerStorage"),__publicField(this,"attributeStorage"),__publicField(this,"pageContext"),__publicField(this,"serverContext"),__publicField(this,"policy"),__publicField(this,"user"),__publicField(this,"override"),__publicField(this,"trackBrowserEvents",{}),__publicField(this,"hasSentGoals",!1),this.conversionEventContext=e,this.environment=t,this.customerStorage=i,this.attributeStorage=s,this.pageContext=n,this.serverContext=r,this.policy=a,this.user=o,this.override=l}toString(){return"GoalTask("+this.conversionEventContext.toString()+")"}getEntityIds(){return{eventId:this.conversionEventContext.getEventId()}}inTransaction(){return!0}isUnloading(){return!1}run(){this.hasSentGoals||this.sendGoalsOnce();if(Object.keys(this.trackBrowserEvents).map((e=>this.trackBrowserEvents[e])).some((e=>void 0===e||!Sn.isDone(e))))return fs.debug("Waiting for goal event delivery confirmation"),En.TRY_LATER;return Object.keys(this.trackBrowserEvents).map((e=>this.trackBrowserEvents[e])).every((e=>void 0!==e&&e===En.SUCCEEDED))?En.SUCCEEDED:En.FAILED}sendGoalsOnce(){fs.debug("sendGoalsOnce()"),this.hasSentGoals=!0;const e="click"!==this.conversionEventContext.getEvent().getType();let t=0;this.conversionEventContext.getEvent().getMetrics().forEach((i=>{i.getCampaign().ifPresent((s=>{s.getExperiences().forEach((s=>{this.customerStorage.getVariation(s).ifPresent((n=>{const r=i.getId()+":"+n.getId();this.trackBrowserEvents[r]=En.TRY_LATER,fs.info(`Sending goal ${i.getId()} event`),t++,fn.sendGoal(n,this.environment,i,this.user,this.customerStorage,this.attributeStorage,this.pageContext,this.serverContext,this.policy,this.conversionEventContext,e,this.override).then((()=>{fs.info(`Goal ${i.getId()} event delivery success`),this.trackBrowserEvents[r]=En.SUCCEEDED})).catch((e=>{const t=As(e);fs.error(`Goal ${i.getId()} event delivery failed: ${t.message}`,78,{eventId:this.conversionEventContext.getEventId(),experienceId:s.getId(),variationId:n.getId()}),this.trackBrowserEvents[r]=En.FAILED}))}))}))}))})),fs.debug(`Sent ${t} goal events`)}}class Cn extends Sn{constructor(e,t,i,s,n,r,a,o,l,c,d){super(),__publicField(this,"conversionEventContext"),__publicField(this,"environment"),__publicField(this,"customer"),__publicField(this,"customerStorage"),__publicField(this,"attributeStorage"),__publicField(this,"pageContext"),__publicField(this,"serverContext"),__publicField(this,"policy"),__publicField(this,"user"),__publicField(this,"override"),__publicField(this,"statusModel"),__publicField(this,"conversionSent",!1),__publicField(this,"conversionStatus",En.NOT_STARTED),__publicField(this,"goalTask"),this.conversionEventContext=e,this.environment=t,this.customer=i,this.customerStorage=s,this.attributeStorage=n,this.pageContext=r,this.serverContext=a,this.policy=o,this.user=l,this.override=c,this.statusModel=d}toString(){return`ConversionEventTask(${this.conversionEventContext.toString()})`}getEntityIds(){return{eventId:this.conversionEventContext.getEventId()}}inTransaction(){return!this.conversionSent}isUnloading(){return!1}run(){return this.sendOnce(),this.scheduleGoalTaskOnce(),Sn.isDone(this.conversionStatus)?!this.customer.hasClassicAccess()||void 0!==this.goalTask&&Sn.isDone(this.goalTask.getStatus())?this.conversionStatus===En.SUCCEEDED?En.SUCCEEDED:En.FAILED:(fs.debug("Waiting for goal task event confirmation"),En.TRY_LATER):(fs.debug("Waiting for conversion event delivery confirmation"),En.TRY_LATER)}sendOnce(){if(!this.conversionSent){fs.info(`Sending conversion event ${this.conversionEventContext.toString()}`);const e=this.conversionEventContext.getEvent(),t=e.getMetrics().map((t=>{const i=zs();return this.statusModel.setMetricEventData(t,e,i,En.WAITING),{metric:t,modelEventId:i}}));fn.sendConversion(this.conversionEventContext,this.environment,this.customer,this.user,this.customerStorage,this.attributeStorage,this.pageContext,this.serverContext,this.policy,this.override).then((()=>{fs.info(`Conversion event ${this.conversionEventContext.toString()} delivery success`),this.conversionStatus=En.SUCCEEDED,t.forEach((({metric:t,modelEventId:i})=>{this.statusModel.setMetricEventData(t,e,i,En.SUCCEEDED)}))})).catch((i=>{const s=As(i);fs.warn(`Conversion event ${this.conversionEventContext.toString()} delivery failed: ${s.message}`,76,{eventId:this.conversionEventContext.getEventId()}),this.conversionStatus=En.FAILED,t.forEach((({metric:t,modelEventId:i})=>{this.statusModel.setMetricEventData(t,e,i,En.FAILED)}))})),this.conversionSent=!0}}scheduleGoalTaskOnce(){this.customer.hasClassicAccess()&&void 0===this.goalTask&&(this.goalTask=new In(this.conversionEventContext,this.environment,this.customerStorage,this.attributeStorage,this.pageContext,this.serverContext,this.policy,this.user,this.override),this.manager.addTask(this.goalTask))}}function Tn(e){if("string"==typeof e){const t=e.search(/[.\-\d]/g);if(-1===t)return!1;const i=e.slice(Math.max(0,t));if(!/^-?\d*\.?\d{0,2}$/.test(i))return!1}else{if("number"!=typeof e)return!1;{const t=String(e);if(!/^-?\d*\.?\d{0,2}$/.test(t))return!1}}return!0}function An(e){return"string"==typeof e&&/^[\u0021-\u007E]{1,300}$/.test(e)}function xn(e,t,i){let s;switch(e.name){case"collection_viewed":{const t=e;s=__spreadProps(__spreadValues({},i),{eventType:"s",customerEventName:"collection_viewed",data:Pn(t.data.collection)});break}case"product_viewed":{const n=e;s=__spreadProps(__spreadValues({},i),{eventType:"s",customerEventName:"product_viewed",data:Fn(n.data.productVariant,wn("product_viewed"),t)});break}case"checkout_started":{const n=e;s=__spreadProps(__spreadValues({},i),{eventType:"s",customerEventName:"checkout_started",data:Dn(n.data.checkout,wn("checkout_started"),t)});break}case"checkout_completed":{const n=e;s=__spreadProps(__spreadValues({},i),{eventType:"s",customerEventName:"checkout_completed",data:Dn(n.data.checkout,wn("checkout_completed"),t)});break}case"product_added_to_cart":{const n=e;s=__spreadProps(__spreadValues({},i),{eventType:"s",customerEventName:"product_added_to_cart",data:Mn(n.data.cartLine,wn("product_added_to_cart"),t)});break}case"search_submitted":{const t=e;s=__spreadProps(__spreadValues({},i),{eventType:"s",customerEventName:"search_submitted",data:Nn(t.data.searchResult)});break}default:throw new Error(`Unsupported customer event: ${e.name}`)}return fs.debug(`Shopify activity (${e.name}): ${JSON.stringify(s.data)}`),s}function wn(e){switch(e){case"product_viewed":return"productVariant.price.amount";case"product_added_to_cart":return"cartLine.merchandise.price.amount";case"checkout_started":case"checkout_completed":return"checkout.subtotalPrice.amount";default:throw new Error(`Cannot get event value path for ${e}`)}}function kn(e,t,i){let s=Number(e)/i;return/^-?\d*\.\d{3,}$/.test(String(s))&&(fs.debug(`Found currency with > 2 decimal places: "${t}" = "${s}"`),s=Math.round(100*(Number(s)+Number.EPSILON))/100),s}function Fn(e,t,i){var s,n;return{productVariantPriceAdjusted:kn(e.price.amount,t,i),productVariantPrice:e.price.amount,productVariantPriceCode:e.price.currencyCode,productVariantSku:null!=(s=e.sku)?s:void 0,productVariantId:e.id,productVariantTitle:e.title,productId:e.product.id,productTitle:e.product.title,productType:null!=(n=e.product.type)?n:void 0}}function Pn(e){return{collectionId:e.id}}function Dn(e,t,i){const s=[],n=[];return e.lineItems.forEach((({variant:e})=>{null!==e&&(s.push(e.id),n.push(e.product.id))})),{checkoutSubtotalAdjusted:kn(e.subtotalPrice.amount,t,i),checkoutSubtotal:e.subtotalPrice.amount,checkoutSubtotalCode:e.subtotalPrice.currencyCode,productVariantIds:s,productIds:n}}function Mn(e,t,i){return __spreadValues({cartTotalAdjusted:kn(e.cost.totalAmount.amount,t,i),cartTotal:e.cost.totalAmount.amount,cartTotalCode:e.cost.totalAmount.currencyCode},Fn(e.merchandise,t,i))}function Nn(e){return{searchQuery:e.query}}function On(){return{"data.productVariantPriceAdjusted":"spvpa","data.productVariantPrice":"spvp","data.productVariantPriceCode":"spvpc","data.productVariantSku":"spvsku","data.productVariantId":"spvid","data.productVariantTitle":"spvt","data.productId":"spid","data.productTitle":"spt","data.productType":"spty","data.collectionId":"scid","data.checkoutSubtotalAdjusted":"scosta","data.checkoutSubtotal":"scost","data.checkoutSubtotalCode":"scostc","data.productVariantIds":"spvids","data.productIds":"spids","data.cartTotalAdjusted":"scata","data.cartTotal":"scat","data.cartTotalCode":"scatc","data.searchQuery":"ssq"}}class Rn{constructor(e){if(__publicField(this,"environment"),!Rn.isEnabled(e))throw new Error("LocalStorage is not available");this.environment=e}static isEnabled(e){let t=!1;try{const i=e.getWindow();if("localStorage"in i){const e="_test_",s="_test_val_";i.localStorage.setItem(e,s);const n=i.localStorage.getItem(e);i.localStorage.removeItem(e),null!==n&&n===s&&(t=!0)}}catch(i){}return t}static getStorageKeys(e){return Rn.getStorageKeyPrefixes().map((t=>`${t}${e.getId()}`))}static isQuotaExceededError(e){return e instanceof DOMException&&("QuotaExceededError"===e.name||"QUOTA_EXCEEDED_ERROR"===e.name||"NS_ERROR_DOM_QUOTA_REACHED"===e.name)}static getStorageKeyPrefixes(){return[_i,fi,yi,bi,Ei,Ci,Si,Ti,Ii]}write(e,t){Rn.getStorageKeyPrefixes().some((t=>e.startsWith(t)))||fs.error(`Writing an unknown key to LocalStorage: ${e}`,180),this.environment.writeLocalStorage(e,t)}read(e){return this.environment.readLocalStorage(e)}delete(e){this.environment.deleteLocalStorage(e)}}const Ln=class{constructor(e,t,i){__publicField(this,"storageKey"),__publicField(this,"browserStorage"),__publicField(this,"environment"),this.storageKey=Ii+e.getId(),this.browserStorage=t,this.environment=i}static buildPageviewActivity(e,t,i,s,n){return __spreadValues({eventType:"pv"},Ln.setCommonActivityFields(e,t,i,s,n))}static buildViewActivity(e,t,i,s,n){const r=e.getExperience(),a=r.getCampaign(),o=a.getCustomer();return __spreadValues({eventType:"v",campaignId:a.getId(),experienceId:r.getId(),variationId:e.getId()},Ln.setCommonActivityFields(o,t,i,s,n))}static buildConversionActivity(e,t,i,s,n,r){const a=__spreadValues({eventType:"c",actionId:e.getActionId(),eventId:e.getEventId(),eventInstanceId:e.getEventInstanceId()},Ln.setCommonActivityFields(t,i,s,n,r));return e.getEventValue().ifPresent((e=>{a.eventValue=Ln.transformEventValue(e)})),a}static buildShopifyActivity(e,t,i,s,n,r,a,o){return xn(e,t,Ln.buildConversionActivity(i,s,n,r,a,o))}static setCommonActivityFields(e,t,i,s,n){const r={userVisitStatus:n.getUserVisitStatus(i),userBucket:i.getUserBucket(),pageviewId:t.getPageviewId(),sessionId:n.updateAndGetSessionId(),time:t.getNowUnixTimeMs(),timeZone:t.getTimeZone()};n.getCustomerControlStatus(e).ifPresent((e=>{r.controlStatus=e})),t.getReferrerUrl().getUrl().ifPresent((e=>{r.referrerUrl=e})),t.getHostingPageUrl().getUrl().ifPresent((e=>{r.hostingPageUrl=e}));const a=s.getFlattenedInternalAttributes();Object.keys(a).length>0&&(r.trafficSource=a.ts,r.utmTerm=a.utt,r.utmMedium=a.utm,r.utmSource=a.uts,r.utmContent=a.utcn,r.utmCampaign=a.utcm);const o=s.getFlattenedCustomAttributes();return Object.keys(o).length>0&&(r.customAttributes=o),r}static transformEventValue(e){if("string"==typeof e)return Number.parseFloat(e)}add(e){const t=this.compressActivity(e),i=this.getAllCompressed();i.push(t),this.save(i)}getAll(){return this.getAllCompressed().map((e=>this.decompressActivity(e)))}backoffAndSave(e){e.shift(),this.save(e)}save(e){const t=Ni(e);if(t.length>Ln.CHARACTER_LIMIT&&e.length>0)this.backoffAndSave(e);else try{this.browserStorage.write(this.storageKey,t)}catch(i){if(!(Rn.isQuotaExceededError(i)&&e.length>0))throw i;fs.warn("localStorage quota exceeded. Removing old activity",220),this.backoffAndSave(e)}}getAllCompressed(){let e=[];try{e=this.browserStorage.read(this.storageKey).map((e=>{const t=Oi(e);if(!Array.isArray(t))throw new TypeError("Expected an array");return t})).orElse([])}catch(i){e=[];const t=As(i);t.message="Could not read Activities from localStorage\n"+t.message,fs.error(t,221)}const t=this.environment.getNowUnixTimeMs()-Ln.TIME_LIMIT_MS;return e.filter((e=>e.t>=t))}compressActivity(e){const t={};for(const[i,s]of Object.entries(e))if("data"===i&&p(s))for(const[e,n]of Object.entries(s)){const i=`data.${e}`;void 0===Ln.KEY_MAP[i]?(fs.error(`Unknown key ${i} in Activity`,222),t[i]=n):t[Ln.KEY_MAP[i]]=n}else void 0===Ln.KEY_MAP[i]?(fs.error(`Unknown key ${i} in Activity`,222),t[i]=s):t[Ln.KEY_MAP[i]]=s;return t}decompressActivity(e){const t={};for(const[i,s]of Object.entries(e))if(void 0===Ln.REVERSE_KEY_MAP[i])fs.error(`Unknown key ${i} in CompressedActivity`,223),t[i]=s;else if(Ln.REVERSE_KEY_MAP[i].startsWith("data.")){const e=Ln.REVERSE_KEY_MAP[i].split(".");2===e.length&&(void 0===t.data&&(t.data={}),t.data[e[1]]=s)}else t[Ln.REVERSE_KEY_MAP[i]]=s;return t}};let Un=Ln;__publicField(Un,"TIME_LIMIT_MS",15552e6),__publicField(Un,"CHARACTER_LIMIT",1048576),__publicField(Un,"KEY_MAP",__spreadValues({eventType:"et",customerEventName:"en",campaignId:"cmid",experienceId:"eid",variationId:"vid",actionId:"acid",eventId:"evid",eventInstanceId:"eii",eventValue:"ev",userVisitStatus:"uvs",userBucket:"ub",pageviewId:"pvid",sessionId:"sid",controlStatus:"cs",referrerUrl:"rurl",hostingPageUrl:"hpurl",time:"t",timeZone:"tz",trafficSource:"ts",utmTerm:"utt",utmMedium:"utm",utmSource:"uts",utmContent:"utcn",utmCampaign:"utcm",customAttributes:"ca"},On())),__publicField(Un,"REVERSE_KEY_MAP",cs(Ln.KEY_MAP));class Vn extends Sn{constructor(e){super(),__publicField(this,"callbacks",[]),this.callbacks=e}toString(){return"ActivateTask()"}inTransaction(){return!1}isUnloading(){return!0}addCallback(e){this.callbacks.push(e)}run(){return this.manager.getClient().reRun(this.callbacks),En.SUCCEEDED}}class $n extends Sn{constructor(e,t){super(),__publicField(this,"environment"),__publicField(this,"callbacks",[]),__publicField(this,"startTimeMs"),this.environment=e,this.callbacks=t,this.resetExpiration()}toString(){return"RequestActivateTask()"}inTransaction(){return!1}isUnloading(){return!1}resetExpiration(){fs.debug("RequestActivateTask.resetExpiration()"),this.startTimeMs=this.environment.getNowUnixTimeMs()}addCallback(e){this.callbacks.push(e)}run(){if(!this.environment.hasHostingPageUrlChanged())return fs.debug("URL has not changed yet"),this.hasExceededTimeBudget()?(fs.info(`activate() timeout due to URL not changing after ${hi}ms`),En.SUCCEEDED):En.TRY_LATER;if(0===this.manager.findTasks((e=>e instanceof Vn&&!e.isDone())).length){const e=new Vn(this.callbacks);this.manager.addTask(e)}else fs.debug("Not scheduling new ActivateTask since one is already running");return En.SUCCEEDED}hasExceededTimeBudget(){const e=this.environment.getNowUnixTimeMs(),t=e-this.startTimeMs,i=t>hi;return fs.debug("hasExceededTimeBudget: "+e+" - "+this.startTimeMs+" ("+t+") > "+hi+"? => "+i),i}}const zn={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;","`":"&#x60;","=":"&#x3D;"},Wn=e=>String(e).replace(/[&<>"'`=/]/g,(e=>{var t;return null!=(t=zn[e])?t:e})),Gn=(e,t,i=!0)=>{let s="";return t.forEach((t=>{s+=jn(e,t,i)})),s},jn=(e,t,i=!0)=>{switch(t.type){case"string":return t.value;case"attribute":return Bn(e,t.value,i);default:throw new Error(`Unsupported TemplateFragment type: ${t.type}`)}},Bn=(e,{attrDefId:t,defaultString:i},s)=>{const n=new ce(t);let r=e.getAttributeValue(n).orElse(i);return es(r)&&(r=Hn(e,n,i)),s?Wn(String(r)):String(r)},Hn=(e,t,i)=>e.getAttributeValue(t).flatMap((([e])=>ie.ofNullable(e))).orElse(i);class Kn{constructor(e,t,i){__publicField(this,"attributeData"),__publicField(this,"parent"),__publicField(this,"changeIndex"),this.parent=e,this.changeIndex=t,this.attributeData=i}getGuid(){return`${this.parent.getGuid()}-c${this.changeIndex}}`}getEntityIds(){return __spreadProps(__spreadValues({},this.parent.getEntityIds()),{changeId:String(this.changeIndex)})}}const qn="data-imize";function Qn(e,t,i){var s;const n=e;n.imizeChangeData=null!=(s=n.imizeChangeData)?s:{},p(n.imizeChangeData)?n.imizeChangeData[t]=i:fs.error("Invalid imizeChangeData value: must be an object",118)}function Yn(e,t){return ie.ofNullable(sr(e)[t])}function Jn(e,t){delete sr(e)[t],0===Object.keys(sr(e)).length&&nr(e)}function Zn(e){const t=e;return void 0!==t.imizeChangeData&&Object.keys(t.imizeChangeData).length>0}function Xn(e){return`${qn}-${e}`}function er(e){return document.querySelectorAll(`[${Xn(e)}]`)}function tr(e,t){e.setAttribute(Xn(t),t)}function ir(e,t){e.removeAttribute(Xn(t))}function sr(e){var t;const i=e;return p(i.imizeChangeData)||f(i.imizeChangeData)?null!=(t=i.imizeChangeData)?t:{}:(fs.error("Invalid imizeChangeData value: must be undefined or an object",119),{})}function nr(e){delete e.imizeChangeData}function rr(e,t){const i={};for(const[s,n]of Object.entries(sr(e)))n.type===t&&(i[s]=n.value);return i}function ar(e){return{getGuid:()=>`e${e.getExperience().getId()}-v${e.getId()}`,getEntityIds:()=>({variationId:e.getId(),experienceId:e.getExperience().getId()})}}function or(e){return{getGuid:()=>`p${e.getId()}`,getEntityIds:()=>({pageId:e.getId()})}}function lr(e){return{getGuid:()=>`ve${e.id}`,getEntityIds:()=>({})}}const cr=class extends Kn{constructor(e,t,i,s){super(t,i,s),__publicField(this,"attributeChange"),this.attributeChange=e}static getIsValidAttribute(e,t){const i=e.tagName.toLowerCase();return cr.VALID_TAGS_BY_NON_STANDARD_ATTRIBUTE[t].includes(i)}isReadyToApply(){return this.attributeChange.isReadyToApply()}apply(e,t){fs.group("EnhancedAttributeChange.apply()"),fs.debug(`Applying change: ${Mi(this.attributeChange)}`),t.registerSelectorAndExecute(this.attributeChange.getSelector(),(t=>{this.applyChanges(t,e)}),{shouldReapply:e=>this.shouldReapply(e)},this.getEntityIds()),fs.groupEnd()}undo(){fs.debug(`[EnhancedAttributeChange]: Undoing change: ${Mi(this.attributeChange)}`),this.attributeChange.getId().ifPresent((e=>{const t=er(e);Array.prototype.forEach.call(t,(t=>{if(t instanceof HTMLElement){const i=Yn(t,e);if(i.isPresent()){const e=i.get().value;Object.keys(this.attributeChange.getAttributes()).forEach((i=>{switch(i){case"html":void 0!==e.html&&(t.innerHTML=this.renderContent(e.html));break;case"className":void 0!==e.className&&(t.className=e.className);break;case"alt":case"src":case"srcset":case"sizes":case"href":{const s=e[i];void 0===s?t.removeAttribute(i):t.setAttribute(i,s);break}case"css":case"style":void 0!==e.style&&(t.style.cssText=e.style);break;default:fs.error(`[EnhancedAttributeChange]: Cannot undo unknown attribute: ${i}`,121,this.getEntityIds())}}))}else fs.error(`[EnhancedAttributeChange]: Expected change data, but there was none: ${Mi(this.attributeChange)}`,122,this.getEntityIds())}else fs.error(new Error("[EnhancedAttributeChange]: Found matching element that is not an HTMLElement"),123,this.getEntityIds());ir(t,e),Jn(t,e)}))}))}applyChanges(e,t){let i=!1;fs.group(`EnhancedAttributeChange.applyChanges(${Mi(this.attributeChange)})`),this.attributeChange.getId().ifPresent((t=>{tr(e,t)}));const s={};Object.keys(this.attributeChange.getAttributes()).forEach((n=>{switch(n){case"html":{const{html:t}=this.attributeChange.getAttributes();void 0!==t&&(s.html=e.innerHTML,e.innerHTML=this.renderContent(t)),fs.debug("Applied html");break}case"css":case"style":break;case"className":{const{className:t}=this.attributeChange.getAttributes();void 0!==t&&(s.className=e.className,e.className=t),fs.debug("Applied className");break}case"src":this.applyNonStandardAttribute(n,e,s),rs(e)&&!e.complete&&(fs.debug("attaching listener for img src loading"),i=!0,e.addEventListener("load",(()=>{try{fs.debug("EnhancedAttributeChange() image loaded! calling onReadyToRender()"),t()}catch(e){const t=As(e);t.message=`Exception in image onload handler\n${t.message}`,fs.error(t,236,this.getEntityIds())}}),{once:!0}));break;case"alt":case"srcset":case"sizes":case"href":this.applyNonStandardAttribute(n,e,s);break;default:fs.error(`[EnhancedAttributeChange]: Cannot apply unknown attribute: ${n}`,120,this.getEntityIds())}}));const n=this.createCssText(e);void 0!==n&&(s.style=e.style.cssText,e.style.cssText=n,fs.debug("Applied css")),this.attributeChange.getId().ifPresent((t=>{Qn(e,t,{value:s,type:Qe.ATTRIBUTE})})),i||(fs.debug("EnhancedAttributeChange() not waiting; calling onReadyToRender()"),t()),fs.debug("DOM modifications successfully applied for this change."),fs.groupEnd()}applyNonStandardAttribute(e,t,i){const s=cr.getIsValidAttribute(t,e),n=this.attributeChange.getAttributes()[e];if(s&&void 0!==n){const s=t.getAttribute(e);null!==s&&(i[e]=s),t.setAttribute(e,n)}else fs.error(`This ${t.tagName} does not support this attribute: ${e}`,131,this.getEntityIds());fs.debug(`Applied ${n}`)}createCssText(e){const{css:t,style:i}=this.attributeChange.getAttributes();if(f(t))return i;const s=null!=i?i:"";let n="";return Object.entries(t).forEach((([e,t])=>{if(!new RegExp(e+"\\s?:").test(s)){const i=t.includes("!important")?t:`${t} !important`;n+=`${os(e)}:${i};`}})),f(i)?e.style.cssText+n:n+s}shouldReapply(e){for(const t in this.attributeChange.getAttributes())if(Object.prototype.hasOwnProperty.call(this.attributeChange.getAttributes(),t))switch(fs.debug(`shouldReapply(): CHECKING "${t}"`),t){case"css":case"className":case"style":case"alt":fs.debug(`shouldReapply(): SKIP (attribute "${t}" not checked)`);break;case"src":case"srcset":case"sizes":case"href":{const i=this.attributeChange.getAttributes()[t];if(void 0!==i){const s=e.getAttribute(t);if(""===i&&null===s){fs.debug(`shouldReapply(): SKIP (value of "${t}" is null; configured value is empty string)`);break}if(i!==s)return fs.debug(`shouldReapply(): YES (value of "${t}" changed from "${i}" to "${s}")`),!0;fs.debug(`shouldReapply(): SKIP (value of "${t}" did not change)`);break}fs.debug(`shouldReapply(): SKIP (configured value of "${t}" is undefined)`);break}case"html":{const i=this.attributeChange.getAttributes()[t],s=document.createElement("div");if(void 0!==i&&(s.innerHTML=this.renderContent(i)),e.innerText!==s.innerText)return fs.debug(`shouldReapply(): YES (The visible text of the element has changed from "${s.innerText}" to "${e.innerText}")`),!0;fs.debug(`shouldReapply(): SKIP (The visible text of the element has not changed; comparing configured "${s.innerText}" to current "${e.innerText}")`);break}default:fs.error(`[EnhancedAttributeChange]: shouldReapply() found unknown attribute: ${t}`,201,this.getEntityIds())}return fs.debug("shouldReapply(): NO (all attributes skipped)"),!1}renderContent(e){return"string"==typeof e?e:Gn(this.attributeData,e,!0)}};let dr=cr;__publicField(dr,"VALID_TAGS_BY_NON_STANDARD_ATTRIBUTE",{alt:["img"],src:["img"],srcset:["img"],sizes:["img"],href:["a"]});class ur extends Kn{constructor(e,t,i,s){super(t,i,s),__publicField(this,"customCodeChange"),this.customCodeChange=e}isReadyToApply(){return this.customCodeChange.isReadyToApply()}apply(e,t){fs.group("EnhancedCustomCodeChange.apply()"),fs.debug(`Applying change: ${Mi(this.customCodeChange)}`);try{this.customCodeChange.getCss().ifPresent((e=>{this.injectCss(e)})),t.detachObserver(),this.customCodeChange.getCode().ifPresent((e=>{this.runCode(e)}))}finally{t.attachObserver(),e(),fs.groupEnd()}}undo(){}runCode(e){try{fs.info("Running code for CUSTOM_CODE change"),xs.eval(e)}catch(t){const e=As(t);throw e.message="Code execution failed\n"+e.message,e}}injectCss(e){try{const t=this.customCodeChange.getId().orElseRun(Vs);fs.info("Injecting css for CUSTOM_CODE change"),xs.injectCss(e,`dom-change-${t}`,document)}catch(t){const e=As(t);throw e.message="Css injection failed\n"+e.message,e}}}class gr extends Kn{constructor(e,t,i,s){super(t,i,s),__publicField(this,"insertElementChange"),this.insertElementChange=e}isReadyToApply(){return this.insertElementChange.isReadyToApply()}apply(e,t){fs.group("EnhancedInsertElementChange.apply()"),fs.debug(`Applying change: ${Mi(this.insertElementChange)}`);const i=this.createInsertionElement();t.registerSelectorAndExecute(this.insertElementChange.getTargetPosition().selector,(()=>{this.insertElement(i,e)}),{shouldReapply:this.shouldReapply.bind(this)},this.getEntityIds()),fs.groupEnd()}undo(){fs.group("EnhancedInsertElementChange.undo()"),fs.debug(`Undoing change: ${Mi(this.insertElementChange)}`),this.insertElementChange.getId().ifPresent((e=>{const t=er(e);1===t.length?t[0].remove():fs.warn(`Unexpected error when undoing insertElementChange. Auto-generated attribute\n        selector expected 1 element match but found ${t.length}`,191,this.getEntityIds())})),fs.groupEnd()}insertElement(e,t){this.removeExistingElements(),this.insertElementChange.getTargetElement().ifPresent((i=>{i.insertAdjacentElement(this.insertElementChange.getTargetPosition().insertPosition,e),t()})).ifAbsent((()=>{throw new Error("Unexpected error: targetElement not found")})),this.insertElementChange.getId().ifPresent((t=>{Qn(e,t,{value:this.insertElementChange.getElementType(),type:Qe.INSERT_ELEMENT}),tr(e,t)}))}getInsertedElements(){return document.querySelectorAll(`#${this.insertElementChange.getIdAttribute()}`)}removeExistingElements(){const e=this.getInsertedElements();Array.prototype.forEach.call(e,(e=>{e.remove()}))}createInsertionElement(){let e;if(this.insertElementChange instanceof Ke)e=`h${this.insertElementChange.getSize()}`;else switch(this.insertElementChange.getElementType()){case"image":e="img";break;case"video":e="video";break;default:e="div"}const t=document.createElement(e);return t.id=this.insertElementChange.getIdAttribute(),t}shouldReapply(){return 0===this.getInsertedElements().length}}const hr=class extends Kn{constructor(e,t,i,s){super(t,i,s),__publicField(this,"moveElementChange"),__publicField(this,"hasLoggedMutationWarning",!1),this.moveElementChange=e}static createAndInsertPlaceholderElement(e){const t=document.createElement("imizeplaceholder");return t.style.display="none",t.hidden=!0,e.after(t),t}isReadyToApply(){return this.moveElementChange.isReadyToApply()}apply(e,t){fs.group("EnhancedMoveElementChange.apply()"),fs.debug(`Applying change: ${Mi(this.moveElementChange)}`),t.registerSelectorAndExecute(this.moveElementChange.getSelector(),(()=>{}),{shouldReapply:this.shouldReapply.bind(this)},this.getEntityIds()),this.moveElement(e),fs.groupEnd()}undo(){fs.group("EnhancedMoveElementChange.undo()"),fs.debug(`Undoing change: ${Mi(this.moveElementChange)}`),this.moveElementChange.getId().ifPresent((e=>{const t=er(e);if(1===t.length){const i=t[0];Yn(i,e).ifPresent((({value:e})=>{null!==e.parentElement&&e.parentElement.replaceChild(i,e)})).ifAbsent((()=>{fs.warn(`Unexpected error when undoing moveElementChange. getChangeData(${e}): could not find data`,195,this.getEntityIds())})),ir(i,e),Jn(i,e),i.removeAttribute(hr.MOVE_ELEMENT_DATA_ATTRIBUTE_NAME)}else fs.warn(`Unexpected error when undoing moveElementChange. Auto-generated attribute\n        selector expected 1 element match but found ${t.length}`,196,this.getEntityIds())})),fs.groupEnd()}getMovedElement(){const e=document.querySelectorAll(`[${hr.MOVE_ELEMENT_DATA_ATTRIBUTE_NAME}="${this.moveElementChange.getMoveId()}"]`);return 1===e.length?ie.ofNullable(e[0]):ie.empty()}shouldReapply(){return this.hasLoggedMutationWarning||(this.getMovedElement().ifPresent((()=>{fs.warn("[EnhancedMoveElementChange]: A mutation was observed for a move element change, however the moved element appears to still exists on the page",225,this.getEntityIds())})).ifAbsent((()=>{fs.warn("[EnhancedMoveElementChange]: A mutation was observed for a move element change and the moved element could not be found on the page.",226,this.getEntityIds())})),this.hasLoggedMutationWarning=!0),!1}moveElement(e){try{this.moveElementChange.getSelectorElement().ifPresent((e=>{this.moveElementChange.getTargetElement().ifPresent((t=>{if(e.contains(t))throw new Error("The target element cannot be a child of the selector element");this.moveElementChange.getId().ifPresent((t=>{tr(e,t);const i=hr.createAndInsertPlaceholderElement(e);Qn(e,t,{value:i,type:Qe.MOVE_ELEMENT})})),t.insertAdjacentElement(this.moveElementChange.getTargetPosition().insertPosition,e),e.setAttribute(hr.MOVE_ELEMENT_DATA_ATTRIBUTE_NAME,this.moveElementChange.getMoveId())})).ifAbsent((()=>{throw new Error("Unexpected error: target element could not be found)")}))})).ifAbsent((()=>{throw new Error("Unexpected error: selector element could not be found)")}))}finally{e()}}};let mr=hr;function pr(e,t,i,s){switch(e.getType()){case Qe.ATTRIBUTE:return new dr(e,t,i,s);case Qe.CUSTOM_CODE:return new ur(e,t,i,s);case Qe.INSERT_ELEMENT:return new gr(e,t,i,s);case Qe.MOVE_ELEMENT:return new mr(e,t,i,s);default:throw new Error(`Unknown DomChangeType: ${e.getType()}`)}}__publicField(mr,"MOVE_ELEMENT_DATA_ATTRIBUTE_NAME",`data-${ri}`);class vr extends Sn{constructor(e,t,i,s){super(),__publicField(this,"elementObserver"),__publicField(this,"entityIds"),__publicField(this,"workQueue",[]),__publicField(this,"readyToRender"),__publicField(this,"isTaskDone",!1),__publicField(this,"calledReadyToRender",!1),this.elementObserver=s,this.readyToRender=t,this.entityIds=i,this.workQueue=e.map((e=>({enhancedChange:e,applied:!1,rendered:!1})))}toString(){return`ChangelistTask(count:${this.workQueue.length}, ${Mi(this.entityIds)})`}cleanup(){this.isTaskDone=!0,this.readyToRenderCallbackOnce()}inTransaction(){return!0}isUnloading(){return!1}getEntityIds(){return this.entityIds}run(){for(const t of this.workQueue)if(!t.applied){if(!t.enhancedChange.isReadyToApply())return En.TRY_LATER;try{t.enhancedChange.apply((()=>{t.rendered=!0,this.readyToRenderCallbackOnce()}),this.elementObserver),t.applied=!0}catch(e){const i=As(e);return i.message=`Failed to apply change: ${Mi(t)}\n${i.message}`,fs.error(i,125,t.enhancedChange.getEntityIds()),this.isTaskDone=!0,this.readyToRenderCallbackOnce(),En.FAILED}}return this.isTaskDone=!0,this.readyToRenderCallbackOnce(),En.SUCCEEDED}readyToRenderCallbackOnce(){if(this.calledReadyToRender)return;if(!this.isTaskDone)return;this.workQueue.filter((e=>e.applied)).every((e=>__async(this,null,(function*(){return e.rendered}))))&&(this.readyToRender(),this.calledReadyToRender=!0)}}class br extends Sn{constructor(e,t,i,s,n,r,a,o,l,c,d,u,g,h,m,p,v){super(),__publicField(this,"variation"),__publicField(this,"environment"),__publicField(this,"customerStorage"),__publicField(this,"attributeStorage"),__publicField(this,"activityStorage"),__publicField(this,"pageContext"),__publicField(this,"serverContext"),__publicField(this,"attributeData"),__publicField(this,"policy"),__publicField(this,"user"),__publicField(this,"decisionContext"),__publicField(this,"startPageviewId"),__publicField(this,"override"),__publicField(this,"statusModel"),__publicField(this,"getVariationRecordedCallbackTuples"),__publicField(this,"elementObserver"),__publicField(this,"hider"),this.environment=e,this.customerStorage=t,this.attributeStorage=i,this.activityStorage=s,this.pageContext=n,this.serverContext=r,this.attributeData=a,this.decisionContext=o,this.policy=l,this.user=c,this.override=d,this.statusModel=u,this.startPageviewId=g,this.hider=h,this.variation=m,this.getVariationRecordedCallbackTuples=p,this.elementObserver=v}toString(){return`ExecuteVariationTask(${this.variation.getId()})`}getEntityIds(){return{variationId:this.variation.getId(),experienceId:this.variation.getExperience().getId()}}inTransaction(){return this.isReadyToExecute()}isUnloading(){return!1}getNotDoneDependencies(){return this.findDependentPageChangelistTasks().filter((e=>!e.isDone()))}run(){let e=En.TRY_LATER;return this.isReadyToExecute()&&(e=this.executeVariation()),e}injectVariationCss(e){if(e.getCss().isPresent()){const i=e.getCss().get();try{fs.info(`Variation ${e.getExperience().getId()}/${e.getId()} injecting css`),xs.injectCss(i,`variation-${e.getId()}`,this.environment.getWindow().document)}catch(t){const i=As(t);return i.message=`Variation (${e.getId()}) css injection failed\n${i.message}`,fs.error(i,91,{variationId:e.getId(),experienceId:e.getExperience().getId()}),!1}}return!0}onReadyToRender(){this.hider.revealExperience(this.variation.getExperience())}isReadyToExecute(){const e=this.passDependencies(),t=this.passExperiencePreconditions(),i=this.passVariationPreconditions(),s=this.hasAppliedPageChanges();return e&&t&&i&&s}passDependencies(){const e=this.variation.getExperience();fs.group("check experience dependsOnExperiences "+e.getId());const t=e.getDependsOnExperiences().every((e=>!this.decisionContext.isDecidingExperience(e)));return fs.debug(t.toString()),fs.groupEnd(),this.statusModel.setExperience(e,"dependsOnExperiences",t),t}passExperiencePreconditions(){const e=this.variation.getExperience();fs.group("check experience preconditions "+e.getId());const t=e.getPreconditions().every((t=>{let i=!1;try{i=xs.evalBoolean(t),fs.info(`Experience ${e.getId()} precondition => ${i}`)}catch(s){const t=As(s);i=!1,t.message=`Experience (${e.getId()}) precondition code execution failed\n${t.message}`,fs.error(t,15,{experienceId:e.getId()})}return i}));return fs.debug(t.toString()),fs.groupEnd(),this.statusModel.setExperience(e,"preconditions",t),t}passVariationPreconditions(){const e=this.variation.getExperience();fs.group("check variations preconditions "+this.variation.getId());const t=this.variation.getPreconditions().every((t=>{let i=!1;try{i=xs.evalBoolean(t),fs.info(`Variation ${e.getId()}/${this.variation.getId()} precondition => ${i}`)}catch(s){const t=As(s);i=!1,t.message=`Variation (${this.variation.getId()}) precondition code execution failed\n${t.message}`,fs.error(t,16,{experienceId:e.getId(),variationId:this.variation.getId()})}return i}));return fs.debug(t.toString()),fs.groupEnd(),this.statusModel.setVariation(this.variation,"preconditions",t),t}hasAppliedPageChanges(){return this.findDependentPageChangelistTasks().every((e=>e.getStatus()===En.SUCCEEDED))}findDependentPageChangelistTasks(){return this.variation.getExperience().getPages().map((e=>this.pageContext.getPageChangelistTask(e))).filter((e=>e.isPresent())).map((e=>e.get()))}}const fr=/^UA-\d+(-\d+)?$/,Er=/^G-[\dA-Z]+$/,_r=e=>fr.test(e),yr=e=>Er.test(e),Sr=e=>{var t;const i=[],s=[],n=e=>{_r(e)&&!i.includes(e)?(fs.debug(`Found UA Tracking ID: ${e}`),i.push(e)):yr(e)&&!s.includes(e)&&(fs.debug(`Found GA4 Measurement ID: ${e}`),s.push(e))},{gaData:r}=e;void 0!==r&&Object.keys(r).forEach((e=>{n(e)}));const a=e.google_tag_data;void 0!==(null==a?void 0:a.td)&&Object.keys(a.td).forEach((e=>{n(e)}));const o=e.google_tag_manager;void 0!==(null==(t=null==o?void 0:o.mb)?void 0:t.h)&&o.mb.h.forEach((({message:e})=>{ts(e)&&"config"===e[0]&&n(e[1])}));const{dataLayer:l}=e;return void 0!==l&&l.forEach((e=>{if(p(e)){const t=Object.values(e);for(const e of t)ts(e)&&"config"===e[0]&&n(e[1])}else ts(e)&&"config"===e[0]&&n(e[1])})),{gua:i,ga4:s}};class Ir extends Sn{constructor(e,t,i,s,n){super(),__publicField(this,"environment"),__publicField(this,"guaIntegration"),__publicField(this,"ga4Integration"),__publicField(this,"variation"),__publicField(this,"override"),__publicField(this,"states",{uaState:"notStarted",ga4State:"notStarted"}),__publicField(this,"uATrackingIdQueue",[]),__publicField(this,"ga4MeasurementIdQueue",[]),__publicField(this,"taskStartTime"),this.environment=e,this.guaIntegration=t,this.ga4Integration=i,this.variation=s,this.override=n,Q(!t.isPresent()||t.get().isEnabled()),Q(!i.isPresent()||i.get().isEnabled())}static get GA4_EVENT_NAME(){return"variation_viewed"}static get WAIT_FOR_GA_TIMEOUT_MS(){return 3e3}static get WAIT_FOR_PROPERTY_IDS_MS(){return 3e3}static isSent(e){return"sent"===e||Ir.isCompleted(e)}static isCompleted(e){return Ir.isSuccessful(e)||"failed"===e}static isSuccessful(e){return"delivered"===e||"skipped"===e}toString(){return"GoogleAnalyticsTask("+this.variation.getId()+")"}inTransaction(){return!0}isUnloading(){return!1}run(){return this.sendOnce(),this.isAllCompleted()?this.isAllSuccessful()?En.SUCCEEDED:En.FAILED:(fs.debug("Waiting for GA delivery confirmation"),En.TRY_LATER)}isAllSent(){return Ir.isSent(this.states.uaState)&&Ir.isSent(this.states.ga4State)}isAllCompleted(){return Ir.isCompleted(this.states.uaState)&&Ir.isCompleted(this.states.ga4State)}isAllSuccessful(){return Ir.isSuccessful(this.states.uaState)&&Ir.isSuccessful(this.states.ga4State)}setState(e,t){this.states[e]!==t&&(fs.debug(`Transitioning ${e} from ${this.states[e]} to ${t}`),this.states[e]=this.isValidStateTransition(this.states[e],t)?t:"failed")}isValidStateTransition(e,t){switch(e){case"notStarted":if("polling"===t||"skipped"===t)return!0;break;case"polling":if("sent"===t||"failed"===t)return!0;break;case"sent":if("delivered"===t)return!0}return this.sendError(`Invalid state transition. Cannot transition from "${e}" to "${t}".`,189),!1}sendOnce(){if(!this.isAllSent()){void 0===this.taskStartTime&&(this.taskStartTime=this.environment.getNowDate(),fs.debug(`GoogleAnalyticsTask start time: ${this.taskStartTime.getTime()}`));const e=this.environment.getNowDate().getTime()-this.taskStartTime.getTime();if(this.override.sendGoogleAnalytics().orElse(!0)){this.guaIntegration.ifPresent((()=>{fs.debug("GoogleUniversalAnalytics - integration is enabled")})).ifAbsent((()=>{fs.debug("Google Universal Analytics - integration is not enabled"),this.setState("uaState","skipped")})),this.ga4Integration.ifPresent((()=>{fs.debug("GoogleAnalytics4 - integration is enabled")})).ifAbsent((()=>{fs.debug("Google Analytics 4 - integration is not enabled"),this.setState("ga4State","skipped")}));this.waitForDataLayer(e).ifPresent((t=>{this.guaIntegration.ifPresent((i=>{if(i.isAutoConfig()){fs.debug("GoogleUniversalAnalytics - AutoConfig is enabled");const s=this.waitForTrackingId(e);s.length>0&&this.sendToUaUsingGtagJsOnce(i,t,s)}else fs.debug("GoogleUniversalAnalytics - AutoConfig is disabled"),this.sendToUaUsingGtagJsOnce(i,t)})),this.ga4Integration.ifPresent((i=>{if(i.isAutoConfig()){fs.debug("GoogleAnalytics4 - AutoConfig is enabled");const s=this.waitForMeasurementId(e);s.length>0&&this.sendToGa4Once(i,t,s)}else fs.debug("GoogleAnalytics4 - AutoConfig is disabled"),this.sendToGa4Once(i,t)}))}))}else fs.debug("Google Analytics - Override behavior has prevented all events from being sent"),this.setState("uaState","skipped"),this.setState("ga4State","skipped")}}sendError(e,t){fs.error(e,t,{variationId:this.variation.getId(),experienceId:this.variation.getExperience().getId()})}shimGtag(e){return function(){e.push(arguments)}}waitForDataLayer(e){const t=this.environment.getWindow();if(Ir.isSent(this.states.uaState)||Ir.isCompleted(this.states.uaState)||this.setState("uaState","polling"),Ir.isSent(this.states.ga4State)||Ir.isCompleted(this.states.ga4State)||this.setState("ga4State","polling"),void 0===t.dataLayer)fs.debug(`window.dataLayer not defined after ${e} ms`);else{if(es(t.dataLayer))return ie.of(t.dataLayer);fs.debug("window.dataLayer is not an array")}return e>=Ir.WAIT_FOR_GA_TIMEOUT_MS&&(Ir.isCompleted(this.states.uaState)||this.setState("uaState","failed"),Ir.isCompleted(this.states.ga4State)||this.setState("ga4State","failed"),this.sendError(`window.dataLayer not present within ${Ir.WAIT_FOR_GA_TIMEOUT_MS} ms`,185)),ie.empty()}waitForTrackingId(e){const t=Sr(this.environment.getWindow());return 0===t.gua.length?(fs.debug(`Auto-configured Tracking ID not present after ${e} ms`),this.setState("uaState","polling"),e>=Ir.WAIT_FOR_PROPERTY_IDS_MS&&(this.setState("uaState","failed"),this.sendError(`GoogleUniversalAnalytics - Auto-configured Tracking ID is not present within ${Ir.WAIT_FOR_PROPERTY_IDS_MS} ms`,186)),[]):t.gua}waitForMeasurementId(e){const t=Sr(this.environment.getWindow());return 0===t.ga4.length?(fs.debug(`Auto-configured Measurement ID not present after ${e} ms`),this.setState("ga4State","polling"),e>=Ir.WAIT_FOR_PROPERTY_IDS_MS&&(this.setState("ga4State","failed"),this.sendError(`GoogleAnalytics4 - Auto-configured Measurement ID is not present within ${Ir.WAIT_FOR_PROPERTY_IDS_MS} ms`,187)),[]):t.ga4}sendToUaUsingGtagJsOnce(e,t,i){if(!Ir.isSent(this.states.uaState)){const s=this.shimGtag(t);e.getDimensionName().ifPresent((e=>{fs.debug(`Found UA custom dimension: ${e}`),s("set",{[e]:"Intellimize"})}));const n=null!=i?i:e.getTrackingIds(),r={event_category:this.getUaEventCategory(),event_label:this.getUaEventLabel(),non_interaction:!0,send_to:n,event_callback:e=>{_r(e)&&(this.handleGaEventSuccess(`UA configuration (iint.gua) + gtag.js. Tracking ID: ${e}`),this.checkDelivered("uaState",e))}};fs.debug(`Sending UA event using gtag.js: ${Mi(r)}`),this.uATrackingIdQueue.push(...n),fs.debug("Google Analytics UA payload sent"),this.setState("uaState","sent"),s("event",this.getUaEventAction(),r)}}sendToGa4Once(e,t,i){if(!Ir.isSent(this.states.ga4State)){const s=this.shimGtag(t),n=null!=i?i:e.getMeasurementIds(),r={experienceId:this.variation.getExperience().getId(),experienceName:this.variation.getExperience().getName(),experienceType:this.variation.getExperience().getType(),variationId:this.variation.getId(),variationName:this.variation.getName(),ccStatus:this.variation.getId()===ti?"holdout":"optimized",send_to:n,event_callback:e=>{yr(e)&&(this.handleGaEventSuccess(`GA4 configuration (iint.ga4) + gtag.js. Measurement ID: ${e}`),this.checkDelivered("ga4State",e))}};fs.debug(`Sending GA4 event using gtag.js: ${Mi(r)}`),this.ga4MeasurementIdQueue.push(...n),fs.debug("Google Analytics 4 payload sent"),this.setState("ga4State","sent"),s("event",Ir.GA4_EVENT_NAME,r)}}getUaEventAction(){return`{${this.variation.getExperience().getName()}}:{${this.variation.getName()}}`}getUaEventCategory(){return`Intellimize - {${this.variation.getExperience().getCampaign().getName()}}`}getUaEventLabel(){return`PageURL: ${this.environment.getHostingPageUrl().getUrl().orElse("unknown")}`}handleGaEventSuccess(e){fs.debug(`Google Analytics payload delivery complete - using ${e}`)}checkDelivered(e,t){const i="uaState"===e?this.uATrackingIdQueue:this.ga4MeasurementIdQueue;ls(i,t),0===i.length&&this.setState(e,"delivered")}}class Cr extends Sn{constructor(e,t,i){super(),__publicField(this,"environment"),__publicField(this,"variation"),__publicField(this,"override"),__publicField(this,"sent",!1),__publicField(this,"delivered",!1),__publicField(this,"timedOut",!1),__publicField(this,"taskStartTime"),this.environment=e,this.variation=t,this.override=i}static get WAIT_FOR_MIXPANEL_TIMEOUT_MS(){return 3e3}toString(){return"MixpanelTask("+this.variation.getId()+")"}inTransaction(){return!0}isUnloading(){return!1}run(){return this.sendOnce(),this.timedOut?En.FAILED:this.sent?this.delivered?En.SUCCEEDED:(fs.debug("Waiting for Mixpanel delivery confirmation"),En.TRY_LATER):En.TRY_LATER}sendOnce(){if(!this.sent){void 0===this.taskStartTime&&(this.taskStartTime=this.environment.getNowDate(),fs.debug(`MixpanelTask start time: ${this.taskStartTime.getTime()}`));if(this.environment.getNowDate().getTime()-this.taskStartTime.getTime()>=Cr.WAIT_FOR_MIXPANEL_TIMEOUT_MS)return fs.error(`MixpanelTask - window.mixpanel.track not present within ${Cr.WAIT_FOR_MIXPANEL_TIMEOUT_MS} ms`,199),void(this.timedOut=!0);if(this.override.sendMixpanel().orElse(!0)){const e=this.environment.getWindow();if(void 0===e.mixpanel)return void fs.debug("window.mixpanel not defined");if(void 0===e.mixpanel.track)return void fs.debug("window.mixpanel.track not defined");const t="Intellimize Viewed",i={[`${this.variation.getExperience().getName()} (${this.variation.getExperience().getId()})`]:`${this.variation.getName()} (${this.variation.getId()})`};e.mixpanel.track(t,i,{send_immediately:!0},(()=>{fs.debug("Mixpanel payload delivery complete"),this.delivered=!0})),fs.debug("Mixpanel payload sent")}else this.delivered=!0,fs.debug("Skipping Mixpanel");this.sent=!0}}}class Tr extends Sn{constructor(e,t,i,s){super(),__publicField(this,"environment"),__publicField(this,"segmentIntegration"),__publicField(this,"variation"),__publicField(this,"override"),__publicField(this,"sent",!1),__publicField(this,"delivered",!1),__publicField(this,"timedOut",!1),__publicField(this,"onTrack",!1),__publicField(this,"onReady",!1),__publicField(this,"trackCallback",!1),__publicField(this,"taskStartTime"),this.environment=e,this.segmentIntegration=t,this.variation=i,this.override=s}static get WAIT_FOR_SEGMENT_TIMEOUT_MS(){return 3e3}toString(){return"SegmentAnalyticsTask("+this.variation.getId()+")"}inTransaction(){return!0}isUnloading(){return!1}run(){return this.sendOnce(),this.timedOut?En.FAILED:this.sent?this.delivered||this.onReady&&this.onTrack&&this.trackCallback?En.SUCCEEDED:(fs.debug("Waiting for Segment delivery confirmation"),En.TRY_LATER):En.TRY_LATER}sendOnce(){if(!this.sent){void 0===this.taskStartTime&&(this.taskStartTime=this.environment.getNowDate(),fs.debug(`SegmentAnalyticsTask start time: ${this.taskStartTime.getTime()}`));if(this.environment.getNowDate().getTime()-this.taskStartTime.getTime()>=Tr.WAIT_FOR_SEGMENT_TIMEOUT_MS)return fs.error(`SegmentAnalyticsTask - window.analytics.track not present within ${Tr.WAIT_FOR_SEGMENT_TIMEOUT_MS} ms`,200),void(this.timedOut=!0);if(this.override.sendSegmentAnalytics().orElse(!0)){const e=this.environment.getWindow();if(void 0===e.analytics)return void fs.debug("window.analytics not defined");if(void 0===e.analytics.track)return void fs.debug("window.analytics.track not defined");const t=this.segmentIntegration.getEventName();e.analytics.on("track",((e,i)=>{e===t&&void 0!==i.variationId&&i.variationId===this.variation.getId()&&(fs.debug("Segment on track event received"),this.onTrack=!0)}));const i={campaignId:this.variation.getExperience().getCampaign().getId(),campaignName:this.variation.getExperience().getCampaign().getName(),experimentId:this.variation.getExperience().getId(),experimentName:this.variation.getExperience().getName(),variationName:this.variation.getName(),variationId:this.variation.getId(),nonInteraction:1};e.analytics.track(t,i,(()=>{fs.debug("Segment track() callback called"),this.trackCallback=!0})),e.analytics.ready((()=>{fs.debug("Segment ready() callback called"),this.onReady=!0}))}else this.delivered=!0;fs.debug("Segment payload sent"),this.sent=!0}}}class Ar extends Sn{constructor(e,t,i,s,n,r,a,o,l,c){super(),__publicField(this,"variation"),__publicField(this,"environment"),__publicField(this,"decisionContext"),__publicField(this,"user"),__publicField(this,"customerStorage"),__publicField(this,"attributeStorage"),__publicField(this,"pageContext"),__publicField(this,"serverContext"),__publicField(this,"policy"),__publicField(this,"override"),__publicField(this,"sent",!1),__publicField(this,"deliveryStatus",En.NOT_STARTED),this.variation=e,this.environment=t,this.decisionContext=i,this.user=s,this.customerStorage=n,this.attributeStorage=r,this.pageContext=a,this.serverContext=o,this.policy=l,this.override=c}toString(){return"ViewEventTask("+this.variation.getId()+")"}getEntityIds(){return{variationId:this.variation.getId(),experienceId:this.variation.getExperience().getId()}}inTransaction(){return!0}isUnloading(){return!1}run(){return this.sendOnce(),this.deliveryStatus===En.SUCCEEDED?En.SUCCEEDED:this.deliveryStatus===En.FAILED?En.FAILED:(fs.debug("Waiting for view event delivery confirmation"),En.TRY_LATER)}sendOnce(){this.sent||(fs.info(`Variation ${this.variation.getExperience().getId()}/${this.variation.getId()} sending view event`),fn.sendView(this.variation,this.environment,this.decisionContext,this.user,this.customerStorage,this.attributeStorage,this.pageContext,this.serverContext,this.policy,this.override).then((()=>{fs.info(`Variation ${this.variation.getExperience().getId()}/${this.variation.getId()} view event delivery success`),this.deliveryStatus=En.SUCCEEDED})).catch((e=>{const t=As(e);fs.warn(`Variation ${this.variation.getExperience().getId()}/${this.variation.getId()} view event delivery failed: ${t.message}`,93,{experienceId:this.variation.getExperience().getId(),variationId:this.variation.getId()}),this.deliveryStatus=En.FAILED})),this.sent=!0)}}class xr extends Sn{constructor(e,t,i,s,n,r,a,o,l,c,d,u,g){super(),__publicField(this,"variation"),__publicField(this,"environment"),__publicField(this,"customerStorage"),__publicField(this,"attributeStorage"),__publicField(this,"activityStorage"),__publicField(this,"pageContext"),__publicField(this,"serverContext"),__publicField(this,"policy"),__publicField(this,"user"),__publicField(this,"decisionContext"),__publicField(this,"startPageviewId"),__publicField(this,"override"),__publicField(this,"getVariationRecordedCallbackTuples"),__publicField(this,"haveUpdatedCustomerStorage",!1),__publicField(this,"haveUpdatedActivityStorage",!1),__publicField(this,"haveScheduledGoogleAnalytics",!1),__publicField(this,"googleAnalyticsTask"),__publicField(this,"haveScheduledSegmentAnalytics",!1),__publicField(this,"segmentAnalyticsTask"),__publicField(this,"haveScheduledMixpanel",!1),__publicField(this,"mixpanelTask"),__publicField(this,"viewEventTask"),__publicField(this,"haveRunSuccessCallbacks",!1),this.variation=e,this.environment=t,this.customerStorage=i,this.attributeStorage=s,this.activityStorage=n,this.pageContext=r,this.serverContext=a,this.policy=o,this.user=l,this.decisionContext=c,this.startPageviewId=d,this.override=u,this.getVariationRecordedCallbackTuples=g}toString(){return"RecordVariationTask("+this.variation.getId()+")"}getEntityIds(){return{variationId:this.variation.getId(),experienceId:this.variation.getExperience().getId()}}inTransaction(){return!1}isUnloading(){return!1}getNotDoneDependencies(){const e=[];return void 0===this.googleAnalyticsTask||this.googleAnalyticsTask.isDone()||e.push(this.googleAnalyticsTask),void 0===this.segmentAnalyticsTask||this.segmentAnalyticsTask.isDone()||e.push(this.segmentAnalyticsTask),void 0===this.mixpanelTask||this.mixpanelTask.isDone()||e.push(this.mixpanelTask),void 0===this.viewEventTask||this.viewEventTask.isDone()||e.push(this.viewEventTask),e}updateCustomerStorageOnce(){this.haveUpdatedCustomerStorage||(fs.debug("RecordVariationTask.updateCustomerStorageOnce() "+this.variation.getId()),this.decisionContext.isStickyVariation(this.variation)?this.customerStorage.saveVariationStickySelection(this.variation,this.environment.getPageviewId()):this.customerStorage.saveVariationPredictionSelection(this.variation,this.decisionContext.getModelVersion(this.variation.getExperience().getId()),this.environment.getPageviewId()),this.haveUpdatedCustomerStorage=!0)}updateActivityStorageOnce(){if(!this.haveUpdatedActivityStorage){fs.debug(`RecordVariationTask.haveUpdatedActivityStorage() ${this.variation.getId()}`);const e=Un.buildViewActivity(this.variation,this.environment,this.user,this.attributeStorage,this.customerStorage);this.activityStorage.add(e),this.haveUpdatedActivityStorage=!0}}sendGoogleAnalyticsOnce(){if(!this.haveScheduledGoogleAnalytics){const e=this.variation.getExperience().getCampaign().getCustomer(),t=e.getIntegrationGoogleUniversalAnalytics(),i=e.getIntegrationGoogle4Analytics(),s=t.isPresent()&&t.get().isEnabled(),n=i.isPresent()&&i.get().isEnabled();(s||n)&&(this.googleAnalyticsTask=new Ir(this.environment,s?t:ie.empty(),n?i:ie.empty(),this.variation,this.override),this.manager.addTask(this.googleAnalyticsTask)),this.haveScheduledGoogleAnalytics=!0}}sendSegmentAnalyticsOnce(){this.haveScheduledSegmentAnalytics||(this.variation.getExperience().getCampaign().getCustomer().getIntegrationSegmentAnalytics().ifPresent((e=>{e.isEnabled()&&(this.segmentAnalyticsTask=new Tr(this.environment,e,this.variation,this.override),this.manager.addTask(this.segmentAnalyticsTask))})),this.haveScheduledSegmentAnalytics=!0)}sendMixpanelOnce(){this.haveScheduledMixpanel||(this.variation.getExperience().getCampaign().getCustomer().getIntegrationMixpanel().ifPresent((e=>{e.isEnabled()&&(this.mixpanelTask=new Cr(this.environment,this.variation,this.override),this.manager.addTask(this.mixpanelTask))})),this.haveScheduledMixpanel=!0)}sendViewEventOnce(){void 0===this.viewEventTask&&(this.viewEventTask=new Ar(this.variation,this.environment,this.decisionContext,this.user,this.customerStorage,this.attributeStorage,this.pageContext,this.serverContext,this.policy,this.override),this.manager.addTask(this.viewEventTask))}checkDependency(e){switch(e.getStatus()){case En.NOT_STARTED:case En.TRY_LATER:case En.WAITING:return En.TRY_LATER;case En.FAILED:case En.CANCELED:return En.FAILED;case En.SUCCEEDED:return En.SUCCEEDED;default:return fs.error(`Unrecognized status from dependency ${e.getStatus()}`,88,{variationId:this.variation.getId(),experienceId:this.variation.getExperience().getId()}),En.FAILED}}getRecordViewStatus(){if(!this.haveUpdatedCustomerStorage)return fs.debug("Waiting for CustomerStorage to be updated"),En.TRY_LATER;if(!this.haveScheduledGoogleAnalytics)return fs.debug("Waiting for GoogleAnalytics to be scheduled"),En.TRY_LATER;if(void 0!==this.googleAnalyticsTask){const e=this.checkDependency(this.googleAnalyticsTask);if(e!==En.SUCCEEDED)return fs.debug(`GoogleAnalytics returned ${En[e]}`),e}if(!this.haveScheduledSegmentAnalytics)return fs.debug("Waiting for SegmentAnalytics to be scheduled"),En.TRY_LATER;if(void 0!==this.segmentAnalyticsTask){const e=this.checkDependency(this.segmentAnalyticsTask);if(e!==En.SUCCEEDED)return fs.debug(`SegmentAnalytics returned ${En[e]}`),e}if(!this.haveScheduledMixpanel)return fs.debug("Waiting for Mixpanel to be scheduled"),En.TRY_LATER;if(void 0!==this.mixpanelTask){const e=this.checkDependency(this.mixpanelTask);if(e!==En.SUCCEEDED)return fs.debug(`Mixpanel returned ${En[e]}`),e}if(void 0===this.viewEventTask)return fs.debug("Waiting for ViewEvent to be scheduled"),En.TRY_LATER;const e=this.checkDependency(this.viewEventTask);return e!==En.SUCCEEDED?(fs.debug(`ViewEvent returned ${En[e]}`),e):En.SUCCEEDED}doSuccessCallbacksOnce(){this.haveRunSuccessCallbacks||(this.getVariationRecordedCallbackTuples().forEach((e=>{const t=e[0];try{t({experienceId:this.variation.getExperience().getId(),experienceName:this.variation.getExperience().getName(),experienceType:this.variation.getExperience().getType(),variationId:this.variation.getId(),variationName:this.variation.getName(),ccStatus:this.variation.getId()===ti?"holdout":"optimized"})}catch(i){const e=As(i);e.message=`Caught exception in onVariationRecorded success callback\n${e.message}`,Wr.consoleError(e.message,165)}})),this.haveRunSuccessCallbacks=!0)}}class wr extends Sn{constructor(e){super(),__publicField(this,"environment"),__publicField(this,"startViewableTimeMs"),__publicField(this,"ignoreCallback",!1),__publicField(this,"activeEventListener",!1),this.environment=e}toString(){return"ViewabilityTask()"}inTransaction(){return!1}isUnloading(){return!1}cleanup(){this.ignoreCallback=!0}run(){const e=this.environment.getNowUnixTimeMs();if(!this.environment.isNowDocumentHidden().orElse(!0)){void 0===this.startViewableTimeMs&&(this.startViewableTimeMs=e);const t=e-this.startViewableTimeMs;return t>=mi?(fs.debug(`page viewable for ${t}ms > threshold ${mi}ms`),En.SUCCEEDED):(fs.debug(`page viewable for ${t}ms < threshold ${mi}ms`),En.TRY_LATER)}return this.startViewableTimeMs=void 0,this.activeEventListener||(fs.debug("page not viewable, scheduling visibility change listener"),this.environment.addListenerVisibilityChange((()=>{try{this.ignoreCallback?fs.debug("visibility change event - ignoring"):(fs.debug("visibility change event - ask TM for polling"),this.setStatusTryLater(),this.manager.runNow())}catch(e){const t=As(e);t.message=`Exception in ViewabilityTask visibilitychange handler\n${t.message}`,fs.error(t,238)}})),this.activeEventListener=!0),En.WAITING}}class kr extends xr{constructor(){super(...arguments),__publicField(this,"viewabilityTask")}toString(){return"RecordCodeVariationTask("+this.variation.getId()+")"}getNotDoneDependencies(){const e=super.getNotDoneDependencies();return void 0===this.viewabilityTask||this.viewabilityTask.isDone()||e.push(this.viewabilityTask),e}run(){if(this.startPageviewId!==this.environment.getPageviewId()&&fs.error(`RecordCodeVariationTask executing, but pageviewId has changed from ${this.startPageviewId} to ${this.environment.getPageviewId()}`,85,{variationId:this.variation.getId(),experienceId:this.variation.getExperience().getId()}),this.scheduleViewabilityOnce(),void 0===this.viewabilityTask||!this.viewabilityTask.isDone())return fs.debug("RecordCodeVariationTask waiting for viewability"),En.TRY_LATER;const e=this.viewabilityTask.getStatus();return e===En.CANCELED?(fs.info(`Variation ${this.variation.getExperience().getId()}/${this.variation.getId()} aborting record view event since viewability was canceled`),En.CANCELED):e===En.FAILED?(fs.info(`Variation ${this.variation.getExperience().getId()}/${this.variation.getId()} aborting record view event since viewability failed`),En.CANCELED):e!==En.SUCCEEDED?(fs.error(`Unknown viewability status ${e}`,86,{variationId:this.variation.getId(),experienceId:this.variation.getExperience().getId()}),En.FAILED):(this.updateCustomerStorageOnce(),this.updateActivityStorageOnce(),this.sendGoogleAnalyticsOnce(),this.sendSegmentAnalyticsOnce(),this.sendMixpanelOnce(),this.sendViewEventOnce(),this.doSuccessCallbacksOnce(),this.getRecordViewStatus())}scheduleViewabilityOnce(){void 0===this.viewabilityTask&&(this.viewabilityTask=new wr(this.environment),this.manager.addTask(this.viewabilityTask))}}class Fr extends br{constructor(){super(...arguments),__publicField(this,"changelistTask")}toString(){return`ExecuteChangelistVariationTask(${this.variation.getId()})`}getNotDoneDependencies(){return void 0===this.changelistTask||this.changelistTask.isDone()?[]:[this.changelistTask]}isReadyToExecute(){if(void 0===this.changelistTask){const e=this.passDependencies(),t=this.passExperiencePreconditions(),i=this.passVariationPreconditions(),s=this.hasAppliedPageChanges();return e&&t&&i&&s}return!0}executeVariation(){if(void 0===this.changelistTask){const e=this.variation.getChanges().map(((e,t)=>pr(e,ar(this.variation),t,this.attributeData)));this.changelistTask=new vr(e,(()=>{this.onReadyToRender()}),{variationId:this.variation.getId(),experienceId:this.variation.getExperience().getId()},this.elementObserver),this.manager.addTask(this.changelistTask)}if(this.changelistTask.isDone()){if(this.changelistTask.getStatus()===En.FAILED||this.changelistTask.getStatus()===En.CANCELED)return this.statusModel.setVariation(this.variation,"failChange",!0),En.FAILED;if(this.changelistTask.getStatus()===En.SUCCEEDED)return this.manager.addTask(new kr(this.variation,this.environment,this.customerStorage,this.attributeStorage,this.activityStorage,this.pageContext,this.serverContext,this.policy,this.user,this.decisionContext,this.startPageviewId,this.override,this.getVariationRecordedCallbackTuples)),this.statusModel.setVariation(this.variation,"apply",!0),En.SUCCEEDED}return En.TRY_LATER}}class Pr extends br{toString(){return`ExecuteCodeVariationTask(${this.variation.getId()})`}executeVariation(){if(!this.injectVariationCss(this.variation))return this.statusModel.setVariation(this.variation,"failCSS",!0),this.onReadyToRender(),En.FAILED;this.elementObserver.detachObserver();const e=this.runVariationCode(this.variation);return this.elementObserver.attachObserver(),e?(this.onReadyToRender(),this.manager.addTask(new kr(this.variation,this.environment,this.customerStorage,this.attributeStorage,this.activityStorage,this.pageContext,this.serverContext,this.policy,this.user,this.decisionContext,this.startPageviewId,this.override,this.getVariationRecordedCallbackTuples)),this.statusModel.setVariation(this.variation,"apply",!0),En.SUCCEEDED):(this.statusModel.setVariation(this.variation,"failCode",!0),this.onReadyToRender(),En.FAILED)}runVariationCode(e){if(e.getCode().isPresent()){const i=e.getCode().get();try{fs.info(`Variation ${e.getExperience().getId()}/${e.getId()} running code`),xs.eval(i)}catch(t){const i=As(t);return i.message=`Variation (${e.getId()}) code execution failed\n${i.message}`,fs.error(i,17,{variationId:e.getId(),experienceId:e.getExperience().getId()}),!1}}return!0}}class Dr extends Sn{constructor(e,t){super(),__publicField(this,"targetUrl"),__publicField(this,"environment"),this.targetUrl=e,this.environment=t}toString(){return"RedirectTask("+this.targetUrl+")"}inTransaction(){return!1}isUnloading(){return!0}run(){return fs.info("Executing redirect to "+this.targetUrl),this.environment.redirect(this.targetUrl),En.SUCCEEDED}}class Mr extends xr{constructor(e,t,i,s,n,r,a,o,l,c,d,u,g,h,m){super(e,t,i,s,n,r,a,o,l,c,d,u,g),__publicField(this,"redirectUrl"),__publicField(this,"onReadyToRender"),__publicField(this,"startTimeMs"),__publicField(this,"redirectScheduled",!1),this.redirectUrl=h,this.onReadyToRender=m}static get REDIRECT_TIME_BUDGET_MS(){return 3e3}toString(){return"RecordRedirectVariationTask("+this.variation.getId()+")"}cleanup(){this.onReadyToRender()}run(){this.startTimeMs||(this.startTimeMs=this.environment.getNowUnixTimeMs());let e=this.runSteps();return!this.isDone()&&this.hasExceededTimeBudget()&&(this.scheduleRedirectOnce(),e=En.FAILED),this.doSuccessCallbacksOnce(),e}runSteps(){this.startPageviewId!==this.environment.getPageviewId()&&fs.error(`RecordRedirectVariationTask executing, but pageviewId has changed from ${this.startPageviewId} to ${this.environment.getPageviewId()}`,87,{variationId:this.variation.getId(),experienceId:this.variation.getExperience().getId()}),this.updateCustomerStorageOnce(),this.updateActivityStorageOnce(),this.sendGoogleAnalyticsOnce(),this.sendSegmentAnalyticsOnce(),this.sendMixpanelOnce(),this.sendViewEventOnce();const e=this.getRecordViewStatus();return Sn.isDone(e)?(this.scheduleRedirectOnce(),En.SUCCEEDED):e}scheduleRedirectOnce(){if(!this.redirectScheduled){const e=new Dr(this.redirectUrl,this.environment);this.manager.addTask(e),this.redirectScheduled=!0,this.environment.getWindow().setTimeout((()=>{this.onReadyToRender()}),this.getTimeRemainingMs()+li)}}getTimeRemainingMs(){const e=this.environment.getNowUnixTimeMs()-this.startTimeMs,t=Mr.REDIRECT_TIME_BUDGET_MS;return fs.debug("getTimeRemainingMs elapsed: "+e+", budget: "+t),t-e}hasExceededTimeBudget(){return this.getTimeRemainingMs()<0}}class Nr extends br{toString(){return`ExecuteRedirectVariationTask(${this.variation.getId()})`}executeVariation(){const e=this.runVariationRedirectCode(this.variation);if(void 0===e)return this.onReadyToRender(),En.FAILED;return this.injectVariationCss(this.variation)?(this.manager.addTask(new Mr(this.variation,this.environment,this.customerStorage,this.attributeStorage,this.activityStorage,this.pageContext,this.serverContext,this.policy,this.user,this.decisionContext,this.startPageviewId,this.override,this.getVariationRecordedCallbackTuples,e,this.onReadyToRender)),this.statusModel.setVariation(this.variation,"apply",!0),En.SUCCEEDED):(this.onReadyToRender(),En.FAILED)}runVariationRedirectCode(e){let t;if(e.getRedirect().isPresent()){const s=e.getRedirect().get();try{fs.info(`Variation ${e.getExperience().getId()}/${e.getId()} running redirect code`),t=xs.evalString(s),fs.info(`Redirect URL is ${t}`)}catch(i){const s=As(i);s.message=`Variation (${e.getId()}) redirect code execution failed${s.message}`,fs.error(s,18,{variationId:e.getId(),experienceId:e.getExperience().getId()}),t=void 0}}return t}}function Or(e,t,i,s,n,r,a,o,l,c,d,u,g,h,m,p,v){let b;return b=m.isTypeChange()?Fr:m.isRedirect()?Nr:Pr,new b(e,t,i,s,n,r,a,o,l,c,d,u,g,h,m,p,v)}class Rr extends Sn{constructor(e,t,i,s,n,r,a,o,l,c,d,u,g,h,m,p){super(),__publicField(this,"environment"),__publicField(this,"attributeStorage"),__publicField(this,"activityStorage"),__publicField(this,"customerStorage"),__publicField(this,"decisionContext"),__publicField(this,"pageContext"),__publicField(this,"serverContext"),__publicField(this,"attributeData"),__publicField(this,"user"),__publicField(this,"override"),__publicField(this,"statusModel"),__publicField(this,"hider"),__publicField(this,"getVariationRecordedCallbackTuples"),__publicField(this,"elementObserver"),__publicField(this,"startPageviewId"),__publicField(this,"startTimeMs"),__publicField(this,"executeVariationTasks",{}),__publicField(this,"policy"),__publicField(this,"didHide",!1),this.environment=e,this.attributeStorage=t,this.activityStorage=i,this.customerStorage=s,this.decisionContext=n,this.pageContext=r,this.serverContext=a,this.attributeData=o,this.user=l,this.override=c,this.statusModel=d,this.hider=u,this.getVariationRecordedCallbackTuples=h,this.elementObserver=m,this.policy=p,this.startTimeMs=this.environment.getNowUnixTimeMs(),this.startPageviewId=e.getPageviewId(),this.override.requestAnimationFrame().orElse(g)&&this.environment.getWindow().requestAnimationFrame((()=>{this.handleRaf()}))}static get RAF_RUNTIME_MS(){return 3e4}toString(){return`ExecuteExperiencesTask(${this.startPageviewId})`}inTransaction(){return!1}isUnloading(){return!1}getStartPageviewId(){return this.startPageviewId}hideExperiencesOnce(){this.didHide||(this.hider.hideExperiences(this.decisionContext.getExperiences()),this.hider.revealDocumentIfAllRegionsHidden(),this.didHide=!0)}setPolicy(e){this.policy=e}run(){const{policy:e}=this;return void 0===e?(fs.error("Cannot execute experiences without a policy",198),En.FAILED):(this.decisionContext.getExperiences().forEach((t=>{if(this.decisionContext.hasNext(t.getId())){const i=this.decisionContext.getFirst(t.getId());void 0===this.executeVariationTasks[t.getId()]&&(fs.debug(`Queueing ExecuteVariationTask for ExperienceID: ${t.getId()}, Variation ID: ${i.getId()}`),this.executeVariationTasks[t.getId()]=Or(this.environment,this.customerStorage,this.attributeStorage,this.activityStorage,this.pageContext,this.serverContext,this.attributeData,this.decisionContext,e,this.user,this.override,this.statusModel,this.startPageviewId,this.hider,i,this.getVariationRecordedCallbackTuples,this.elementObserver),this.manager.addTask(this.executeVariationTasks[t.getId()]));const s=this.executeVariationTasks[t.getId()];s.getStatus()===En.FAILED||s.getStatus()===En.CANCELED?this.handleOnExperienceError(t):s.getStatus()===En.SUCCEEDED&&this.handleOnExperienceSuccess(t)}})),this.decisionContext.isEmpty()?En.SUCCEEDED:En.TRY_LATER)}handleOnExperienceSuccess(e){this.decisionContext.removeExperience(e.getId())}handleOnExperienceError(e){this.decisionContext.removeExperience(e.getId()),this.hider.revealExperience(e)}handleRaf(){this.manager&&this.manager.runNow(),this.environment.getNowUnixTimeMs()-this.startTimeMs<Rr.RAF_RUNTIME_MS&&!Sn.isDone(this.getStatus())&&this.environment.getWindow().requestAnimationFrame((()=>{this.handleRaf()}))}}const Lr=class extends Sn{constructor(e,t,i,s,n){super(),__publicField(this,"instanceNumber"),__publicField(this,"pageviewId"),__publicField(this,"customer"),__publicField(this,"environment"),__publicField(this,"customerStorage"),__publicField(this,"success"),__publicField(this,"startTimeMs"),this.instanceNumber=++Lr.instanceCount,this.environment=e,this.pageviewId=t,this.customerStorage=i,this.customer=s,this.success=n}static get DEPENDENCIES_TIME_BUDGET_MS(){return 3e3}toString(){return`SelectedVariationsCallbackTask(${this.pageviewId}, ${this.instanceNumber})`}inTransaction(){return!0}isUnloading(){return!1}getNotDoneDependencies(){const e=[],t=this.getRunningDependentRecordTasks();Array.prototype.push.apply(e,t);const i=this.getDependentExecuteExperiencesTask();return i.length>0&&!i[0].isDone()&&Array.prototype.push.apply(e,i),e}run(){this.startTimeMs||(this.startTimeMs=this.environment.getNowUnixTimeMs());const e=this.getRunningDependentRecordTasks();if(e.length>0)return fs.debug("Waiting for "+e[0].toString()+", "+En[e[0].getStatus()]),En.TRY_LATER;const t=this.getDependentExecuteExperiencesTask();if(t.length>1)return fs.error(`Found multiple ExecuteExperiencesTasks for pageviewId ${this.pageviewId}`,89),En.FAILED;if(0===t.length)return En.TRY_LATER;const i=t[0];return Sn.isDone(i.getStatus())?(this.doCallback(),En.SUCCEEDED):this.hasExceededTimeBudget()?(fs.debug(`Time budget of ${Lr.DEPENDENCIES_TIME_BUDGET_MS} ms exceeded while waiting for ExecuteVariationTasks to complete; triggering success callbacks now`),this.doCallback(),En.SUCCEEDED):(fs.debug("Waiting for "+i.toString()+", "+En[i.getStatus()]),En.TRY_LATER)}getRunningDependentRecordTasks(){return this.manager.findTasks((e=>e instanceof xr&&!e.isDone()))}getDependentExecuteExperiencesTask(){return this.manager.findTasks((e=>e instanceof Rr&&this.pageviewId===e.getStartPageviewId()))}doCallback(){const e=this.customerStorage.getPageviewSelections(this.pageviewId),t=this.generateResponse(e);fs.debug("Callback data: "+Mi(t));try{this.success.call(void 0,t)}catch(i){const e=As(i);e.message=`Caught exception in customer callback: ${e.message}`,fs.error(e,8)}}getTimeRemainingMs(){const e=this.environment.getNowUnixTimeMs()-this.startTimeMs,t=Lr.DEPENDENCIES_TIME_BUDGET_MS;return fs.debug("getTimeRemainingMs elapsed: "+e+", budget: "+t),t-e}hasExceededTimeBudget(){return this.getTimeRemainingMs()<0}};let Ur=Lr;__publicField(Ur,"instanceCount",0);class Vr extends Ur{toString(){return"SelectedVariationIdsCallbackTask("+this.pageviewId+","+this.instanceNumber+")"}generateResponse(e){const t={};return e.forEach((e=>{t[e.experienceId]=e.variationId})),t}}class $r extends Ur{toString(){return"SelectedVariationNamesCallbackTask("+this.pageviewId+","+this.instanceNumber+")"}generateResponse(e){const t={};return e.forEach((e=>{e.campaignId in t||(t[e.campaignId]={});const i={};i.varId=e.variationId,this.customer.getCampaign(e.campaignId).ifPresent((s=>{t[e.campaignId].campaignName=s.getName(),s.getExperience(e.experienceId).ifPresent((t=>{i.expName=t.getName(),t.getVariation(e.variationId).ifPresent((e=>{i.varName=e.getName()}))}))})),t[e.campaignId][e.experienceId]=i})),t}}class zr extends Sn{constructor(e,t,i,s,n){super(),__publicField(this,"sent",!1),__publicField(this,"deliveryStatus",En.NOT_STARTED),__publicField(this,"customer"),__publicField(this,"user"),__publicField(this,"customerUserDomain"),__publicField(this,"customerUserId"),__publicField(this,"attributeStorage"),this.customer=e,this.user=t,this.customerUserDomain=i,this.customerUserId=s,this.attributeStorage=n}static get ENDPOINT(){return"/user-alias"}toString(){return`UserAliasTask(customerUserDomain: ${this.customerUserDomain}, customerUserId: ${this.customerUserId})`}inTransaction(){return!0}isUnloading(){return!1}run(){return this.sendOnce(),this.deliveryStatus===En.SUCCEEDED?En.SUCCEEDED:this.deliveryStatus===En.FAILED?En.FAILED:(fs.debug("Waiting for user alias delivery confirmation"),En.TRY_LATER)}sendOnce(){this.sent||(fs.info(`Sending request to set up user alias for ${this.customerUserDomain} (${this.customerUserId})`),vn(vi,zr.ENDPOINT,{method:"POST",body:Ni({customerId:this.customer.getId(),userDomain1:"intellimize",userId1:this.user.getId(),userDomain2:this.customerUserDomain,userId2:this.customerUserId})}).then((()=>{this.saveToLocalStorage(),this.deliveryStatus=En.SUCCEEDED,fs.info(`Successfully set up user alias for ${this.customerUserDomain} (${this.customerUserId})`)})).catch((e=>{const t=As(e);fs.error(t,92),this.deliveryStatus=En.FAILED})),this.sent=!0)}saveToLocalStorage(){fs.info(`Saving user alias to localStorage for ${this.customerUserDomain} (${this.customerUserId})`);const e=this.attributeStorage.getInternalAttributes("user",["userAlias"]);void 0===e.userAlias&&(e.userAlias={}),e.userAlias[this.customerUserDomain]=this.customerUserId,this.attributeStorage.setInternalAttributes("user",e)}}class Wr{constructor(e,t,i,s,n,r,a,o,l,c,d,u,g,h,m,p){__publicField(this,"environment"),__publicField(this,"taskManager"),__publicField(this,"customerStorage"),__publicField(this,"attributeStorage"),__publicField(this,"activityStorage"),__publicField(this,"integrationDataStorage"),__publicField(this,"pageContext"),__publicField(this,"serverContext"),__publicField(this,"policy"),__publicField(this,"customer"),__publicField(this,"user"),__publicField(this,"override"),__publicField(this,"statusModel"),__publicField(this,"callQueue"),__publicField(this,"readyCallbackQueue"),__publicField(this,"addVariationRecordedCallbackTuple"),__publicField(this,"initialized"),this.environment=e,this.taskManager=t,this.customerStorage=i,this.attributeStorage=s,this.activityStorage=n,this.integrationDataStorage=r,this.pageContext=a,this.serverContext=o,this.policy=null!=l?l:new mn(e),this.customer=c,this.user=d,this.override=u,this.statusModel=g,this.callQueue=h,this.readyCallbackQueue=m,this.addVariationRecordedCallbackTuple=p,this.initialized=!1}static validatePushCommand(e){return e&&"object"==typeof e&&e.constructor===Array?!(!e[0]||"string"!=typeof e[0])||(Wr.consoleError(`intellimize.push(): First parameter must be a string: ${Mi(e)}`,114),!1):(Wr.consoleError(`intellimize.push(): Parameter must be an array: ${Mi(e)}`,113),!1)}static validateReadyCallback(e){return!!ss(e)||(Wr.consoleError("intellimize.ready() was called with a non-function argument",115),!1)}static consoleError(e,t){console.error(e),fs.error(e,t)}static validateAttributeScope(e){return"user"===e||"pageview"===e}static validateAttributes(e){return null!=e&&is(e)}static filterAttributePairs(e){for(const t in e){if(!Object.prototype.hasOwnProperty.call(e,t))continue;if(!Wr.validateAttributeName(t)){Wr.consoleError(`intellimize.setAttributes() invalid attribute ${t}`,96),delete e[t];continue}const i=Wr.transformAttributeValue(e[t]);Wr.validateAttributeValue(i)?e[t]=i:(Wr.consoleError(`intellimize.setAttributes() invalid attribute ${t}: ${e[t]}`,97),delete e[t])}}static validateAttributeName(e){return/^[\u0020-\u003C\u003E-\u007E]{1,40}$/.test(e)}static transformAttributeValue(e){let t=e;return"boolean"==typeof t&&(t=t.toString()),"number"==typeof t&&(t=t.toString()),null===t&&(t=""),void 0===t&&(t=""),"string"==typeof t&&t.length>255&&(t=t.slice(0,255)),t}static validateAttributeValue(e){return void 0!==e&&"string"==typeof e&&e.length>=0&&e.length<256}static validateAttributeNames(e){if(void 0===e||!Array.isArray(e))return!1;for(const t of e)if(!Wr.validateAttributeName(t))return!1;return!0}static validateCustomEventApiName(e){return/^[\u0021-\u007E]{1,40}$/.test(e)}static validateCustomEventProperties(e){const t=new Set(["value","actionId"]);return!!Object.keys(e).every((e=>t.has(e)))&&(!(void 0!==e.value&&!Tn(e.value))&&!(void 0!==e.actionId&&!An(e.actionId)))}static validateCustomerUserId(e){return/^[\u0021-\u007E]{1,300}$/.test(e)}static validateCustomerUserDomain(e){return"intellimize"!==e&&!e.startsWith("__")&&/^[\u0021-\u007E]{1,50}$/.test(e)}static doCallback(e){void 0!==e&&xs.executeFunction(e,5)}get isInitialized(){return this.initialized}setPolicy(e){this.policy=e}initialize(){const e=this,t=this.environment.getWindow(),{intellimize:i}=t;void 0!==i?(i.getSelectedVariationIds=(e,t)=>{"function"==typeof e?void 0===t||"function"==typeof t?this.getSelectedVariationIds(e,t):Wr.consoleError("intellimize.getSelectedVariationIds() second parameter must be an error function",103):Wr.consoleError("intellimize.getSelectedVariationIds() first parameter must be a success function",102)},i.getSelectedVariationNames=(e,t)=>{"function"==typeof e?void 0===t||"function"==typeof t?this.getSelectedVariationNames(e,t):Wr.consoleError("intellimize.getSelectedVariationNames() second parameter must be an error function",105):Wr.consoleError("intellimize.getSelectedVariationNames() First parameter must be a success function",104)},i.onVariationRecorded=function(t,i){e.onVariationRecorded(t.bind(this),void 0===i?void 0:i.bind(this))},i.setAttributes=(e,t)=>{this.setAttributes(e,t)},i.getAttributes=(e,t)=>this.getAttributes(e,t),i.getAllAttributes=e=>this.getAllAttributes(e),i.deleteAttributes=(e,t)=>{this.deleteAttributes(e,t)},i.deleteAllAttributes=e=>{this.deleteAllAttributes(e)},i.getIntegrationData=e=>this.getIntegrationData(e),i.sendEvent=(e,t,i)=>{this.sendEvent(e,t,i)},i.activate=e=>{this.activate(e)},i.setUserId=(e,t)=>{this.setCustomerUserId(e,t)},i.getActivities=()=>this.getActivities(),i.push=e=>{Wr.validatePushCommand(e)&&this.push(e)},i.ready=e=>{Wr.validateReadyCallback(e)&&this.ready(e)},this.callQueue.forEach((e=>{e&&"object"==typeof e&&e.constructor===Array?"push"!==e[0]?this.push(e):Wr.consoleError('intellimize.push() Refusing to process command "push", to prevent infinite recursion.',10):Wr.consoleError("intellimize.push() Parameter must be an array: "+Mi(e),9)})),this.readyCallbackQueue.forEach(((e,t)=>{fs.debug(`intellimize.ready() executing registered callback #${t+1}`),this.ready(e)})),this.initialized=!0):fs.error("window.intellimize is undefined: Cannot initialize ExternalApi",218)}getSelectedVariationIds(e,t){fs.debug("getSelectedVariationIds()"),fs.warn("getSelectedVariationIds",160);const i=this.environment.getPageviewId(),s=new Vr(this.environment,i,this.customerStorage,this.customer,e);this.taskManager.addTask(s)}getSelectedVariationNames(e,t){fs.debug("getSelectedVariationNames()"),fs.warn("getSelectedVariationNames",161);const i=this.environment.getPageviewId(),s=new $r(this.environment,i,this.customerStorage,this.customer,e);this.taskManager.addTask(s)}onVariationRecorded(e,t){fs.debug("onVariationRecorded()"),fs.warn("onVariationRecorded",203),"function"==typeof e?void 0===t||"function"==typeof t?this.addVariationRecordedCallbackTuple([e,ie.ofNullable(t)]):Wr.consoleError("intellimize.onVariationRecorded() second parameter must be an error function",164):Wr.consoleError("intellimize.onVariationRecorded() first parameter must be a success function",163)}setAttributes(e,t){fs.debug(`setAttributes(${e}, ${Mi(t)})`),Wr.validateAttributeScope(e)?Wr.validateAttributes(t)?(Wr.filterAttributePairs(t),this.attributeStorage.setCustomAttributes(e,t)):Wr.consoleError("intellimize.setAttributes() invalid attributes parameter",110):Wr.consoleError("intellimize.setAttributes() invalid scope parameter",109)}getAttributes(e,t){return fs.debug(`getAttributes(${e}, ${t})`),Wr.validateAttributeScope(e)?Wr.validateAttributeNames(t)?this.attributeStorage.getCustomAttributes(e,t):(Wr.consoleError("intellimize.getAttributes() invalid names parameter",100),{}):(Wr.consoleError("intellimize.getAttributes() invalid scope parameter",99),{})}getAllAttributes(e){return fs.debug(`getAllAttributes(${e}`),Wr.validateAttributeScope(e)?this.attributeStorage.getCustomAttributes(e):(Wr.consoleError("intellimize.getAllAttributes() invalid scope parameter",98),{})}deleteAttributes(e,t){fs.debug(`deleteAttributes(${e}, ${t})`),Wr.validateAttributeScope(e)?Wr.validateAttributeNames(t)?this.attributeStorage.deleteCustomAttributes(e,t):Wr.consoleError("intellimize.deleteAttributes() invalid names parameter",95):Wr.consoleError("intellimize.deleteAttributes() invalid scope parameter",94)}deleteAllAttributes(e){fs.debug(`deleteAllAttributes(${e})`),Wr.validateAttributeScope(e)?this.attributeStorage.deleteCustomAttributes(e):Wr.consoleError("intellimize.deleteAllAttributes() invalid scope parameter",20)}getIntegrationData(e){var t;if(fs.debug(`getIntegrationData(${e})`),"marketoLead"===e){return null!=(t=this.integrationDataStorage.getData("marketo").flatMap((e=>dn(e))).orElse({lead:{fields:{},lists:[]}}).lead)?t:{}}return nn.includes(e)?this.integrationDataStorage.getData(e).flatMap((e=>ie.ofNullable(e))).orElse({}):(Wr.consoleError("intellimize.getData() invalid integration name parameter",101),{})}sendEvent(e,t,i){return fs.debug(`sendEvent(${e}, ${Mi(t)} )`),Wr.validateCustomEventApiName(e)?void 0===t||Wr.validateCustomEventProperties(t)?void this.customer.getCustomEvent(e).flatMap((t=>this.override.isEventLive(t).orElse("live"===t.getState())?ie.ofNullable(t):(fs.debug(`sendEvent(${e}) event is not live`),ie.empty()))).ifPresent((e=>{const s=void 0===t?void 0:t.value;let n=void 0===t?void 0:t.actionId;void 0===n&&(n=this.environment.generateActionId());const r=new en(e,n,s,void 0);this.activityStorage.add(Un.buildConversionActivity(r,this.customer,this.environment,this.user,this.attributeStorage,this.customerStorage));const a=new Cn(r,this.environment,this.customer,this.customerStorage,this.attributeStorage,this.pageContext,this.serverContext,this.policy,this.user,this.override,this.statusModel);void 0!==i&&a.onDone(i),this.taskManager.addTask(a)})).ifAbsent((()=>{Wr.consoleError(`intellimize.sendEvent() apiName not found "${e}"`,19),Wr.doCallback(i)})):(Wr.consoleError(`intellimize.sendEvent() invalid properties "${Mi(t)}"`,108),void Wr.doCallback(i)):(Wr.consoleError(`intellimize.sendEvent() invalid apiName "${e}"`,107),void Wr.doCallback(i))}activate(e){fs.debug("activate()");const t=this.taskManager.findTasks((e=>e instanceof Vn&&!e.isDone()));if(t.length>0){fs.debug("Ignoring activate() since there is an outstanding ActivateTask");const i=t[0];return void(void 0!==e&&i.addCallback(e))}const i=this.taskManager.findTasks((e=>e instanceof $n&&!e.isDone()));if(i.length>0){fs.debug("Extending activate() expiration time");const t=i[0];return void 0!==e&&t.addCallback(e),void t.resetExpiration()}const s=void 0===e?[]:[e],n=new $n(this.environment,s);this.taskManager.addTask(n)}setCustomerUserId(e,t){if(fs.debug(`setCustomerUserId(${e}, ${t})`),!Wr.validateCustomerUserDomain(e))return void Wr.consoleError("intellimize.setCustomerUserId() invalid user domain",111);if(!Wr.validateCustomerUserId(t))return void Wr.consoleError("intellimize.setCustomerUserId() invalid user id",112);const i=new zr(this.customer,this.user,e,t,this.attributeStorage);this.taskManager.addTask(i)}getActivities(){return fs.debug("getActivities()"),this.activityStorage.getAll()}push(e){fs.debug("push("+e[0]+")");const t=this.environment.getWindow();try{if(void 0===t.intellimize)return void fs.error("push() called, but window.intellimize undefined",30);const i=e.shift();if(void 0===t.intellimize[i])return void Wr.consoleError(`intellimize.${i}() is not a valid function`,106);t.intellimize[i].apply(void 0,e)}catch(i){const e=As(i);e.message="Error executing push() "+e.message,fs.error(e,3)}}ready(e){Wr.doCallback(e)}}class Gr{constructor(e){__publicField(this,"environment"),__publicField(this,"callQueue"),__publicField(this,"readyCallbackQueue"),this.environment=e,this.callQueue=[],this.readyCallbackQueue=[]}static isValidObjectDefinition(e){if(is(e)){const t=Object.keys(e);if(4===t.length){if(0===as(["p","r","push","ready"],t).length&&es(e.p)&&es(e.r)&&ss(e.push)&&ss(e.ready))return!0}}return!1}initialize(){const e=this.environment.getWindow();if(void 0!==e.intellimize)if(es(e.intellimize))this.setCallQueue(e.intellimize);else if(is(e.intellimize))if(Gr.isValidObjectDefinition(e.intellimize)){const t=e.intellimize;this.setCallQueue(t.p),this.setReadyCallbackQueue(t.r)}else Wr.consoleError("[Intellimize Api]: window.intellimize is an object that does not match the expected definition",116);else Wr.consoleError("[Intellimize Api]: window.intellimize is not an object or an array",117);e.intellimize={ready:this.ready.bind(this),push:this.push.bind(this)}}extractCallQueue(){const{callQueue:e}=this;return this.callQueue=[],e}extractReadyCallbackQueue(){const{readyCallbackQueue:e}=this;return this.readyCallbackQueue=[],e}ready(e){Wr.validateReadyCallback(e)&&(fs.debug("[Intellimize Api]: registering ready() callback"),this.readyCallbackQueue.push(e))}push(e){Wr.validatePushCommand(e)&&(fs.debug("[Intellimize Api]: adding command to call queue"),this.callQueue.push([...e]))}setCallQueue(e){fs.debug("[Intellimize Api]: storing window.intellimize callQueue"),this.callQueue=[],e.forEach((e=>{Wr.validatePushCommand(e)&&this.callQueue.push([...e])}))}setReadyCallbackQueue(e){fs.debug("[Intellimize Api]: storing window.intellimize readyCallbackQueue"),this.readyCallbackQueue=[],e.forEach((e=>{Wr.validateReadyCallback(e)&&this.readyCallbackQueue.push(e)}))}}class jr{constructor(e,t,i,s,n,r,a,o,l,c){__publicField(this,"customer"),__publicField(this,"user"),__publicField(this,"environment"),__publicField(this,"serverContext"),__publicField(this,"taskManager"),__publicField(this,"browserStorage"),__publicField(this,"customerStorage"),__publicField(this,"externalApi"),__publicField(this,"attributeData"),__publicField(this,"elementObserver"),__publicField(this,"storageKey"),this.customer=e,this.user=t,this.environment=i,this.serverContext=s,this.taskManager=n,this.browserStorage=r,this.customerStorage=a,this.externalApi=o,this.attributeData=l,this.elementObserver=c,this.storageKey=bi+e.getId()}initialize(){if(!this.externalApi.isInitialized)throw new Error("ExternalApi needs to be initialized before calling InternalApi.initialize()");const e=this.environment.getWindow(),{intellimize:t}=e;void 0!==t?(t.plugins={},t.setLocalState=(e,t)=>{fs.info(`intellimize.setLocalState(${e}, ${t})`),this.setLocalState(e,t)},t.getLocalState=e=>{const t=this.getLocalState(e);return fs.info(`intellimize.getLocalState(${e}) => ${t}`),t},t.deleteLocalState=e=>{fs.info(`intellimize.deleteLocalState(${e})`),this.deleteLocalState(e)},t.getSessionId=()=>(fs.info("intellimize.getSessionId()"),this.getSessionId()),t.getUserId=()=>(fs.info("intellimize.getUserId()"),this.getUserId()),t.getPageviewId=()=>(fs.info("intellimize.getPageviewId()"),this.getPageviewId()),t.logErr=e=>{fs.error(`Customer error: ${e}`,1)},t.log=(e,t,s)=>{const n=1e4;s&&(!/^\d{5}$/.test(`${s}`)||s<10001||s>10999)&&(fs.error(`Called intellimize.log with an invalid message code. (Wanted: 10001 < code < 10999. Found: ${s})`,998),s=n);const r=null!=s?s:n;switch(t){case i.LogLevel.TRACE:case i.LogLevel.DEBUG:return void fs.debug(e,r);case i.LogLevel.INFO:return void fs.info(e,r);case i.LogLevel.WARN:return void fs.warn(e,r);case i.LogLevel.ERROR:return void fs.error(e,r);default:fs.error(`Called intellimize.log with an invalid LogLevel (${t}). Treating as "debug".`,999),fs.debug(e,r)}},t.applyChange=e=>{const t=pr(yt(e),lr(e),0,this.attributeData);return t.isReadyToApply()?(t.apply((()=>{}),this.elementObserver),W.APPLIED):W.UNAPPLIED},t.undoChange=e=>(pr(yt(e),lr(e),0,this.attributeData).undo(),W.UNAPPLIED),t.hasChangeData=e=>Zn(e),t.getChangeTypeData=(e,t)=>rr(e,t),t.hasStarted=()=>{const e=this.taskManager.hasStarted();return fs.debug(`intellimize.hasStarted() => ${e}`),e},t.isDone=()=>{const e=this.taskManager.isDone();return fs.debug(`intellimize.isDone() => ${e}`),e},t.onDone=e=>{fs.debug("intellimize.onDone(callbackFunction)"),this.taskManager.onDone(e)},t.isRestarting=()=>{const e=this.taskManager.getClient().isRestarting();return fs.debug(`intellimize.isRestarting() => ${e}`),e},fs.getLevel()<=i.LogLevel.INFO&&(e[e.atob("aWNqc24=")]=this.customer.getData(),e[e.atob("aXBqc24=")]=()=>this.browserStorage.read(yi+this.customer.getId()).map((e=>Oi(zi(this.environment,e)))).orElse({})),this.reinitialize()):fs.error("window.intellimize is undefined: Cannot initialize InternalApi",219)}reinitialize(){this.exposeAttributeData()}setLocalState(e,t){const i=this.readState();i[e]=t,this.writeState(i)}getLocalState(e){return this.readState()[e]}deleteLocalState(e){const t=this.readState();delete t[e],this.writeState(t)}getSessionId(){return this.customerStorage.updateAndGetSessionId()}getUserId(){return this.user.getId()}getPageviewId(){return this.environment.getPageviewId()}readState(){let e={};return this.browserStorage.read(this.storageKey).ifPresent((t=>{try{e=Oi(t)}catch(i){const e=As(i);e.message="Could not parse internal api storage\n"+e.message,fs.error(e,33)}})),e}writeState(e){const t=Ni(e);this.browserStorage.write(this.storageKey,t)}exposeAttributeData(){const e=this.environment.getWindow(),t=this.attributeData.getLocationData();e.iiloc={country:t.country,region:t.state,city:t.city,dma:t.dma,postal:t.postal,tz:t.tz};const i=this.attributeData.getUserAgentData(),s=this.attributeData.getTrafficSourceData();e.icntxtlftrs={IP:this.serverContext.clientIp,D:i.deviceType,B:i.browser,OS:i.os,DC:i.deviceClass,DN:i.deviceName,DB:i.deviceBrand,OC:i.osClass,ON:i.osName,OV:i.osVersion,AC:i.agentClass,AN:i.agentName,AV:i.agentVersionMajor,TS:s};const n=this.attributeData.getUtmParamsData();e.iutmprms={uts:n.utmSource,utm:n.utmMedium,utcm:n.utmCampaign,utcn:n.utmContent,utt:n.utmTerm}}}const Br="UTC";let Hr,Kr=!0;function qr(e){var t;if(void 0!==Hr)return Hr;if(Kr){if("undefined"===(null==(t=e.Intl)?void 0:t.DateTimeFormat))return void Qr();const i=e.Intl.DateTimeFormat();return void 0===i||void 0===i.resolvedOptions?void Qr():(Hr=e.Intl,Hr)}}function Qr(){Kr=!1,fs.error("Intl.DateTimeFormat().resolvedOptions() is not supported by the browser",1014)}function Yr(e){const t=qr(e);let i="";return void 0!==t&&(i=t.DateTimeFormat().resolvedOptions().timeZone),void 0===i||""===i?Br:i}const Jr=class{static generateGaussian(e,t){if(Jr.hasSpare)return Jr.hasSpare=!1,Jr.spare*t+e;let i,s,n;do{i=2*Math.random()-1,s=2*Math.random()-1,n=i*i+s*s}while(n>=1||0===n);return n=Math.sqrt(-2*Math.log(n)/n),Jr.spare=s*n,Jr.hasSpare=!0,e+t*i*n}};let Zr=Jr;__publicField(Zr,"spare"),__publicField(Zr,"hasSpare",!1);class Xr{constructor(e,t,i){__publicField(this,"experienceId"),__publicField(this,"modelVersion"),__publicField(this,"featureVector",{}),this.experienceId=e,this.modelVersion=t,Object.keys(i).forEach((e=>{this.featureVector[e]=i[e]}))}static newRandomModel(e){return new Xr(e,"random-experience",{})}static newControlModel(e){return new Xr(e,"control-experience",{})}getExperienceId(){return this.experienceId}getModelVersion(){return this.modelVersion}getFeatureVector(){const e={};return Object.keys(this.featureVector).forEach((t=>{e[t]=this.featureVector[t]})),e}scoreVariations(e,t){const i=this.evaluateFeatures(e);for(const s in i)t.includes(s)||delete i[s];for(const s of t)void 0===i[s]&&(i[s]=Zr.generateGaussian(Pi,Di));return i}evaluateFeatures(e){const t={};return fs.group("score variations"),Object.keys(this.featureVector).forEach((i=>{const s=this.featureVector[i];let n;fs.group("evaluate cf: "+i);let r=!0;i.split(":").forEach((t=>{const i=t.split("=");if(2!==i.length)return void fs.error(`Could not parse unary feature ${t}`,42,{experienceId:this.experienceId});const s=i[0],a=i[1];if("EV"===s){const e=a.split("-");n=e[1]}else t in e||(r=!1)})),r&&void 0!==n?(fs.debug("match, add: "+this.featureVector[i]),n in t||(t[n]=0),t[n]+=s):fs.debug("no match"),fs.groupEnd()})),fs.groupEnd(),t}}class ea{constructor(e,t,i,s){__publicField(this,"id"),__publicField(this,"timestamp"),__publicField(this,"experienceModels"),__publicField(this,"missingModelBuilder"),this.id=K(e),this.timestamp=t,K(i),this.experienceModels=__spreadValues({},i),this.missingModelBuilder=K(s)}static buildEmptyPolicy(e){return new ea("empty-policy",e.getNowUnixTime(),{},Xr.newRandomModel)}static buildControlPolicy(e){return new ea("control-policy",e.getNowUnixTime(),{},Xr.newControlModel)}static fromJson(e){try{const t=Oi(e),i={};Object.keys(t.experienceModels).forEach((e=>{i[e]=new Xr(e,t.experienceModels[e].modelVersion,t.experienceModels[e].featureVector)}));const s=new ea(t.id,t.timestamp,i,Xr.newRandomModel);return ie.ofNullable(s)}catch(t){const e=As(t);e.message=`Could not build policy from localStorage\n${e.message}`,fs.error(e,43)}return ie.empty()}getId(){return this.id}getTimestamp(){return this.timestamp}getExperienceModel(e){return void 0===this.experienceModels[e]?(fs.info(`Policy could not find experience ${e}; Building missing experience model`),this.missingModelBuilder(e)):this.experienceModels[e]}toJson(){const e={};Object.keys(this.experienceModels).forEach((t=>{e[t]={modelVersion:this.experienceModels[t].getModelVersion(),featureVector:this.experienceModels[t].getFeatureVector()}}));return Ni({id:this.id,timestamp:this.timestamp,experienceModels:e})}}const ta=e=>"0"===e||"1"===e;function ia(e){return t=>new RegExp("^"+e+"$").test(t)}const sa=e=>"true"===e||"false"===e;class na{constructor(e,t=!1){if(__publicField(this,"experienceVariations",{}),__publicField(this,"_allPagesLive"),__publicField(this,"_allAudiencesLive"),__publicField(this,"_allEventsLive"),__publicField(this,"_passExperienceAudience"),__publicField(this,"_passVariationAudience"),__publicField(this,"_isControl"),__publicField(this,"_saveCustomerStorage"),__publicField(this,"_sendBrowserEvents"),__publicField(this,"_sendGoogleAnalytics"),__publicField(this,"_sendSegmentAnalytics"),__publicField(this,"_sendMixpanel"),__publicField(this,"_showStatusModule"),__publicField(this,"_showBasesite"),__publicField(this,"_expires"),__publicField(this,"attributeData",{location:{},utmParams:{},userAgent:{},dayPart:void 0,weekPart:void 0,trafficSource:void 0,custom:{},urlParam:{},userVisitStatus:void 0,userBucket:void 0}),__publicField(this,"_requestAnimationFrame"),t)return;const i=e.getWindow().iOverride;if(void 0!==i){if(void 0!==i.experienceVariations){const{experienceVariations:e}=i;Object.keys(e).forEach((t=>{var i;null==(i=e[t])||i.forEach((e=>{t in this.experienceVariations||(this.experienceVariations[t]={}),this.experienceVariations[t][e]=!0}))}))}this._allPagesLive=i.allPagesLive,this._allAudiencesLive=i.allAudiencesLive,this._allEventsLive=i.allEventsLive,this._passExperienceAudience=i.passExperienceAudience,this._passVariationAudience=i.passVariationAudience,this._isControl=i.isControl,this._saveCustomerStorage=i.saveCustomerStorage,this._sendBrowserEvents=i.sendBrowserEvents,this._sendGoogleAnalytics=i.sendGoogleAnalytics,this._sendSegmentAnalytics=i.sendSegmentAnalytics,this._sendMixpanel=i.sendMixpanel,this._showStatusModule=i.showStatusModule,this._expires=i.expires}e.readLocalStorage("intellimize_override").ifPresent((e=>{let t={};try{t=Oi(e)}catch(i){const e=As(i);e.message="Could not parse override\n"+e.message,fs.error(e,192)}void 0!==t.raf&&(this._requestAnimationFrame=t.raf)})),e.getUrlParameter("iev",ia("[0-9;:]+")).ifPresent((e=>{this.experienceVariations={},e.split(";").forEach((t=>{const i=t.split(":");if(2===i.length){const e=i[0],t=i[1];e in this.experienceVariations||(this.experienceVariations[e]={}),this.experienceVariations[e][t]=!0}else fs.error(`Override could not parse iev ${e}`,34)})),void 0!==i&&0!==Object.keys(i).length||(this._passExperienceAudience=!0,this._passVariationAudience=!0,this._saveCustomerStorage=!1,this._sendBrowserEvents=!1),this._isControl=!1,this._sendGoogleAnalytics=!1,this._sendSegmentAnalytics=!1,this._sendMixpanel=!1,this._showStatusModule=!0})),e.getUrlParameter("showBasesite",ia("1")).ifPresent((()=>{this._showBasesite=!0,this._showStatusModule=!0})),e.getUrlParameter("iea",ta).ifPresent((e=>{"1"===e&&(this._passExperienceAudience=void 0)})),e.getUrlParameter("iva",ta).ifPresent((e=>{"1"===e&&(this._passVariationAudience=void 0)})),e.getUrlParameter("is",ta).ifPresent((e=>{"1"===e?this._showStatusModule=!0:"0"===e&&(this._showStatusModule=!1)}));let s=!1;[["ictxt_city","city","([A-Z0-9]){1,40}"],["ictxt_region","state","([a-zA-Z0-9]){1,40}"],["ictxt_country","country","[A-Z]{2}"],["ictxt.city","city","([A-Z0-9]){1,40}"],["ictxt.region","state","([a-zA-Z0-9]){1,40}"],["ictxt.country","country","[A-Z]{2}"]].forEach((t=>{e.getUrlParameter(t[0],ia(t[2])).ifPresent((e=>{this.attributeData.location[t[1]]=e,s=!0}))}));[["ictxt_d","deviceType","[DPT]"]].forEach((t=>{e.getUrlParameter(t[0],ia(t[2])).ifPresent((e=>{this.attributeData.userAgent[t[1]]=e,s=!0}))})),e.getUrlParameter("ictxt_ts",ia("[A-Z]{2}")).ifPresent((e=>{this.attributeData.trafficSource=e,s=!0})),e.getUrlParameter("raf",sa).ifPresent((e=>{"true"===e?this._requestAnimationFrame=!0:"false"===e&&(this._requestAnimationFrame=!1)})),s&&(this._isControl=!1,this._saveCustomerStorage=!1,this._sendBrowserEvents=!1,this._sendGoogleAnalytics=!1,this._sendSegmentAnalytics=!1,this._sendMixpanel=!1)}getExpirationMs(){return ie.ofNullable(this._expires)}setExpiration(e){this._expires=e}getOverrideJson(){const e={allPagesLive:this._allPagesLive,allAudiencesLive:this._allAudiencesLive,allEventsLive:this._allEventsLive,isControl:this._isControl,passExperienceAudience:this._passExperienceAudience,passVariationAudience:this._passVariationAudience,saveCustomerStorage:this._saveCustomerStorage,sendBrowserEvents:this._sendBrowserEvents,sendGoogleAnalytics:this._sendGoogleAnalytics,sendMixpanel:this._sendMixpanel,showStatusModule:this._showStatusModule},t={};return Object.keys(this.experienceVariations).forEach((e=>{t[e]=Object.keys(this.experienceVariations[e])})),t&&Object.keys(t).length>0&&(e.experienceVariations=t),Object.keys(e).forEach((t=>{void 0===e[t]&&delete e[t]})),e}isPageLive(e){return ie.ofNullable(this._allPagesLive)}isAudienceLive(e){return ie.ofNullable(this._allAudiencesLive)}isEventLive(e){return ie.ofNullable(this._allEventsLive)}isExperienceEnabled(e){return this.hasExperienceVariationsSet()?ie.of(this.isExperienceSet(e)):ie.empty()}passExperienceCondition(){return ie.ofNullable(this._passExperienceAudience)}isExperienceIncluded(e){return this.hasExperienceVariationsSet()?ie.of(this.isExperienceSet(e)):ie.empty()}hasExperienceIds(){if(this.hasExperienceVariationsSet()){const e=Object.keys(this.experienceVariations);return fs.debug("hasExperienceIds => "+e+" (override)"),ie.of(e)}return ie.empty()}hasVariationIds(e){const t=e.getId();if(this.hasExperienceVariationsSet()&&t in this.experienceVariations){const e=Object.keys(this.experienceVariations[t]);return fs.debug("hasVariationIds => "+e+" (override)"),ie.of(e)}return ie.empty()}isVariationEnabled(e){return this.hasExperienceVariationsSet()?ie.of(this.isVariationSet(e)):ie.empty()}passVariationCondition(){return ie.ofNullable(this._passVariationAudience)}isControl(){return ie.ofNullable(this._isControl)}saveCustomerStorage(){const e=ie.ofNullable(this._saveCustomerStorage);return e.ifPresent((e=>{fs.debug(`save CustomerStorage => ${e} (override)`)})),e}sendBrowserEvents(){const e=ie.ofNullable(this._sendBrowserEvents);return e.ifPresent((e=>{fs.debug(`send BrowserEvent => ${e} (override)`)})),e}sendGoogleAnalytics(){const e=ie.ofNullable(this._sendGoogleAnalytics);return e.ifPresent((e=>{fs.debug(`send GoogleAnalytics => ${e} (override)`)})),e}sendSegmentAnalytics(){const e=ie.ofNullable(this._sendSegmentAnalytics);return e.ifPresent((e=>{fs.debug(`send SegmentAnalytics => ${e} (override)`)})),e}sendMixpanel(){const e=ie.ofNullable(this._sendMixpanel);return e.ifPresent((e=>{fs.debug(`send Mixpanel => ${e} (override)`)})),e}getAttributeDataOverrides(){return __spreadValues({},this.attributeData)}showStatusModule(){return ie.ofNullable(this._showStatusModule)}isExperienceSet(e){return!this._showBasesite&&e.getId()in this.experienceVariations}isVariationSet(e){var t;const i=e.getExperience().getId(),s=e.getId();return Boolean(null==(t=this.experienceVariations[i])?void 0:t[s])}showBasesite(){return ie.ofNullable(this._showBasesite)}requestAnimationFrame(){return ie.ofNullable(this._requestAnimationFrame)}hasExperienceVariationsSet(){return!0===this._showBasesite||Object.keys(this.experienceVariations).length>0}}class ra{constructor(e,t,i,s,n,r,a,o){__publicField(this,"environment"),__publicField(this,"customer"),__publicField(this,"conditionEvaluationRuntime"),__publicField(this,"attributeData"),__publicField(this,"override"),__publicField(this,"taskManager"),__publicField(this,"elementObserver"),__publicField(this,"hider"),__publicField(this,"pages",[]),__publicField(this,"audiences",[]),__publicField(this,"pageviewId"),__publicField(this,"pageChangelistTasks",{}),this.environment=e,this.customer=t,this.conditionEvaluationRuntime=i,this.attributeData=s,this.override=n,this.taskManager=r,this.hider=a,this.elementObserver=o}reinitialize(){const e=this.environment.getPageviewId();this.pageviewId===e&&fs.error("PageContext.reinitialize() called more than once per pageview",244),this.pages=this.determineMatchingPages(),this.hider.hidePages(this.pages),this.hider.revealDocumentIfAllRegionsHidden(),this.pageChangelistTasks=this.schedulePageChangeListTasks(),this.audiences=this.determineMatchingAudiences(),this.pageviewId=e}getPages(){return this.pageviewId!==this.environment.getPageviewId()&&fs.error("PageContext.getPages() called before initialization",151),this.pages}getPageChangelistTask(e){return this.pageviewId!==this.environment.getPageviewId()&&fs.error("PageContext.getPageChangeListTask() called before initialization",243,{pageId:e.getId()}),ie.ofNullable(this.pageChangelistTasks[e.getId()])}getAudiences(){return this.pageviewId!==this.environment.getPageviewId()&&fs.error("PageContext.getAudiences() called before initialization",152),this.audiences}determineMatchingPages(){const e=this.customer.getPages().filter((e=>this.override.isPageLive(e).orElse("live"===e.getState()))),t=this.environment.getHostingPageUrl().getUrl().map((t=>e.filter((e=>e.matches(t,xs.evalBoolean))))).orElse([]),i=Ht.filterPages(t);return i.length>0?i:t}schedulePageChangeListTasks(){const e={};return this.pages.forEach((t=>{const i=t.getChanges().map(((e,i)=>pr(e,or(t),i,this.attributeData)));if(i.length>0){const s=new vr(i,(()=>{this.hider.revealPage(t)}),{pageId:t.getId()},this.elementObserver);e[t.getId()]=s,this.taskManager.addTask(s)}else this.hider.revealPage(t)})),e}determineMatchingAudiences(){return this.customer.getAudiences().filter((e=>this.override.isAudienceLive(e).orElse("live"===e.getState()))).filter((e=>{let t=!1;try{t=e.getCondition().evaluate(this.conditionEvaluationRuntime)}catch(i){const s=As(i);t=!1,s.message="Audience condition evaluation failed "+s.message,fs.error(s,205,{audienceId:e.getId()})}return fs.debug(`check audience: ${e.getName()} (${e.getId()}) => ${t}`),t}))}}class aa{update(){}}class oa{constructor(e,t,i,s){__publicField(this,"environment"),__publicField(this,"localStorage"),__publicField(this,"customer"),__publicField(this,"override"),__publicField(this,"overrideModule"),__publicField(this,"eventLogStorageKey"),__publicField(this,"expVarModel",{campaigns:{}}),__publicField(this,"eventModel",{count:0,campaigns:{}}),this.customer=t,this.environment=e,this.localStorage=s,this.override=i,this.eventLogStorageKey=`${t.getId()}_intellimize_event_log`,this.overrideModule=new aa(this.environment,i,this.customer,this.reinitializeGoalEvents.bind(this)),this.initializeGoalEvents()}reinitializeExperienceVariations(){this.expVarModel={campaigns:{}},this.overrideModule.update({experienceVariations:this.expVarModel})}reinitializeGoalEvents(){this.eventModel={count:0,campaigns:{}},this.writeEventModelToLocalStorage(),this.initializeGoalEvents(),this.overrideModule.update({goalEvents:this.eventModel})}initializeGoalEvents(){this.eventModel=this.readEventModelFromLocalStorage();const e=this.environment.getHostingPageUrl().getUrl().get();this.customer.getEvents().forEach((t=>{let i="custom"===t.getType();(t instanceof Me||t instanceof Le)&&(i=t.getPages().some((t=>t.matches(e,(()=>!0))))),i&&t.getMetrics().forEach((e=>{e.getCampaign().ifPresent((t=>{this.getCampaignEventData(t).metrics[e.getId()]=this.getMetricEventData(e)}))}))})),this.overrideModule.update({goalEvents:this.eventModel})}setCustomer(e,t){this.expVarModel[e]=t,this.overrideModule.update({experienceVariations:this.expVarModel})}setCampaign(e,t,i){this.getCampaignData(e)[t]=i,this.overrideModule.update({experienceVariations:this.expVarModel})}setExperience(e,t,i){this.getExperienceData(e)[t]=i,this.overrideModule.update({experienceVariations:this.expVarModel})}setVariation(e,t,i){this.getVariationData(e)[t]=i,this.overrideModule.update({experienceVariations:this.expVarModel})}setExperienceSortedVariations(e,t){this.getExperienceData(e).variationsSorted=t,this.overrideModule.update({experienceVariations:this.expVarModel})}setMetricEventData(e,t,i,s){if(!e.getCampaign().isPresent())return;this.eventModel=this.readEventModelFromLocalStorage();const n=this.getCampaignEventData(e.getCampaign().get()),r=this.getMetricEventData(e);void 0===r.events[i]?(r.events[i]={name:t.getName(),type:t.getType(),status:s,instanceId:i},this.eventModel.count+=1,n.count+=1,r.count+=1):(r.events[i].status=s,r.events[i].timestamp=s===En.SUCCEEDED?(new Date).toISOString():void 0,r.count=Object.keys(r.events).length),this.overrideModule.update({goalEvents:this.eventModel}),this.writeEventModelToLocalStorage()}getCampaignData(e){return void 0===this.expVarModel.campaigns[e.getId()]&&(this.expVarModel.campaigns[e.getId()]={campaign:e,experiences:{}}),this.expVarModel.campaigns[e.getId()]}getExperienceData(e){const t=this.getCampaignData(e.getCampaign());return void 0===t.experiences&&(t.experiences={}),void 0===t.experiences[e.getId()]&&(t.experiences[e.getId()]={experience:e,variations:{},variationsSorted:[]}),t.experiences[e.getId()]}getVariationData(e){const t=this.getExperienceData(e.getExperience());return void 0===t.variations&&(t.variations={}),void 0===t.variations[e.getId()]&&(t.variations[e.getId()]={variation:e}),t.variations[e.getId()]}getMetricEventData(e){if(!e.getCampaign().isPresent())throw new Z("Metric not in campaign");const t=this.getCampaignEventData(e.getCampaign().get());return void 0===t.metrics[e.getId()]&&(t.metrics[e.getId()]=this.getInitialMetricEventData(e)),t.metrics[e.getId()]}getCampaignEventData(e){return void 0===this.eventModel.campaigns[e.getId()]&&(this.eventModel.campaigns[e.getId()]={name:e.getName(),count:0,metrics:{}}),this.eventModel.campaigns[e.getId()]}getMetricMeasurement(e){const t=e.getCountingMethod(),i=e.getScope();let s,n;return e instanceof Xt?(n=`$${(e.getValue()/100).toFixed(2)}`,s=`${t} static value per ${i}`):s=e instanceof Zt?`${t} dynamic value per ${i}`:`${t} conversion per ${i}`,{measurement:s,value:n}}getInitialMetricEventData(e){return __spreadValues({name:e.getName(),isGoal:e.isGoal(),events:{},count:0},this.getMetricMeasurement(e))}shouldUseLocalStorage(){let e=!1;return this.override.getExpirationMs().ifPresent((t=>{e=t>Date.now()})),e}deleteEventModelFromLocalStorage(){this.localStorage.delete(this.eventLogStorageKey)}writeEventModelToLocalStorage(){this.shouldUseLocalStorage()&&this.localStorage.write(this.eventLogStorageKey,Ni(this.eventModel))}readEventModelFromLocalStorage(){let e=this.eventModel;return this.shouldUseLocalStorage()?this.localStorage.read(this.eventLogStorageKey).ifPresent((t=>{try{e=Oi(t)}catch(i){}})):this.deleteEventModelFromLocalStorage(),e}}class la{reinitializeExperienceVariations(){}reinitializeGoalEvents(){}setCustomer(e,t){}setCampaign(e,t,i){}setExperience(e,t,i){}setVariation(e,t,i){}setExperienceSortedVariations(e,t){}setMetricEventData(e,t,i,s){}}class ca{constructor(e,t,i,s){__publicField(this,"storageKey"),__publicField(this,"environment"),__publicField(this,"browserStorage"),__publicField(this,"user"),__publicField(this,"pageviewAttributes",{id:void 0,custom:{},internal:{}}),this.storageKey=fi+e.getId(),this.browserStorage=i,this.environment=t,this.user=s}setCustomAttributes(e,t){const i=this.getAttributeData(e);Object.keys(t).forEach((e=>{i.custom[e]=t[e]})),this.saveAttributeData(e,i)}setInternalAttributes(e,t){const i=this.getAttributeData(e);Object.keys(t).forEach((e=>{i.internal[e]=t[e]})),this.saveAttributeData(e,i)}getCustomAttributes(e,t){const i=this.getAttributeData(e),s={};return Object.keys(i.custom).forEach((e=>{(void 0===t||t.includes(e))&&(s[e]=i.custom[e])})),s}getInternalAttributes(e,t){const i=this.getAttributeData(e),s={};return Object.keys(i.internal).forEach((e=>{(void 0===t||t.includes(e))&&(s[e]="object"==typeof i.internal[e]?Oi(Ni(i.internal[e])):i.internal[e])})),s}getFlattenedCustomAttributes(){const e=this.getCustomAttributes("user"),t=this.getCustomAttributes("pageview");return Object.keys(t).forEach((i=>{e[i]=t[i]})),e}getFlattenedInternalAttributes(){const e=this.getInternalAttributes("user"),t=this.getInternalAttributes("pageview");return Object.keys(t).forEach((i=>{e[i]=t[i]})),e}deleteCustomAttributes(e,t){const i=this.getAttributeData(e);for(const s in i.custom)Object.prototype.hasOwnProperty.call(i.custom,s)&&(void 0===t||t.includes(s))&&delete i.custom[s];this.saveAttributeData(e,i)}deleteInternalAttributes(e,t){const i=this.getAttributeData(e);void 0===t?i.internal={}:t.forEach((e=>{delete i.internal[e]})),this.saveAttributeData(e,i)}getAttributeData(e){let t,i={id:void 0,custom:{},internal:{}};return"pageview"===e?(i=this.pageviewAttributes,t=this.environment.getPageviewId()):"user"===e?(i=this.readBrowserStorage(),t=this.user.getId()):fs.error(`Tried to get attribute data for invalid scope ${e}`,49),t!==i.id&&(fs.debug(`Mismatching IDs ("${t}" != "${i.id}"). Resetting AttributeData`),i.id=t,i.internal={},i.custom={}),i}saveAttributeData(e,t){"pageview"===e||("user"===e?this.saveBrowserStorage(t):fs.error(`Tried to save attribute data for invalid scope ${e}`,50))}readBrowserStorage(){let e={id:void 0,custom:{},internal:{}};return this.browserStorage.read(this.storageKey).ifPresent((t=>{try{e=Oi(t)}catch(i){const e=As(i);e.message=`Could not parse attribute storage\n${e.message}`,fs.error(e,51)}})),e}saveBrowserStorage(e){const t=Ni(e);this.browserStorage.write(this.storageKey,t)}}const da=["xo"],ua={debug(e,t,i){fs.debug(e,t,i,da)}};class ga extends Sn{constructor(e,t,i){super(),__publicField(this,"localStorage"),__publicField(this,"storageKey"),__publicField(this,"storageDatum"),this.localStorage=e,this.storageKey=t,this.storageDatum=i}toString(){return`StorageCleanupTask(${this.storageKey})`}inTransaction(){return!1}isUnloading(){return!1}getStorageKey(){return this.storageKey}setStorageDatum(e){this.storageDatum=void 0===e?void 0:__spreadValues({},e)}getNotDoneDependencies(){return this.manager.findTasks((e=>!(e instanceof ga||e.isUnloading()||e.isDone())))}run(){return ua.debug(`Running storage cleanup task for "${this.storageKey}".`),this.getNotDoneDependencies().length>0?(ua.debug("Deferring storage cleanup; other tasks still running"),En.TRY_LATER):(void 0===this.storageDatum?(ua.debug("Deleting data locally because the common origin is empty for this storageKey"),this.localStorage.delete(this.storageKey)):(ua.debug(`Writing latest data from the common origin to the customer origin. ${Mi(this.storageDatum,void 0,2)}`),this.localStorage.write(this.storageKey,Ni(this.storageDatum))),En.SUCCEEDED)}}class ha{constructor(e,t){__publicField(this,"localStorage"),__publicField(this,"taskManager"),this.localStorage=e,this.taskManager=t}run(){return __async(this,null,(function*(){return new Promise((e=>{this.taskManager.isDone()?(ua.debug("[CleanupTaskManager]: no tasks to run"),e()):(ua.debug("[CleanupTaskManager]: waiting for all tasks to complete"),this.taskManager.onDone((()=>{e()})))}))}))}queueCleanupTask(e,t){this.findNotDoneCleanupTask(e).ifPresent((i=>{ua.debug(`Cleanup task already exists for ${e}; updating storageDatum`),i.setStorageDatum(t)})).ifAbsent((()=>{ua.debug(`Creating cleanup task for ${e} with ${Mi(t,void 0,2)}`),this.taskManager.addTask(new ga(this.localStorage,e,t))}))}findNotDoneCleanupTask(e){const[t]=this.taskManager.findTasks((t=>t instanceof ga&&t.getStorageKey()===e&&!t.isDone()));return ie.ofNullable(t)}}class ma{constructor(e,t,i){__publicField(this,"localStorage"),__publicField(this,"requestId"),__publicField(this,"storageOrigin"),__publicField(this,"message"),__publicField(this,"iframe"),__publicField(this,"resolver"),__publicField(this,"isDone",!1),__publicField(this,"timeStart"),this.localStorage=e,this.requestId=Vs(),this.storageOrigin=t,void 0!==i&&this.setMessage(i)}static get MESSAGE_EVENT_TIMEOUT_MS(){return 1e3}getRequestId(){return this.requestId}getStorageKey(){var e;return null==(e=this.message)?void 0:e.storageKey}setMessage(e){let t;this.getExpectedVersion(e.storageKey).ifPresent((e=>{t=e})),this.message=__spreadProps(__spreadValues({},e),{requestId:this.requestId,expectedVersion:t})}setIframe(e){this.iframe=e}send(){return __async(this,null,(function*(){if(void 0===this.iframe)throw new Error("Cannot call send() without setting the iframe");if(void 0===this.message)throw new Error("Cannot call send() without setting the message");const{iframe:e,message:t}=this;yield new Promise(((i,s)=>{var n;try{const r={resolve:i,reject:s};this.resolver=r,null===e.contentWindow?r.resolve():(ua.debug(`send(): Sending message to storage domain (${this.storageOrigin}) ${Mi(t,void 0,2)}`),this.timeStart=new Date,null==(n=e.contentWindow)||n.postMessage(t,this.storageOrigin),setTimeout((()=>{try{this.isDone||s(new Error(`Did not receive response within ${ma.MESSAGE_EVENT_TIMEOUT_MS}ms`))}catch(e){const t=As(e);fs.error(t,174)}}),ma.MESSAGE_EVENT_TIMEOUT_MS))}catch(r){s(r)}}))}))}reply(e){if(void 0===this.resolver)throw new Error("Cannot reply to message request if the message has no resolver");if(void 0!==this.timeStart){const e=(new Date).getTime()-this.timeStart.getTime();this.timeStart=void 0,ua.debug(`XO message round-trip time - ${e}ms`)}e.success?this.resolver.resolve():void 0===e.error?this.resolver.reject(new Error("Message request failed, but there is no error data (unexpected)")):this.resolver.reject(e),this.isDone=!0}getExpectedVersion(e){return this.localStorage.read(e).flatMap((e=>ba.validateStorageDatumString(e))).flatMap((e=>ie.ofNullable(e.version)))}}var pa=(e=>(e.UNEXPECTED="UNEXPECTED",e.LOCALSTORAGE_ACCESS="LOCALSTORAGE_ACCESS",e.INVALID_OP="INVALID_OP",e.INVALID_MESSAGE_FORMAT="INVALID_MESSAGE_FORMAT",e.INVALID_MESSAGE_META_FORMAT="INVALID_MESSAGE_META_FORMAT",e.INVALID_DATUM_FORMAT="INVALID_DATUM_FORMAT",e.UNEXPECTED_VERSION="UNEXPECTED_VERSION",e))(pa||{});function va(e){return e}class ba{constructor(e,t,i,s){__publicField(this,"taskManager"),__publicField(this,"localStorage"),__publicField(this,"environment"),__publicField(this,"customer"),__publicField(this,"messageRequests"),__publicField(this,"storageKeys"),__publicField(this,"storageOrigin"),__publicField(this,"cleanupTaskManager"),__publicField(this,"isFeatureMissing"),__publicField(this,"iframeLoadPromise"),__publicField(this,"iframe"),this.localStorage=e,this.taskManager=i,this.environment=t,this.messageRequests={},this.customer=s,this.isFeatureMissing=!1;const n="intellimizeio.com";this.storageOrigin=`https://${s.getId()}.${n}`,this.storageKeys=Rn.getStorageKeys(s),this.cleanupTaskManager=new ha(this.localStorage,this.taskManager),this.loadIframe().catch((()=>{this.isFeatureMissing=!0}))}static validateStorageDatumString(e){let t;try{if(t=Oi(e),"object"==typeof t&&null!==t&&("string"==typeof t.version||void 0===t.version)&&"string"==typeof t.data)return ie.of(t)}catch(i){ua.debug(`validateStorageDatumString(): Not a StorageDatum (got ${Mi(t)})`)}return ie.empty()}static getNormalizedStorageValue(e){return ba.validateStorageDatumString(e).map((e=>e.data)).orElse(e)}static get READY_MESSAGE_TIMEOUT_MS(){return 3e3}static get WAIT_FOR_DATA_MS(){return 500}static isMessageReply(e){return"object"==typeof e&&null!==e&&"reply"===e.type}get isCrossOriginEnabled(){return!this.isFeatureMissing&&(this.customer.getCrossOrigin().isEnabled()||this.customer.getOrigins().length>0)}get shouldWaitForData(){if(this.environment.getReferrerUrl().getUrl().isPresent()&&this.environment.getHostingPageUrl().getUrl().isPresent()&&this.environment.getReferrerUrl().getOrigin().isPresent()){const e=this.environment.getReferrerUrl().getUrl().get(),t=this.environment.getHostingPageUrl().getUrl().get(),i=this.environment.getReferrerUrl().getOrigin().get();if(us(this.customer,i)){if(!Is(e,t))return ua.debug("shouldWaitForData(): Detected a switch to a different origin."),!0;let i=!1;for(const e of this.storageKeys)if(this.localStorage.read(e).isPresent()){i=!0;break}if(!i)return fs.warn("shouldWaitForData(): Detected an origin with no data.",63),!0;ua.debug("shouldWaitForData(): not waiting (user didn't cross origins, and there is existing data in LocalStorage)")}else ua.debug(`shouldWaitForData(): not waiting (referrer origin not allowed - ${i})`)}else this.environment.getReferrerUrl().getUrl().isPresent()?this.environment.getReferrerUrl().getOrigin().isPresent()?this.environment.getHostingPageUrl().getUrl().isPresent()||fs.warn("shouldWaitForData(): not waiting (no hosting page URL - can't determine if user has crossed origins)",64):ua.debug("shouldWaitForData(): not waiting (no referrer origin - can't determine if referrer origin is allowed)"):ua.debug("shouldWaitForData(): not waiting (no referrer - can't determine if user has crossed origins");return!1}initialize(){return __async(this,null,(function*(){if(this.isCrossOriginEnabled){ua.debug("Cross-Origin storage enabled by customer configuration. Persisting LocalStorage operations to the common origin.");const e=this.syncWithCommonOrigin().catch((e=>{const t=As(e);t.message=`Error syncing with common origin\n${t.message}`,fs.error(t,130),this.isFeatureMissing=!0}));this.shouldWaitForData?(ua.debug("initialize(): Blocking client execution until xd storage is ready (shouldWaitForData is true)"),yield this.waitForData(e)):ua.debug("initialize(): Not waiting until xd storage is ready (shouldWaitForData is false)")}else ua.debug("Cross-Origin storage disabled by customer configuration. Using LocalStorage only.");ua.debug("crossOriginStorage.initialize() has finished")}))}read(e){const t=this.readFromLocalStorage(e);return this.readAsync(e).catch((()=>{this.isFeatureMissing=!0})),t.flatMap((e=>ie.ofNullable(e.data)))}write(e,t){this.writeAsync(e,t).catch((()=>{this.isFeatureMissing=!0}))}delete(e){this.deleteAsync(e).catch((()=>{this.isFeatureMissing=!0}))}loadIframe(){return __async(this,null,(function*(){if(void 0===this.iframeLoadPromise){const{document:e}=this.environment.getWindow();let t;this.iframe=e.createElement("iframe"),this.iframeLoadPromise=new Promise(((s,n)=>{let r=!1,a=!1;this.iframe.setAttribute("hidden",""),this.iframe.setAttribute("tabIndex","-1"),this.iframe.setAttribute("width","0"),this.iframe.setAttribute("height","0"),this.iframe.setAttribute("style","display:none");let o=`${this.storageOrigin}/storage.html`;fs.getLevel()<i.LogLevel.OFF&&(o+=`?ideb=${fs.getLevel()}`),this.iframe.setAttribute("src",o),this.iframe.setAttribute("referrerpolicy","strict-origin-when-cross-origin"),this.iframe.onerror=e=>{ua.debug("XO iframe onerror callback triggered"),r||a||setTimeout((()=>{try{a=!0;const t=As(e);fs.error(t,66),n()}catch(t){const e=As(t);fs.error(e,170)}}),0)};const l=()=>{ua.debug("XO iframe ready resolver triggered"),a||setTimeout((()=>{var e;try{if(ua.debug("loadIframe(): iframe is ready"),r=!0,void 0===(null==(e=this.iframe.contentWindow)?void 0:e.postMessage))fs.error("postMessage() API not supported",65),n(),this.iframe.remove();else{if(void 0!==t){const e=(new Date).getTime()-t.getTime();ua.debug(`iframe load + ready message time - ${e}ms`)}s(void 0)}}catch(i){const e=As(i);fs.error(e,171)}}),0)};this.environment.addListener("message",(e=>{try{this.handleResponse(e,l)}catch(t){const e=As(t);e.message=`Exception in XO message response handler\n${e.message}`,fs.error(e,237)}})),t=new Date,e.querySelectorAll("head")[0].insertAdjacentElement("afterbegin",this.iframe),setTimeout((()=>{try{r||(a=!0,fs.error(`iframe did not load & receive "ready" message within ${ba.READY_MESSAGE_TIMEOUT_MS} ms`,67),n())}catch(e){const t=As(e);fs.error(t,172)}}),ba.READY_MESSAGE_TIMEOUT_MS)}))}return this.iframeLoadPromise}))}readFromLocalStorage(e){return this.localStorage.read(e).flatMap((e=>{try{return ie.of(Oi(e))}catch(t){return fs.error(`readFromLocalStorage(): Unable to parse as JSON (${e})`,68),ie.empty()}}))}writeToLocalStorage(e,t){this.localStorage.write(e,Ni(t)),ua.debug(`writeToLocalStorage(): Wrote "${e}" to LocalStorage (${Mi(t,void 0,2)})`)}deleteFromLocalStorage(e){this.localStorage.delete(e),ua.debug(`deleteFromLocalStorage(): Deleted "${e}" from LocalStorage`)}readAsync(e){return __async(this,null,(function*(){if(ua.debug(`readAsync(): Called with storageKey: "${e}"`),this.isCrossOriginEnabled){const t=new ma(this.localStorage,this.storageOrigin,{requestId:"",op:"read",storageKey:e});yield this.sendMessageRequest(t)}}))}writeAsync(e,t){return __async(this,null,(function*(){let i;if(ua.debug(`writeAsync(): Called with storageKey: "${e}", data ${t}`),this.isCrossOriginEnabled){const s=new ma(this.localStorage,this.storageOrigin);i={version:s.getRequestId(),data:t},s.setMessage({requestId:"",op:"write",storageKey:e,storageDatum:i}),this.writeToLocalStorage(e,i),yield this.sendMessageRequest(s)}else this.writeToLocalStorage(e,{data:t})}))}deleteAsync(e){return __async(this,null,(function*(){if(ua.debug(`delete(): Called with storageKey: "${e}"`),this.isCrossOriginEnabled){const t=new ma(this.localStorage,this.storageOrigin,{requestId:"",op:"delete",storageKey:e});this.deleteFromLocalStorage(e),yield this.sendMessageRequest(t)}else this.deleteFromLocalStorage(e)}))}syncWithCommonOrigin(){return __async(this,null,(function*(){const e=[];this.storageKeys.forEach((t=>{this.readFromLocalStorage(t).ifPresent((({data:i,version:s})=>{s?(ua.debug(`syncWithCommonOrigin(): Existing storageDatum found with a version (storageKey: ${t}). Sending "read" message to the common origin.`),e.push(this.readAsync(t))):(ua.debug(`syncWithCommonOrigin(): Existing storageDatum found without a version (storageKey: ${t}). Sending "write" message to the common origin.`),e.push(this.writeAsync(t,i)))})).ifAbsent((()=>{ua.debug(`syncWithCommonOrigin(): No existing storageDatum found (storageKey: ${t}). Sending "read" message to the common origin.`),e.push(this.readAsync(t))}))})),yield Promise.all(e)}))}sendMessageRequest(e){return __async(this,null,(function*(){try{yield this.loadIframe()}catch(i){return void(this.isFeatureMissing=!0)}const t=e.getRequestId();e.setIframe(this.iframe),this.messageRequests[t]=e;try{yield e.send(),delete this.messageRequests[t]}catch(s){if(delete this.messageRequests[t],ba.isMessageReply(s))this.handleMessageReplyErrors(e,s);else{const e=As(s);e.message=`Could not send message request\n${e.message}`,fs.error(e,129),this.isFeatureMissing=!0}}}))}handleResponse(e,t){const{data:i,origin:s}=e;if(s!==this.storageOrigin)return;if(ua.debug(`handleResponse(): Received message event from storage domain (${this.storageOrigin})`),ua.debug(i),"object"!=typeof i||null===i)return void fs.error("handleResponse(): Refusing to handle message with invalid response format",69);if("ready"===i.type)return ua.debug('handleResponse(): Received "ready" message'),void t();if("sync"===i.type)return void this.handleSyncResponse(va(i));if("reply"!==i.type)return void fs.error(`handleResponse(): Refusing to handle message with unknown type (${i.type})`,70);const{correlationId:n}=i,r=this.messageRequests[n];void 0!==r?r.reply(i):fs.error("handleResponse(): Could not find matching message in memory",71)}handleSyncResponse({storageKey:e,storageDatum:t}){this.cleanupTaskManager.queueCleanupTask(e,t)}handleMessageReplyErrors(e,t){const{code:i,msg:s}=t.error;if(ua.debug(s),i===pa.UNEXPECTED_VERSION)this.handleUnexpectedVersion(e,t);else{if(i!==pa.LOCALSTORAGE_ACCESS)throw new Error(s);ua.debug("LocalStorage is not accessible on the common origin (i.e. browser security setting)")}}handleUnexpectedVersion(e,t){const i=e.getStorageKey(),{storageDatum:s}=t;if(void 0===s){const e=`handleUnexpectedVersion(): Common origin has no data for storageKey: "${i}"`;ua.debug(e)}else{const e=`handleUnexpectedVersion(): Common origin for storageKey: "${i}"`;ua.debug(`${e} ${Mi(s,void 0,2)}`)}this.cleanupTaskManager.queueCleanupTask(i,s)}waitForData(e){return __async(this,null,(function*(){return new Promise(((t,i)=>__async(this,null,(function*(){let s=!1;const n=this.environment.getWindow().setTimeout((()=>__async(this,null,(function*(){s=!0;try{t()}catch(e){const t=As(e);fs.error(t,173)}}))),ba.WAIT_FOR_DATA_MS),r=Date.now();try{const i=yield e,a=Date.now();ua.debug(`waitForData(): iframe load + data sync time - ${a-r}ms`);const o=yield this.cleanupTaskManager.run(),l=Date.now();ua.debug(`waitForData(): Cleanup task time - ${l-a}ms`),s?fs.warn(`waitForData(): Synchronization did not complete within ${ba.WAIT_FOR_DATA_MS}ms. (Took ${l-r}ms)`,72):(ua.debug(`waitForData(): Sync completed; finished in under ${ba.WAIT_FOR_DATA_MS}ms (Took ${l-r}ms)`),this.environment.getWindow().clearTimeout(n),t([i,o]))}catch(a){s||(this.environment.getWindow().clearTimeout(n),i(a))}}))))}))}}class fa{constructor(e,t,i,s){__publicField(this,"storageKey"),__publicField(this,"browserStorage"),__publicField(this,"environment"),__publicField(this,"override"),this.storageKey=_i+e.getId(),this.browserStorage=i,this.environment=t,this.override=s}static get VERSION(){return 2}static getPath(e,t){if(0===t.length)return e;const i=t[0];return i in e||(e[i]={}),t.splice(0,1),fa.getPath(e[i],t)}getCustomerControlStatus(e){if(!e.isCampaignControl()){const e=this.readState();if(!0===e.c)return ie.of("c");if(!1===e.c)return ie.of("i");this.override.saveCustomerStorage().orElse(!0)&&fs.warn("Attempting to retrieve control value, but not set",52)}return ie.empty()}updateAndGetControl(e){fs.debug("updateAndGetControl(campaign)");const t=e.getCustomer();return t.isCampaignControl()?this.setAndGetCampaignControl(e):this.setAndGetCustomerControl(t)}setAndGetCustomerControl(e){Q(!e.isCampaignControl());const t=this.readState(),i=t,s=e.getControlTrafficPercentage().get();return void 0!==t.cpg&&Object.keys(t.cpg).forEach((e=>{void 0!==t.cpg&&(delete t.cpg[e].c,delete t.cpg[e].ct)})),this.setAndGetControl(e,i,t,s)}updateAndGetExperienceInclusion(e){const t=this.environment.getInitializeUnixTime(),i=this.readState(),s=e.getId(),n=e.getCampaign().getId(),r=fa.getPath(i,["cpg",n,"exp",s]);if(e.getInclusionStickyConfig().isSticky()&&void 0!==r.i&&void 0!==r.it){const i=r.it;if(!e.getInclusionStickyConfig().isExpired(t,i)){const t=r.i;return fs.info(`Experience ${e.getId()} sticky inclusion decision => ${t}`),t}}const a=Math.random()<1-e.getIgnore()/1e4;return r.i=a,r.it=t,this.writeState(i),fs.info(`Experience ${e.getId()} new inclusion decision => ${a}`),a}getStickyVariation(e){fs.group("getStickyVariation(experience:"+e.getId()+")");const t=this.environment.getInitializeUnixTime(),i=this.readState(),s=e.getId(),n=e.getCampaign().getId(),r=fa.getPath(i,["cpg",n,"exp",s]);if(e.getVariationStickyConfig().isSticky()&&void 0!==r.v&&void 0!==r.vt){const i=r.vt;if(!e.getVariationStickyConfig().isExpired(t,i))return fs.debug("found sticky, non-expired variation: "+r.v),fs.groupEnd(),e.getVariation(r.v)}return fs.groupEnd(),ie.empty()}getVariation(e){fs.group("getVariation(experience:"+e.getId()+")");const t=this.readState(),i=e.getId(),s=e.getCampaign().getId(),n=fa.getPath(t,["cpg",s,"exp",i]);return void 0!==n.v?(fs.groupEnd(),e.getVariation(n.v)):(fs.groupEnd(),ie.empty())}saveVariationStickySelection(e,t){const i=e.getExperience().getId(),s=e.getExperience().getCampaign().getId(),n=this.readState(),r=fa.getPath(n,["s"]),a=fa.getPath(n,["cpg",s,"exp",i]);e.getId()!==a.v&&fs.error(`Updating variation page view id in local storage, but variation changed from ${a.v} to ${e.getId()}`,53,{campaignId:s,experienceId:i,variationId:e.getId()}),a.v=e.getId(),a.gpvid=t,a.gsid=r.id,this.writeState(n)}saveVariationPredictionSelection(e,t,i){const s=e.getExperience().getId(),n=e.getExperience().getCampaign().getId(),r=this.readState(),a=fa.getPath(r,["s"]),o=fa.getPath(r,["cpg",n,"exp",s]);o.v=e.getId(),o.vt=this.environment.getNowUnixTime(),o.mv=t,o.gpvid=i,o.gsid=a.id,this.writeState(r)}deleteExperiencePredictionSelection(e){const t=e.getId(),i=e.getCampaign().getId(),s=this.readState(),n=fa.getPath(s,["cpg",i,"exp",t]);0!==Object.keys(n).length&&(delete n.v,delete n.vt,delete n.mv,delete n.gpvid,delete n.gsid,this.writeState(s))}updateAndGetIsCampaignFirstTimeView(e,t){return this.updateAndGetIsFirstTime([e.getId(),"v"],t)}updateAndGetIsCampaignFirstTimeGoal(e,t,i){return this.updateAndGetIsFirstTime([e.getId(),t.getId(),"g"],i)}updateAndGetIsVariationFirstTimeView(e,t){return this.updateAndGetIsFirstTime([e.getExperience().getCampaign().getId(),e.getExperience().getId(),e.getId(),"v"],t)}updateAndGetIsVariationFirstTimeGoal(e,t,i){return this.updateAndGetIsFirstTime([e.getExperience().getCampaign().getId(),t.getId(),e.getExperience().getId(),e.getId(),"g"],i)}getVariationPredictionModelVersion(e){const t=this.readState(),i=fa.getPath(t,["cpg",e.getExperience().getCampaign().getId(),"exp",e.getExperience().getId()]);return ie.ofNullable(i.mv)}getVariationPredictionPageviewId(e){const t=this.readState(),i=fa.getPath(t,["cpg",e.getExperience().getCampaign().getId(),"exp",e.getExperience().getId()]);return ie.ofNullable(i.gpvid)}getVariationPredictionSessionId(e){const t=this.readState(),i=fa.getPath(t,["cpg",e.getExperience().getCampaign().getId(),"exp",e.getExperience().getId()]);return ie.ofNullable(i.gsid)}getPageviewSelections(e){const t=[],i=this.readState();return void 0!==i.cpg&&Object.keys(i.cpg).forEach((s=>{if(void 0!==i.cpg){const n=i.cpg[s];"exp"in n&&Object.keys(n.exp).forEach((i=>{const r=n.exp[i];void 0!==r.v&&"gpvid"in r&&r.gpvid===e&&t.push({campaignId:s,experienceId:i,variationId:r.v})}))}})),t}getSessionId(){const e=this.readState(),t=fa.getPath(e,["s"]);return ie.ofNullable(t.id)}updateAndGetSessionId(){const e=this.environment.getNowUnixTime(),t=this.readState(),i=fa.getPath(t,["s"]);return void 0===i.st&&(i.st=e),(void 0===i.id||void 0===i.t||e-i.t>di||e-i.st>ui)&&(fs.debug("Starting a new session"),i.id=this.generateSessionId(),i.st=e),fs.debug("Extending current session"),i.t=e,this.writeState(t),i.id}getUserVisitStatus(e){return this.isFirstSession(e)?"N":"R"}isFirstSession(e){const t=e.getFirstVisitTimeSec();this.updateAndGetSessionId();const i=this.readState(),s=fa.getPath(i,["s"]).st;return fs.info(`user.getId(): ${e.getId()}`),fs.info(`userCreationTimeSec: ${t}`),fs.info(`currentSessionStartTimeSec: ${s}`),Math.abs(t-s)<di/2}setAndGetCampaignControl(e){const t=e.getCustomer();Q(t.isCampaignControl());const i=this.readState(),s=fa.getPath(i,["cpg",e.getId()]),n=e.getControlTrafficPercentage().get();return delete i.c,delete i.ct,this.setAndGetControl(t,s,i,n)}setAndGetControl(e,t,i,s){const n=this.environment.getInitializeUnixTime();if(e.getControlStickyConfig().isSticky()||fs.error("Control is not sticky, but should be",54),e.getControlStickyConfig().isSticky()&&void 0!==t.c&&void 0!==t.ct){const i=t.ct;if(!e.getControlStickyConfig().isExpired(n,i))return fs.debug("control: "+t.c+" (sticky decision)"),t.c;fs.error(`Control sticky decision expired. now:${n}, last:${i}`,55)}void 0!==t.c&&fs.error(`Making new control decision, but c is present: ${t.c}`,56),void 0!==t.ct&&fs.error(`Making new control decision, but ct is present: ${t.ct}`,57);const r=Math.random()<s;return t.c=r,t.ct=n,this.writeState(i),fs.debug("control: "+t.c),r}generateSessionId(){return this.environment.getNowUnixTime()+"-"+$s()}updateAndGetIsFirstTime(e,t){let i=!1;const s=this.readState(),n=fa.getPath(s,["uu"]),r=e.join(":");return r in n?n[r]===t&&(i=!0):(n[r]=t,this.writeState(s),i=!0),i}readState(){let e={};return this.browserStorage.read(this.storageKey).ifPresent((t=>{try{e=Oi(t)}catch(i){const e=As(i);e.message=`Could not parse customer storage\n${e.message}`,fs.error(e,58)}})),J(!Object.prototype.hasOwnProperty.call(e,"vr")||e.vr===fa.VERSION),e}writeState(e){e.vr=fa.VERSION;const t=Ni(e);this.override.saveCustomerStorage().orElse(!0)&&this.browserStorage.write(this.storageKey,t)}}class Ea{constructor(e,t){__publicField(this,"customer"),__publicField(this,"storageKey"),__publicField(this,"browserStorage"),this.customer=e,this.storageKey=`${Ei}${e.getId()}`,this.browserStorage=t,this.initialize()}setDataAndMetadata(e,t,i){const s=this.getAllDataAndMetadata();s.data[e]=t,s.meta[e]=i,this.setAll(s)}getData(e){const t=this.getAllData()[e];return void 0===t||0===Object.keys(t).length?ie.empty():ie.ofNullable(t)}getAllData(){return this.getAllDataAndMetadata().data}getMetadata(e){const t=this.getAllMetdata()[e];return void 0===t||0===Object.keys(t).length?ie.empty():ie.ofNullable(t)}getAllMetdata(){return this.getAllDataAndMetadata().meta}setAllDataAndMetadata(e,t){const i={data:e,meta:t};this.setAll(i)}deleteAll(){this.browserStorage.delete(this.storageKey)}getAllDataAndMetadata(){const e=this.browserStorage.read(this.storageKey);let t=this.emptyStorage();if(e.ifPresent((e=>{try{t=Oi(e)}catch(i){const e=As(i);e.message=`Could not parse integration data storage\n${e.message}`,fs.error(e,59),this.deleteAll()}})),null==t||0===Object.keys(t).length)t=this.emptyStorage();else{const e=t;is(e)&&void 0===e.__marketoLead||(t=this.emptyStorage())}return void 0===t.meta&&(t.meta={}),ln(t.data.marketo)&&(t.data.marketo={}),t}setAll(e){const t=this.emptyStorage();nn.forEach((i=>{hn[i](this.customer)&&(t.data[i]=e.data[i],t.meta[i]=e.meta[i])})),this.browserStorage.write(this.storageKey,Ni(t))}emptyStorage(){return{data:{},meta:{}}}initialize(){const e=this.getAllDataAndMetadata();nn.forEach((t=>{hn[t](this.customer)||(delete e.data[t],delete e.meta[t])})),this.setAll(e)}}class _a{constructor(){__publicField(this,"storage"),this.storage={}}write(e,t){this.storage[e]=t}read(e){return ie.ofNullable(this.storage[e])}delete(e){delete this.storage[e]}}class ya{constructor(e,t,i){__publicField(this,"storageKey"),__publicField(this,"environment"),__publicField(this,"browserStorage"),this.storageKey=yi+e.getId(),this.browserStorage=i,this.environment=t}set(e){const t=e.toJson(),i=$i(this.environment,t);this.browserStorage.write(this.storageKey,i)}get(){return this.browserStorage.read(this.storageKey).flatMap((e=>{try{const t=zi(this.environment,e);return ie.ofNullable(t)}catch(t){const e=As(t);return e.message=`Policy parse exception\n${e.message}`,fs.error(e,60),ie.empty()}})).flatMap((e=>ea.fromJson(e)))}}var Sa={},Ia={get exports(){return Sa},set exports(e){Sa=e}},Ca={};!function(e){function t(e,t){var i,s,n,r,a,o,l,c;for(i=3&e.length,s=e.length-i,n=t,a=3432918353,o=461845907,c=0;c<s;)l=255&e.charCodeAt(c)|(255&e.charCodeAt(++c))<<8|(255&e.charCodeAt(++c))<<16|(255&e.charCodeAt(++c))<<24,++c,n=27492+(65535&(r=5*(65535&(n=(n^=l=(65535&(l=(l=(65535&l)*a+(((l>>>16)*a&65535)<<16)&4294967295)<<15|l>>>17))*o+(((l>>>16)*o&65535)<<16)&4294967295)<<13|n>>>19))+((5*(n>>>16)&65535)<<16)&4294967295))+((58964+(r>>>16)&65535)<<16);switch(l=0,i){case 3:l^=(255&e.charCodeAt(c+2))<<16;case 2:l^=(255&e.charCodeAt(c+1))<<8;case 1:n^=l=(65535&(l=(l=(65535&(l^=255&e.charCodeAt(c)))*a+(((l>>>16)*a&65535)<<16)&4294967295)<<15|l>>>17))*o+(((l>>>16)*o&65535)<<16)&4294967295}return n^=e.length,n=2246822507*(65535&(n^=n>>>16))+((2246822507*(n>>>16)&65535)<<16)&4294967295,n=3266489909*(65535&(n^=n>>>13))+((3266489909*(n>>>16)&65535)<<16)&4294967295,(n^=n>>>16)>>>0}e.exports=t}({get exports(){return Ca},set exports(e){Ca=e}});var Ta={};!function(e){function t(e,t){for(var i,s=e.length,n=t^s,r=0;s>=4;)i=1540483477*(65535&(i=255&e.charCodeAt(r)|(255&e.charCodeAt(++r))<<8|(255&e.charCodeAt(++r))<<16|(255&e.charCodeAt(++r))<<24))+((1540483477*(i>>>16)&65535)<<16),n=1540483477*(65535&n)+((1540483477*(n>>>16)&65535)<<16)^(i=1540483477*(65535&(i^=i>>>24))+((1540483477*(i>>>16)&65535)<<16)),s-=4,++r;switch(s){case 3:n^=(255&e.charCodeAt(r+2))<<16;case 2:n^=(255&e.charCodeAt(r+1))<<8;case 1:n=1540483477*(65535&(n^=255&e.charCodeAt(r)))+((1540483477*(n>>>16)&65535)<<16)}return n=1540483477*(65535&(n^=n>>>13))+((1540483477*(n>>>16)&65535)<<16),(n^=n>>>15)>>>0}e.exports=t}({get exports(){return Ta},set exports(e){Ta=e}});var Aa=Ca,xa=Ta;Ia.exports=Aa;var wa=Sa.murmur3=Aa;function ka(e,t){return wa(e,t)}Sa.murmur2=xa;const Fa=__pow(2,32);function Pa(e,t){const i=(e>>>0)/Fa;return Math.floor(i*t)}class Da{constructor(e,t,i){let s;__publicField(this,"browserStorage"),__publicField(this,"environment"),__publicField(this,"id"),__publicField(this,"storageKey"),this.browserStorage=e,this.environment=t,this.storageKey=`${Ci}${i.getId()}`,this.browserStorage.read(this.storageKey).ifPresent((e=>{s=e,fs.debug(`User: Found existing User ID: ${s}`)})),void 0===s&&(s=this.generateId(),fs.debug(`User: No existing User ID; generated new ID: ${s}`),this.browserStorage.write(this.storageKey,s)),this.id=s}getId(){if(void 0===this.id)throw new Y("user id not defined");const e=this.browserStorage.read(this.storageKey);return e.isPresent()?e.get()!==this.id&&fs.error(`User id in memory (${this.id}) not the same as user id in localStorage (${e.get()})`,62):fs.error("User id is missing from localStorage",61),this.id}isNewVisitor(){const e=this.getFirstVisitTimeSec();return this.environment.getNowUnixTime()-e<gi}isReturningVisitor(){return!this.isNewVisitor()}getFirstVisitTimeSec(){const e=this.getId().split(".",2);return Number(e[1])}getUserBucket(){const e=100,t=Pa(ka(this.getId(),1),e);return Math.floor(t+1)}generateId(){const e=this.environment.getNowUnixTime();return`${zs()}.${e}`}}class Ma{constructor(e,t){__publicField(this,"client"),__publicField(this,"environment"),__publicField(this,"taskQueue",[]),__publicField(this,"completedTasks",[]),__publicField(this,"isRunning",!1),__publicField(this,"isStopping",!1),__publicField(this,"timeoutId"),__publicField(this,"queueChecksum"),__publicField(this,"doneCallbacks",[]),__publicField(this,"latestQueueChecksum"),__publicField(this,"latestQueueTimeMs"),this.client=e,this.environment=t}onDone(e){this.doneCallbacks.push(e)}isDone(){return 0===this.taskQueue.length}hasStarted(){return this.taskQueue.length>0||this.completedTasks.length>0}getClient(){return this.client}addTask(e){fs.debug("TaskManager.addTask("+e.toString()+")"),this.isStopping?fs.warn(`Rejecting addTask(${e.toString()}) request since TaskManager is stopping`,35,e.getEntityIds()):(e.setManager(this),this.handleNotDone(e),this.queueChecksum=void 0,this.runAfter(0))}runNow(){fs.debug("TaskManager run now - synchronously"),this.eventLoop()}findTasks(e){return[...this.taskQueue,...this.completedTasks].filter((t=>e(t)))}stop(){fs.debug("TaskManager.stop()"),this.isStopping=!0,this.runAfter(0)}eventLoop(){if(fs.group("TaskManager.eventLoop()"),fs.time("TaskManager.eventLoop()"),this.isRunning)return fs.debug("TaskManager called again when already running. Back to work..."),void fs.groupEnd();if(this.isRunning=!0,this.clearTimeout(),this.taskQueue.length>0&&void 0!==this.latestQueueChecksum&&void 0!==this.latestQueueTimeMs&&this.environment.getNowUnixTimeMs()-this.latestQueueTimeMs>NO_PROGRESS_TOLERANCE_TIME_MS&&!this.isQueueBlocked()){const e=this.extractVictim();void 0===e?fs.error("Unable to extract latest task when trying to make progress",37):(fs.error(`Unable to make progress. Canceling task ${e.toString()}. Queue: ${this.queueToString()}`,36,e.getEntityIds()),this.cancelTask(e))}if(this.isStopping?this.stopTasks():this.runTasks(),this.taskQueue.length>0){const e=this.computeChecksum();e!==this.latestQueueChecksum&&(this.latestQueueChecksum=e,this.latestQueueTimeMs=this.environment.getNowUnixTimeMs())}else this.latestQueueChecksum=void 0,this.latestQueueTimeMs=void 0;if(this.taskQueue.length>0)this.isQueueBlocked()?(fs.debug("TaskManager queue is blocked on WAITING tasks. Sleeping."),this.clearTimeout(),this.latestQueueChecksum=void 0,this.latestQueueTimeMs=void 0):(fs.debug("TaskManager schedule callback for later"),this.runAfter(ci));else if(this.isStopping)fs.debug("TaskManager schedule callback for now"),this.runAfter(0);else{for(fs.group("TaskManager done"),this.clearTimeout(),this.latestQueueChecksum=void 0,this.latestQueueTimeMs=void 0;this.doneCallbacks.length>0;){const e=this.doneCallbacks.shift();void 0!==e&&(fs.group("executing done callback"),xs.executeFunction(e,155),fs.groupEnd())}fs.groupEnd()}this.isRunning=!1,fs.timeEnd("TaskManager.eventLoop()"),fs.groupEnd()}extractVictim(){let e;for(let t=0;t<this.taskQueue.length;t++)this.taskQueue[t].isBlocked()||(void 0===e||this.taskQueue[t].getId()>this.taskQueue[e].getId())&&(e=t);if(void 0!==e)return this.taskQueue.splice(e,1)[0]}stopTasks(){fs.group("TaskManager.stopTasks()");for(const e of this.completedTasks)e.cleanup();for(;this.taskQueue.length>0;){const e=this.taskQueue.shift();void 0!==e&&(fs.error(`Stopping and had to cancel task ${e.toString()}`,38,e.getEntityIds()),this.cancelTask(e))}for(;this.completedTasks.length>0;)this.completedTasks.shift();fs.debug("Cleanup of all Tasks complete. taskQueue and completedTasks are now empty"),fs.groupEnd(),this.isStopping=!1}cancelTask(e){void 0!==e&&(fs.debug("Canceling task "+e.toString()),e.cancel(),this.handleDone(e))}handleNotDone(e){this.taskQueue.push(e)}handleDone(e){this.completedTasks.push(e),this.queueChecksum=void 0}runTasks(){fs.group("TaskManager.runTasks()"),this.queueChecksum=this.computeChecksum();let e=!0;for(;0!==this.taskQueue.length;){const t=this.getUnloadingTasks();if(!e&&0===t.length)break;fs.debug(`task queue: ${this.queueToString()}`);const i=this.taskQueue.shift();if(void 0===i)continue;let s=!1,n=!1;t.length>0&&(i.isUnloading()&&e?s=!0:0===i.getNotDoneDependencies().length&&(n=!0));const r=this.computeChecksum();let a;s?(fs.debug(`Skipping unloading task ${i.toString()}. TM in unloading state and still making progress`),a=En.TRY_LATER):i.getStatus()===En.WAITING?(fs.debug(`Skipping waiting task ${i.toString()}`),a=En.WAITING):(fs.debug(`TaskManager running ${i.toString()}`),fs.time(`Task running ${i.toString()}`),a=i.runWrapper(),fs.timeEnd(`Task running ${i.toString()}`),fs.debug("TaskManager "+i.toString()+" returned "+En[a]));const o=this.computeChecksum();if(n&&r!==o&&(n=!1),n&&!i.isDone())i.inTransaction()&&fs.warn(`Unloading ${t[0].toString()} and transaction task is not done. Canceling ${i.toString()}`,39,i.getEntityIds()),this.cancelTask(i);else switch(a){case En.TRY_LATER:this.handleNotDone(i);break;case En.FAILED:case En.SUCCEEDED:this.handleDone(i);break;case En.CANCELED:this.handleDone(i),fs.debug("Task self-canceled "+i.toString());break;case En.WAITING:this.handleNotDone(i);break;default:this.handleDone(i),fs.error(`Invalid task status ${a} for ${i.toString()}`,40,i.getEntityIds())}const l=this.computeChecksum();if(l!==this.queueChecksum){if(this.isStopping)break;void 0===this.queueChecksum&&(this.queueChecksum=l)}else e=!1}fs.debug("No more work to do now."),fs.groupEnd()}getUnloadingTasks(){return this.taskQueue.filter((e=>e.isUnloading()))}clearTimeout(){void 0!==this.timeoutId&&(fs.debug("TaskManager clearing timeoutId: "+this.timeoutId),this.environment.getWindow().clearTimeout(this.timeoutId),this.timeoutId=void 0)}runAfter(e){fs.debug("TaskManager runAfter("+e+"ms)"),this.clearTimeout(),this.timeoutId=this.environment.getWindow().setTimeout((()=>{try{fs.debug("TaskManager callback triggered"),this.eventLoop()}catch(e){const t=As(e);t.message=`TaskManager exception\n${t.message}`,fs.error(t,41)}}),e),fs.debug("TaskManager set new timer: "+this.timeoutId)}computeChecksum(){return this.taskQueue.map((e=>e.getId().toString())).join("-")}queueToString(){return this.taskQueue.map((e=>e.toString())).join(", ")}isQueueBlocked(){return this.taskQueue.every((e=>e.isBlocked()))}}class Na extends Sn{constructor(e,t,i,s,n){super(),__publicField(this,"environment"),__publicField(this,"customer"),__publicField(this,"user"),__publicField(this,"integrationDataStorage"),__publicField(this,"override"),__publicField(this,"sent",!1),__publicField(this,"deliveryStatus",En.NOT_STARTED),this.environment=e,this.customer=t,this.user=i,this.integrationDataStorage=s,this.override=n}toString(){return`ContextEventTask(${this.environment.getPageviewId()})`}inTransaction(){return!0}isUnloading(){return!1}run(){return this.sendOnce(),this.deliveryStatus===En.SUCCEEDED?En.SUCCEEDED:this.deliveryStatus===En.FAILED?En.FAILED:(fs.debug("Waiting for context event delivery confirmation"),En.TRY_LATER)}sendOnce(){this.sent||(fs.info("Sending context event"),fn.sendContext(this.environment,this.customer,this.user,this.integrationDataStorage,this.override).then((()=>{fs.info(`Context ${this.environment.getPageviewId()} event delivery success`),this.deliveryStatus=En.SUCCEEDED})).catch((e=>{const t=As(e);fs.warn(`Context ${this.environment.getPageviewId()} event delivery failed: ${t.message}`,224),this.deliveryStatus=En.FAILED})),this.sent=!0)}}class Oa extends Sn{constructor(e,t,i,s,n,r,a,o,l,c,d){super(),__publicField(this,"environment"),__publicField(this,"customer"),__publicField(this,"customerStorage"),__publicField(this,"attributeStorage"),__publicField(this,"activityStorage"),__publicField(this,"user"),__publicField(this,"override"),__publicField(this,"pageContext"),__publicField(this,"serverContext"),__publicField(this,"policy"),__publicField(this,"registeredClickEvents",[]),__publicField(this,"statusModel"),__publicField(this,"pageviewId"),this.environment=e,this.customer=t,this.customerStorage=i,this.attributeStorage=s,this.activityStorage=n,this.user=r,this.override=a,this.pageContext=o,this.serverContext=l,this.policy=c,this.pageviewId=this.environment.getPageviewId(),this.statusModel=d}toString(){return"ConversionEventInstrumentationTask("+this.pageviewId+")"}inTransaction(){return!0}isUnloading(){return!1}cleanup(){fs.group("ConversionEventInstrumentationTask.cleanup()"),this.registeredClickEvents.forEach((([e,t])=>{fs.debug('removing handler: events="'+this.getEventName()+'", selector="'+e.getSelector()+'"');try{this.environment.getWindow().document.removeEventListener("click",t,!0)}catch(i){const t=As(i);t.message=`Failed to unregister click event\n${t.message}`,fs.error(t,194,{eventId:e.getId()})}})),fs.groupEnd()}run(){return this.instrumentEvents(),En.SUCCEEDED}getEventName(){return"click."+this.pageviewId}instrumentEvents(){fs.group("instrumentEvents()");const e=this.environment.getPageviewId(),t=this.customer.getEvents().filter((e=>this.override.isEventLive(e).orElse("live"===e.getState())));Me.filterEvents(t).filter((e=>this.pageMatch(e))).forEach((e=>{this.instrumentClickEvent(e)})),Le.filterEvents(t).filter((e=>this.pageMatch(e))).forEach((t=>{this.handleEvent(t,e)})),fs.groupEnd()}pageMatch(e){const t=this.pageContext.getPages();return e.getPages().some((e=>t.some((t=>t.getId()===e.getId()))))}handleEvent(e,t,i){fs.group(`handleEvent(${e.getName()}, ${t})`),fs.debug("handleEvent run code");if(!e.executeCode(xs.evalBoolean))return void fs.groupEnd();fs.debug("handleEvent send conversion event");const s=new en(e,t,void 0,i);this.activityStorage.add(Un.buildConversionActivity(s,this.customer,this.environment,this.user,this.attributeStorage,this.customerStorage));const n=new Cn(s,this.environment,this.customer,this.customerStorage,this.attributeStorage,this.pageContext,this.serverContext,this.policy,this.user,this.override,this.statusModel);this.manager.addTask(n),fs.groupEnd(),"click"===e.getType()&&this.manager.runNow()}instrumentClickEvent(e){fs.group("instrumentClickEvent("+e.getName()+")"),fs.info(`Instrument click event ${e.getId()}, selector ${e.getSelector()}`),fs.debug('adding handler: events="'+this.getEventName()+'", selector="'+e.getSelector()+'"');const t=t=>{try{if(t.target instanceof HTMLElement&&t.target.closest(e.getSelector())instanceof Element){const i=this.environment.generateActionId();this.handleEvent(e,i,t)}}catch(i){const t=As(i);t.message=`Failed to handle click event\n${t.message}`,fs.error(t,167,{eventId:e.getId()})}};try{this.environment.getWindow().document.addEventListener("click",t,!0)}catch(i){const t=As(i);t.message=`Failed to register click event\n${t.message}`,fs.error(t,193,{eventId:e.getId()})}this.registeredClickEvents.push([e,t]),fs.groupEnd()}}class Ra extends Sn{constructor(e){super(),__publicField(this,"elementObserver"),this.elementObserver=e}toString(){return"ElementObserverTask()"}inTransaction(){return!1}isUnloading(){return!1}cleanup(){fs.group("ElementObserverTask.cleanup()"),this.elementObserver.reset(),fs.groupEnd()}run(){return fs.debug("ElementObserverTask no-op done"),En.SUCCEEDED}}class La extends Sn{constructor(e,t,i,s=[]){if(super(),__publicField(this,"customer"),__publicField(this,"user"),__publicField(this,"cookie"),__publicField(this,"dependencies"),__publicField(this,"deliveryStatus",En.NOT_STARTED),__publicField(this,"sent",!1),!an(e))throw new Error("Marketo integration must be enabled for the customer to use the MarketoIdAssociatorTask");this.customer=e,this.user=t,this.cookie=i,this.dependencies=s}static get ENDPOINT(){return"/marketo-id-associator"}toString(){return`MarketoIdAssociatorTask(user: ${this.user.getId()})`}inTransaction(){return!0}isUnloading(){return!1}getNotDoneDependencies(){const e=[];return this.dependencies.forEach((t=>{t.isDone()||e.push(t)})),e}run(){return this.getNotDoneDependencies().length>0?En.TRY_LATER:(this.sendOnce(),this.deliveryStatus===En.SUCCEEDED?En.SUCCEEDED:this.deliveryStatus===En.FAILED?En.FAILED:(fs.debug("Waiting for marketo id association response confirmation"),En.TRY_LATER))}sendOnce(){if(!this.sent){const e=this.customer.getId(),t=this.user.getId();fs.info(`Sending marketo id association request. Customer: ${e} User: ${t}`);const i={customerId:this.customer.getId(),intellimizeUserId:this.user.getId(),cookie:this.cookie};vn(vi,La.ENDPOINT,{method:"POST",body:Ni(i)}).then((()=>{fs.info("Successfully sent marketo id association request"),this.deliveryStatus=En.SUCCEEDED})).catch((e=>{const t=As(e);fs.error(t,82),this.deliveryStatus=En.FAILED})),this.sent=!0}}}const Ua=class extends Sn{constructor(e,t,i){if(super(),__publicField(this,"environment"),__publicField(this,"customer"),__publicField(this,"user"),__publicField(this,"startTimeMs"),!an(t))throw new Error("Marketo integration must be enabled for the customer to use the MarketoCookieTask");this.environment=e,this.customer=t,this.user=i,this.startTimeMs=this.environment.getNowUnixTimeMs()}toString(){return"MarketoCookieTask()"}inTransaction(){return!1}isUnloading(){return!1}run(){if(!this.environment.getUrlParameter(Fi,b).isPresent())return En.SUCCEEDED;const e=on(this.environment);if(e.isPresent()){const t=e.get(),i=new La(this.customer,this.user,t);return this.manager.addTask(i),En.SUCCEEDED}return this.environment.getNowUnixTimeMs()-this.startTimeMs>=Ua.WAIT_FOR_MKTO_COOKIE_MS?(fs.warn(`marketo cookie not present on the page within ${Ua.WAIT_FOR_MKTO_COOKIE_MS}ms`,81),En.SUCCEEDED):(fs.debug("marketo cookie not present; Will try again later."),En.TRY_LATER)}};let Va=Ua;__publicField(Va,"WAIT_FOR_MKTO_COOKIE_MS",5e3);const $a=class extends Sn{constructor(e,t,i,s,n,r,a,o,l,c,d){if(super(),__publicField(this,"environment"),__publicField(this,"customer"),__publicField(this,"user"),__publicField(this,"override"),__publicField(this,"activityStorage"),__publicField(this,"attributeStorage"),__publicField(this,"customerStorage"),__publicField(this,"pageContext"),__publicField(this,"serverContext"),__publicField(this,"policy"),__publicField(this,"statusModel"),__publicField(this,"startTimeMs"),__publicField(this,"trackedForms",[]),!an(t))throw new Error("Marketo integration must be enabled for the customer to use the MarketoFormsTask");this.environment=e,this.customer=t,this.user=i,this.override=s,this.activityStorage=n,this.attributeStorage=r,this.customerStorage=a,this.pageContext=o,this.serverContext=l,this.policy=c,this.statusModel=d,this.startTimeMs=this.environment.getNowUnixTimeMs()}toString(){return"MarketoFormsTask()"}inTransaction(){return!1}isUnloading(){return!1}run(){const e=this.environment.getNowUnixTimeMs(),t=this.environment.getWindow();if(void 0!==t.MktoForms2)return fs.debug("marketo forms library ready"),this.attachFormHandlers(t.MktoForms2),En.SUCCEEDED;return e-this.startTimeMs>=$a.WAIT_FOR_MKTOFORMS2_MS?(fs.debug(`marketo forms library not present on the page within ${$a.WAIT_FOR_MKTOFORMS2_MS}ms`),En.SUCCEEDED):(fs.debug("marketo forms library not present; Will try again later."),En.TRY_LATER)}attachFormHandlers(e){e.whenReady((e=>{const t=String(e.getId());this.trackedForms.includes(t)?fs.debug(`marketo form already tracked (Form ID: ${t})`):(this.trackedForms.push(t),fs.debug(`attaching success handler to marketo (Form ID: ${t})`),e.onSuccess((()=>{fs.debug(`success handler fired for marketo form; triggering lead association request (Form ID: ${t})`);const e=this.environment.generateActionId();this.findEvents(t).forEach((t=>{this.sendConversionEvent(t,e)})),on(this.environment).ifPresent((e=>{const t=new La(this.customer,this.user,e);this.manager.addTask(t)}))})))}))}findEvents(e){return Oe.filterEvents(this.customer.getEvents()).filter((e=>this.override.isEventLive(e).orElse("live"===e.getState()))).filter((t=>t.getFormId()===e))}sendConversionEvent(e,t){fs.debug("Marketo form submission send conversion event");const i=new en(e,t,void 0,void 0);this.activityStorage.add(Un.buildConversionActivity(i,this.customer,this.environment,this.user,this.attributeStorage,this.customerStorage));const s=new Cn(i,this.environment,this.customer,this.customerStorage,this.attributeStorage,this.pageContext,this.serverContext,this.policy,this.user,this.override,this.statusModel);this.manager.addTask(s)}};let za=$a;__publicField(za,"WAIT_FOR_MKTOFORMS2_MS",5e3);class Wa extends Sn{toString(){return"PageUnloadingTask()"}inTransaction(){return!1}isUnloading(){return!0}run(){return fs.debug("page unload no-op done"),En.SUCCEEDED}}class Ga extends Sn{constructor(e,t,i,s,n,r,a,o,l){super(),__publicField(this,"environment"),__publicField(this,"customer"),__publicField(this,"user"),__publicField(this,"customerStorage"),__publicField(this,"attributeStorage"),__publicField(this,"pageContext"),__publicField(this,"serverContext"),__publicField(this,"policy"),__publicField(this,"override"),__publicField(this,"sent",!1),__publicField(this,"deliveryStatus",En.NOT_STARTED),this.environment=e,this.customer=t,this.user=i,this.customerStorage=s,this.attributeStorage=n,this.pageContext=r,this.serverContext=a,this.policy=o,this.override=l}toString(){return`PageviewEventTask(${this.environment.getPageviewId()})`}inTransaction(){return!0}isUnloading(){return!1}run(){return this.sendOnce(),this.deliveryStatus===En.SUCCEEDED?En.SUCCEEDED:this.deliveryStatus===En.FAILED?En.FAILED:(fs.debug("Waiting for pageview event delivery confirmation"),En.TRY_LATER)}sendOnce(){this.sent||(fs.info("Sending pageview event"),fn.sendPageview(this.environment,this.customer,this.user,this.customerStorage,this.attributeStorage,this.pageContext,this.serverContext,this.policy,this.override).then((()=>{fs.info(`Pageview ${this.environment.getPageviewId()} event delivery success`),this.deliveryStatus=En.SUCCEEDED})).catch((e=>{const t=As(e);fs.warn(`Pageview ${this.environment.getPageviewId()} event delivery failed: ${t.message}`,83),this.deliveryStatus=En.FAILED})),this.sent=!0)}}var ja=(e=>(e[e.TS=0]="TS",e[e.TZ=1]="TZ",e[e.DP=2]="DP",e[e.WP=3]="WP",e[e.US=4]="US",e[e.UM=5]="UM",e[e.UCM=6]="UCM",e[e.UT=7]="UT",e[e.UCN=8]="UCN",e[e.UPN=9]="UPN",e[e.UPNV=10]="UPNV",e[e.CAN=11]="CAN",e[e.CANV=12]="CANV",e[e.PID=13]="PID",e[e.IFTU=14]="IFTU",e[e.AID=15]="AID",e))(ja||{});const Ba="=",Ha="-";class Ka{static buildBrowserContext(e,t,i,s,n){const r=t.getInternalAttributes("user"),a=[];n.getExperiences().forEach((e=>{if("cc"!==e.getType()){const t=n.getVariationIds(e.getId());1===t.length?a.push(t[0]):fs.error("Non-cc experience does not have exactly one variation selected",181,{experienceId:e.getId()})}}));const o={isFirstTimeUser:i.isNewVisitor(),timestamp:e.getNowUnixTime(),customAttributes:t.getFlattenedCustomAttributes(),pageIds:s.getPages().map((e=>e.getId())),audienceIds:s.getAudiences().map((e=>e.getId())),selectedVariationIds:a};return void 0!==r.ts&&(o.trafficSource=r.ts),o.timeZone=e.getTimeZone(),void 0!==r.uts&&(o.utmSource=r.uts),void 0!==r.utm&&(o.utmMedium=r.utm),void 0!==r.utcm&&(o.utmCampaign=r.utcm),void 0!==r.utt&&(o.utmTerm=r.utt),void 0!==r.utcn&&(o.utmContent=r.utcn),e.getHostingPageUrl().getUrl().ifPresent((e=>{o.hostingPageUrl=e})),o}static buildFeatures(e,t,i,s){const n={},r=t.getInternalAttributes("user");return Ka.addFeature(n,0,Ka.getFeatureFromAttribute(r.ts)),Ka.addFeature(n,4,Ka.getFeatureFromAttribute(r.uts)),Ka.addFeature(n,5,Ka.getFeatureFromAttribute(r.utm)),Ka.addFeature(n,6,Ka.getFeatureFromAttribute(r.utcm)),Ka.addFeature(n,7,Ka.getFeatureFromAttribute(r.utt)),Ka.addFeature(n,8,Ka.getFeatureFromAttribute(r.utcn)),Ka.addFeature(n,9,Ka.getUrlParameterName(e)),Ka.addFeature(n,10,Ka.getUrlParameterNameValue(e)),Ka.addFeature(n,1,Ka.getTimeZoneValue(e)),Ka.addFeature(n,2,Ka.getDayPartValue(e)),Ka.addFeature(n,3,Ka.getWeekPartValue(e)),Ka.addFeature(n,11,Ka.getCustomAttributeName(t)),Ka.addFeature(n,12,Ka.getCustomAttributeNameValue(t)),Ka.addFeature(n,13,Ka.getPageId(s)),Ka.addFeature(n,14,Ka.getIsFirstTimeUser(i)),Ka.addFeature(n,15,Ka.getAudienceId(s)),n}static getFeatureFromAttribute(e){return ie.ofNullable(e).toArray()}static getTimeZoneValue(e){return[e.getTimeZone()]}static getDayPartValue(e){return[e.getDayPart()]}static getWeekPartValue(e){return[e.getWeekPart()]}static getUrlParameterName(e){return Object.keys(e.getAllUrlParamsEncoded()).filter((e=>""!==e))}static getUrlParameterNameValue(e){const t=e.getAllUrlParamsEncoded(),i=[];return Object.keys(t).forEach((e=>{t[e].forEach((t=>{i.push(e+Ha+t)}))})),i}static getCustomAttributeName(e){const t=e.getFlattenedCustomAttributes();return Object.keys(t)}static getCustomAttributeNameValue(e){const t=e.getFlattenedCustomAttributes();return Object.keys(t).map((e=>e+Ha+t[e]))}static getPageId(e){return e.getPages().map((e=>e.getId()))}static getIsFirstTimeUser(e){return[e.isNewVisitor().toString()]}static getAudienceId(e){return e.getAudiences().map((e=>e.getId()))}static buildUnaryFeature(e,t){return ja[e]+Ba+t}static addFeature(e,t,i){i.forEach((i=>{e[Ka.buildUnaryFeature(t,i)]=!0}))}}class qa{constructor(){__publicField(this,"variationLists",{}),__publicField(this,"experiences",{}),__publicField(this,"pages",{}),__publicField(this,"stickyVariations",{}),__publicField(this,"modelVersions",{})}unshift(e){const t=e.getExperience(),i=t.getId();void 0===this.variationLists[i]&&(this.variationLists[i]=[]),this.variationLists[i].unshift(e),this.experiences[i]=t}isEmpty(){return!Object.keys(this.variationLists).some((e=>this.variationLists[e].length>0))}setPage(e,t){this.pages[e]=t}getPage(e){return this.pages[e]}getExperience(e){return this.experiences[e]}getExperiences(){return Object.keys(this.variationLists).map((e=>this.experiences[e]))}setModelVersion(e,t){this.modelVersions[e]=t}getModelVersion(e){return this.modelVersions[e]}sortVariations(e,t){var i;null==(i=this.variationLists[e])||i.sort(t)}prioritizeStickyVariation(e,t){if(fs.group("prioritizeVariation(experience:"+e+", variation:"+t+")"),e in this.variationLists){let i=-1;this.variationLists[e].forEach(((e,s)=>{e.getId()===t&&(i=s)})),fs.debug("found variation index? => "+i),-1!==i&&(this.variationLists[e]=[this.variationLists[e][i]],e in this.stickyVariations||(this.stickyVariations[e]={}),this.stickyVariations[e][t]=!0)}fs.groupEnd()}getVariationIds(e){var t,i;return null!=(i=null==(t=this.variationLists[e])?void 0:t.map((e=>e.getId())))?i:[]}hasNext(e){const t=this.variationLists[e];return void 0!==t&&t.length>0}shift(e){var t;if(!(e in this.variationLists))throw new Z("No value present");const i=null==(t=this.variationLists[e])?void 0:t.shift();if(this.removeIfEmpty(e),void 0!==i)return i;throw new Z("No value present")}getFirst(e){var t;const i=this.variationLists[e];if(void 0===i)throw new Z("No experience present");if(0===i.length)throw new Z("No variations present");const s=null==(t=this.variationLists[e])?void 0:t[0];if(void 0!==s)return s;throw new Z("No value present")}removeVariation(e,t){t.getId();const i=this.variationLists[e];if(void 0!==i){let s=-1;i.forEach(((e,i)=>{e.getId()===t.getId()&&(s=i)})),-1!==s&&(i.splice(s,1),this.removeIfEmpty(e))}}removeExperience(e){e in this.experiences&&delete this.experiences[e],e in this.variationLists&&delete this.variationLists[e]}isDecidingExperience(e){return e.getId()in this.experiences}isStickyVariation(e){var t;const i=e.getId(),s=e.getExperience().getId();return Boolean(null==(t=this.stickyVariations[s])?void 0:t[i])}toString(){let e="{\n";return Object.keys(this.variationLists).forEach((t=>{e+="  "+t+": ",e+="["+this.variationLists[t].map((e=>e.getId())).join(", ")+"]",e+="\n"})),e+="}\n",e}removeIfEmpty(e){const t=this.variationLists[e];void 0!==t&&0===t.length&&this.removeExperience(e)}}class Qa extends Sn{constructor(e,t,i,s,n,r,a,o,l,c,d,u,g,h,m){super(),__publicField(this,"environment"),__publicField(this,"customer"),__publicField(this,"customerStorage"),__publicField(this,"attributeStorage"),__publicField(this,"activityStorage"),__publicField(this,"user"),__publicField(this,"override"),__publicField(this,"pageContext"),__publicField(this,"serverContext"),__publicField(this,"attributeData"),__publicField(this,"statusModel"),__publicField(this,"elementObserver"),__publicField(this,"runtime"),__publicField(this,"hider"),__publicField(this,"decisionContext"),__publicField(this,"getVariationRecordedCallbackTuples"),__publicField(this,"getEligibleCc",!1),__publicField(this,"selectAb",!1),__publicField(this,"selectRbp",!1),__publicField(this,"haveRunCampaignCode",{}),this.environment=e,this.customer=t,this.customerStorage=i,this.attributeStorage=s,this.activityStorage=n,this.user=r,this.override=a,this.pageContext=o,this.serverContext=l,this.attributeData=c,this.statusModel=d,this.runtime=u,this.hider=g,this.getVariationRecordedCallbackTuples=h,this.elementObserver=m,this.decisionContext=new qa}toString(){return"SelectVariationsTask()"}inTransaction(){return!1}isUnloading(){return!1}selectAbExperienceVariationsOnce(){this.selectAb||(fs.time("selectAbExperienceVariationsOnce"),fs.group("selectAbExperienceVariationsOnce()"),this.customer.getCampaigns().forEach((e=>{It.filterExperiences(e.getExperiences()).filter((e=>this.isExperienceEligible(e))).forEach((t=>{let i;if(this.runCampaignCodeOnce(e),this.override.hasVariationIds(t).isPresent()){const e=this.override.hasVariationIds(t).get();i=t.getVariation(e[0])}else{const e=1e3,s=Pa(ka(t.getId()+this.user.getId(),1),e);i=t.selectVariation(s)}i.ifPresent((e=>{this.isVariationEligible(e)?(this.decisionContext.unshift(e),this.decisionContext.setModelVersion(t.getId(),"ab")):fs.error("Selected A/B variation is not eligible",182,{experienceId:t.getId(),variationId:e.getId()})})).ifAbsent((()=>{fs.error("Failed to select variation for A/B experience",183,{experienceId:t.getId()})}))}))})),fs.groupEnd(),fs.timeEnd("selectAbExperienceVariationsOnce"),this.selectAb=!0)}selectRbpExperienceVariationsOnce(){this.selectRbp||(fs.time("selectRbpExperienceVariationsOnce"),fs.group("selectRbpExperienceVariationsOnce()"),this.customer.getCampaigns().forEach((e=>{Tt.filterExperiences(e.getExperiences()).filter((e=>this.isExperienceEligible(e))).forEach((t=>{this.runCampaignCodeOnce(e);for(const e of t.getPrioritizedVariations())if(this.isVariationEligible(e)){this.decisionContext.unshift(e),this.decisionContext.setModelVersion(t.getId(),"rbp");break}void 0===this.decisionContext.getExperience(t.getId())&&fs.info("Failed to select variation for RBP",184,{experienceId:t.getId()})}))})),fs.groupEnd(),fs.timeEnd("selectRbpExperienceVariationsOnce"),this.selectRbp=!0)}getCcEligibleVariationsOnce(){this.getEligibleCc||(fs.time("getCcEligibleVariationsOnce"),fs.group("getCcEligibleVariationsOnce()"),this.customer.getCampaigns().forEach((e=>{Ct.filterExperiences(e.getExperiences()).filter((e=>this.isExperienceEligible(e))).forEach((t=>{this.runCampaignCodeOnce(e);const i=this.override.isControl().orElseRun((()=>this.customerStorage.updateAndGetControl(e)));if(this.statusModel.setCampaign(e,"control",i),i){const e=t.getControlVariation();this.decisionContext.unshift(e)}else t.getRealVariations().forEach((e=>{this.isVariationEligible(e)&&this.decisionContext.unshift(e)}))}))})),fs.groupEnd(),fs.timeEnd("getCcEligibleVariationsOnce"),this.getEligibleCc=!0)}isExperienceEligible(e){fs.group("isExperienceEligible(experience:"+e.getId()+")"),fs.debug(`Experience URL match (at least one match), URL: ${this.environment.getHostingPageUrl().getUrl().get()}`);const t=this.pageContext.getPages(),i=e.getPages().filter((e=>t.some((t=>t.getId()===e.getId()))));if(fs.debug("url match => "+(i.length>0)),this.statusModel.setExperience(e,"urlMatch",i.length>0),0===i.length)return fs.groupEnd(),!1;i.length>0&&fs.info(`Experience ${e.getId()} URL check, URL:${this.environment.getHostingPageUrl().getUrl().get()} Page:${i[0].getName()} => true`),this.decisionContext.setPage(e.getId(),i[0]),fs.debug("check experience enabled");let s=" (override)";const n=this.override.isExperienceEnabled(e).orElseRun((()=>(s="",e.isEnabled())));if(fs.info(`Experience ${e.getId()} enabled => ${n}${s}`),this.statusModel.setExperience(e,"enabled",n),!n)return this.customerStorage.deleteExperiencePredictionSelection(e),fs.groupEnd(),!1;fs.debug("check experience condition");let r=" (override)";const a=this.override.passExperienceCondition().orElseRun((()=>(r="",fs.debug("evaluating experience condition"),e.getCondition().map((t=>{let i=!1;try{i=t.evaluate(this.runtime)}catch(s){const t=As(s);i=!1,t.message="Experience condition evaluation failed "+t.message,fs.error(t,206,{experienceId:e.getId()})}return i})).orElse(!0))));if(fs.info(`Experience ${e.getId()} condition passed => ${a}${r}`),this.statusModel.setExperience(e,"passCondition",a),!a)return fs.groupEnd(),this.customerStorage.deleteExperiencePredictionSelection(e),!1;fs.debug("check experience inclusion");let o=" (override)";const l=this.override.isExperienceIncluded(e).orElseRun((()=>(o="",this.customerStorage.updateAndGetExperienceInclusion(e))));return fs.info(`Experience ${e.getId()} inclusion => ${l}${o}`),this.statusModel.setExperience(e,"inclusion",l),l?(fs.debug("isExperienceEligible => true"),fs.groupEnd(),!0):(fs.groupEnd(),this.customerStorage.deleteExperiencePredictionSelection(e),!1)}isVariationEligible(e){fs.group("isVariationEligible(variation:"+e.getId()+")"),fs.debug("check variation enabled");let t=" (override)";const i=this.override.isVariationEnabled(e).orElseRun((()=>(t="",e.isEnabled())));if(fs.info(`Variation ${e.getExperience().getId()}/${e.getId()} enabled => ${i}${t}`),this.statusModel.setVariation(e,"enabled",i),!i)return fs.groupEnd(),!1;fs.debug("check variation condition");let s=" (override)";const n=this.override.passVariationCondition().orElseRun((()=>(s="",e.getCondition().map((t=>{let i=!1;try{i=t.evaluate(this.runtime)}catch(s){const t=As(s);i=!1,t.message="Variation condition evaluation failed "+t.message,fs.error(t,207,{experienceId:e.getExperience().getId(),variationId:e.getId()})}return i})).orElse(!0))));return fs.info(`Variation ${e.getExperience().getId()}/${e.getId()} condition passed => ${n}${s}`),this.statusModel.setVariation(e,"passCondition",n),n?(fs.debug("isVariationEligible => true"),fs.groupEnd(),!0):(fs.groupEnd(),!1)}runCampaignCodeOnce(e){const t=e.getId();this.haveRunCampaignCode[t]||(this.haveRunCampaignCode[t]=!0,e.getCss().ifPresent((i=>{try{fs.info(`Injecting campaign ${e.getId()} css`),xs.injectCss(i,`campaign-${t}`,this.environment.getWindow().document),this.statusModel.setCampaign(e,"css",!0)}catch(s){const t=As(s);t.message=`Campaign (${e.getId()}) css injection failed\n${t.message}`,fs.error(t,90,{campaignId:e.getId()}),this.statusModel.setCampaign(e,"css",!1)}})),e.getCode().ifPresent((t=>{try{fs.info(`Running campaign ${e.getId()} code`),xs.eval(t),this.statusModel.setCampaign(e,"code",!0)}catch(i){const t=As(i);t.message=`Campaign (${e.getId()}) code execution failed\n${t.message}`,fs.error(t,14,{campaignId:e.getId()}),this.statusModel.setCampaign(e,"code",!1)}})))}}class Ya extends Qa{constructor(e,t,i,s,n,r,a,o,l,c,d,u,g,h,m,p){super(e,t,i,s,n,r,a,o,l,c,u,g,h,m,p),__publicField(this,"policy"),__publicField(this,"executeExperiencesTask"),__publicField(this,"didPrioritize",!1),this.policy=d}toString(){return"SelectVariationsTaskV4()"}run(){return this.selectAbExperienceVariationsOnce(),this.selectRbpExperienceVariationsOnce(),this.getCcEligibleVariationsOnce(),fs.debug("decisionContext: "+this.decisionContext),void 0===this.executeExperiencesTask&&(this.executeExperiencesTask=new Rr(this.environment,this.attributeStorage,this.activityStorage,this.customerStorage,this.decisionContext,this.pageContext,this.serverContext,this.attributeData,this.user,this.override,this.statusModel,this.hider,!1,this.getVariationRecordedCallbackTuples,this.elementObserver,this.policy),this.manager.addTask(this.executeExperiencesTask)),this.executeExperiencesTask.hideExperiencesOnce(),this.prioritizeCcVariationsOnce(),En.SUCCEEDED}prioritizeCcVariationsOnce(){if(fs.time("prioritizeCcVariationsOnce"),this.didPrioritize)return;fs.group("prioritizeCcVariationsOnce()");const e=Ka.buildFeatures(this.environment,this.attributeStorage,this.user,this.pageContext);fs.debug("features: "+Mi(e)),Ct.filterExperiences(this.decisionContext.getExperiences()).forEach((t=>{const i=t.getId(),s=this.policy.getExperienceModel(i),n=s.scoreVariations(e,this.decisionContext.getVariationIds(i));this.decisionContext.setModelVersion(i,s.getModelVersion()),this.decisionContext.sortVariations(i,((e,t)=>n[t.getId()]-n[e.getId()])),this.customerStorage.getStickyVariation(this.decisionContext.getExperience(i)).ifPresent((e=>{fs.info(`Variation ${i}/${e.getId()} selection was sticky`),this.decisionContext.prioritizeStickyVariation(i,e.getId())})),this.statusModel.setExperienceSortedVariations(t,this.decisionContext.getVariationIds(i))})),fs.debug("decisionContext: "+this.decisionContext),fs.groupEnd(),fs.timeEnd("prioritizeCcVariationsOnce"),this.didPrioritize=!0}}class Ja extends Sn{constructor(e,t,i,s){super(),__publicField(this,"environment"),__publicField(this,"customer"),__publicField(this,"integrationDataStorage"),__publicField(this,"user"),__publicField(this,"apiStatus",En.NOT_STARTED),__publicField(this,"sent",!1),this.environment=e,this.customer=t,this.user=i,this.integrationDataStorage=s}static get ENDPOINT(){return"/context-v2"}toString(){return"ServerContextTask()"}inTransaction(){return!1}isUnloading(){return!1}run(){return this.sendOnce(),this.apiStatus===En.SUCCEEDED?En.SUCCEEDED:this.apiStatus===En.FAILED?En.FAILED:(fs.debug("Waiting for server response"),En.TRY_LATER)}buildRequestBody(){return this.getCommonRequestBody()}handleResponse(e,t){this.integrationDataStorage.setDataAndMetadata("marketo",t.integrationData.marketo,void 0===e.marketo?void 0:{})}getCommonRequestBody(){const e={clientVersion:oi,userId:this.user.getId()};return an(this.customer)&&on(this.environment).ifPresent((t=>{e.marketo={cookie:t}})),e}sendOnce(){if(!this.sent){const e=this.buildRequestBody();vn(pi,`${Ja.ENDPOINT}/${this.customer.getId()}`,{method:"POST",headers:{"Content-Type":"text/plain"},body:JSON.stringify(e)}).then((t=>{this.handleResponse(e,t),this.apiStatus=En.SUCCEEDED,fs.info("Successfully retrieved ServerContext"),this.manager.runNow()})).catch((e=>{const t=As(e);t.message=`Caught exception in server context task: ${t.message}`,fs.error(t,156),this.apiStatus=En.FAILED}))}this.sent=!0}}class Za extends ws{constructor(){super(...arguments),__publicField(this,"hasRun",!1),__publicField(this,"isRestartingStatus",!1),__publicField(this,"isEditorMode",!1),__publicField(this,"taskManager"),__publicField(this,"environment"),__publicField(this,"override"),__publicField(this,"customer"),__publicField(this,"conditionEvaluationRuntime"),__publicField(this,"elementObserver"),__publicField(this,"serverContext"),__publicField(this,"pageContext"),__publicField(this,"customerStorage"),__publicField(this,"attributeStorage"),__publicField(this,"integrationDataStorage"),__publicField(this,"user"),__publicField(this,"browserStorage"),__publicField(this,"localStorage"),__publicField(this,"statusModel"),__publicField(this,"policy"),__publicField(this,"attributeData"),__publicField(this,"activityStorage"),__publicField(this,"internalApi"),__publicField(this,"hider")}static buildServerContext(e){return{requestId:e.rid,clientIp:e.icip,userAgentDigest:e.iuad,location:e.loc,userAgent:e.userAgent}}static buildPolicy(e){try{const t={};if(void 0!==e.model){const i=e.model;Object.keys(i).forEach((e=>{t[e]=new Xr(e,i[e].modelVersion,i[e].featureVector)}));const s=new ea(e.policyId,e.policyTimestamp,t,Xr.newRandomModel);return ie.ofNullable(s)}fs.error("Could not build policy since model is missing",21)}catch(t){const e=As(t);e.message="Could not build policy from customer JSON\n"+e.message,fs.error(e,22)}return ie.empty()}static saveIfNeededAndGetPolicy(e,t,i,s,n,r,a){if(a.isControl().orElseRun((()=>!e.isCampaignControl()&&t.setAndGetCustomerControl(e))))return ea.buildControlPolicy(r);const o=i.get();let l=ea.buildEmptyPolicy(r);return o.isPresent()?s.isPresent()?n?(i.set(s.get()),fs.info("Old policy present, new policy present, new session => using new policy"),l=s.get()):(fs.info("Old policy present, new policy present, existing session => using old policy"),l=o.get()):(fs.info("Old policy present, new policy absent => using old policy"),l=o.get()):s.isPresent()?(i.set(s.get()),fs.info("Old policy absent, new policy present => using new policy"),l=s.get()):(fs.info("Old policy absent, new policy absent => using empty policy"),l=ea.buildEmptyPolicy(r)),l}run(){return __async(this,null,(function*(){if(fs.info("Starting client"),fs.time("Client run time"),this.hasRun)return void fs.error("Tried to run client again",23);fs.time("new Environment");const e=Yr(window);this.environment=new Xs(window,e),fs.configureEnvironment(this.environment),fs.timeEnd("new Environment"),this.isEditorMode=this.environment.getUrlParameter("imize_editor",ia("true")).isPresent();const t=this.isEditorMode?"editor mode (imize_editor=true)":"production mode (imize_editor!=true)";fs.info(`Client running in ${t}`);if(void 0!==this.environment.getWindow().ipgvidtfr)return void fs.error("Intellimize duplicate code detected on page.",2);this.environment.getWindow().ipgvidtfr=this.environment.getPageviewId();if(this.environment.getUrlParameter("intellimize_no_run",ia("true")).isPresent()&&!this.isEditorMode)return fs.info("Client not running since intellimize_no_run=true"),this.environment.getWindow().inrsgew=!0,void Us.revealAll(this.environment.getWindow().document);this.override=new na(this.environment,this.isEditorMode),this.hider=new Us(this.environment.getWindow(),!0),this.hider.startTimedRegionHider(),this.localStorage=new Rn(this.environment);const i=this.environment.getWindow()[ji(this.environment)];if(void 0===i)return fs.error("Missing customer JSON. Aborting.",24),void Us.revealAll(this.environment.getWindow().document);let s;if(fs.time("load json"),ws.iE(i))try{s=Wi(this.environment,i)}catch(m){const e=As(m);return e.message="Could not decrypt CustomerJson\n"+e.message,fs.error(e,212),void Us.revealAll(this.environment.getWindow().document)}else try{s=Oi(i)}catch(m){const e=As(m);return e.message="Could not parse CustomerJson\n"+e.message,fs.error(e,210),void Us.revealAll(this.environment.getWindow().document)}const n=ai(s);fs.timeEnd("load json"),fs.time("Build customer object time");const r=new ni(fs);this.customer=r.buildCustomer(n),fs.timeEnd("Build customer object time"),fs.configureCustomer(this.customer),this.serverContext=Za.buildServerContext(n),fs.configureServerContext(this.serverContext);const a=new Gr(this.environment);if(a.initialize(),this.taskManager=new Ma(this,this.environment),this.isEditorMode)this.hider.revealDocument();else{const e=`${Ti}${this.customer.getId()}`;let t="true"===this.localStorage.read(e).orElse("false");if(t||this.environment.getUrlParameter("intellimize_opt_out",ia("true")).ifPresent((()=>{t=this.environment.getWindow().confirm("Are you sure you want to opt out of Intellimize for this domain?"),t&&(this.localStorage.write(e,"true"),this.environment.getWindow().alert("You have successfully opted out of Intellimize for this domain."))})),t)return fs.debug("User opt-out; cleanup and exit early"),Rn.getStorageKeys(this.customer).forEach((t=>{t!==e&&this.localStorage.delete(t)})),this.hider.revealDocument(),void(this.environment.getWindow().inrsgew=!0)}const o=Za.buildPolicy(n);if(fs.time("Setup storage"),fs.time("initialize browserStorage"),this.isEditorMode)this.browserStorage=new _a;else{const e=new ba(this.localStorage,this.environment,this.taskManager,this.customer);yield e.initialize(),this.browserStorage=e}fs.timeEnd("initialize browserStorage"),this.user=new Da(this.browserStorage,this.environment,this.customer),fs.configureUser(this.user),this.statusModel=this.override.showStatusModule().orElse(!1)?new oa(this.environment,this.customer,this.override,this.browserStorage):new la,this.customerStorage=new fa(this.customer,this.environment,this.browserStorage,this.override);const l=this.customerStorage.getSessionId(),c=this.customerStorage.updateAndGetSessionId(),d=!l.map((e=>e===c)).orElse(!1);this.customer.isCampaignControl()||this.customerStorage.setAndGetCustomerControl(this.customer),this.attributeStorage=new ca(this.customer,this.environment,this.browserStorage,this.user),this.activityStorage=new Un(this.customer,this.browserStorage,this.environment),this.integrationDataStorage=new Ea(this.customer,this.browserStorage),fs.time("policy");const u=new ya(this.customer,this.environment,this.browserStorage);this.policy=Za.saveIfNeededAndGetPolicy(this.customer,this.customerStorage,u,o,d,this.environment,this.override),fs.timeEnd("policy"),fs.time("updateInternalAttributes"),ws.updateInternalAttributes(this.environment,this.attributeStorage,this.customer),fs.timeEnd("updateInternalAttributes"),fs.timeEnd("Setup storage"),this.environment.addUnloadHandler((()=>{try{fs.debug("before unload event fired. Will cleanup...");this.taskManager.findTasks((e=>!e.isDone())).length>0&&(this.taskManager.addTask(new Wa),this.taskManager.runNow())}catch(m){const t=As(m);t.message=`Exception in ClientV4 unload handler\n${t.message}`,fs.error(t,239)}})),this.attributeData=new _s(this.environment,this.serverContext,this.attributeStorage,this.override,this.customerStorage,this.integrationDataStorage,this.user),this.conditionEvaluationRuntime=new ks(this.attributeData,this.activityStorage),this.elementObserver=this.isEditorMode?new Ds:new Ks,this.taskManager.addTask(new Ra(this.elementObserver)),this.pageContext=new ra(this.environment,this.customer,this.conditionEvaluationRuntime,this.attributeData,this.override,this.taskManager,this.hider,this.elementObserver);const g=new Wr(this.environment,this.taskManager,this.customerStorage,this.attributeStorage,this.activityStorage,this.integrationDataStorage,this.pageContext,this.serverContext,this.policy,this.customer,this.user,this.override,this.statusModel,a.extractCallQueue(),a.extractReadyCallbackQueue(),(e=>{this.addVariationRecordedCallbackTuple(e)}));g.initialize(),this.internalApi=new jr(this.customer,this.user,this.environment,this.serverContext,this.taskManager,this.browserStorage,this.customerStorage,g,this.attributeData,this.elementObserver),this.internalApi.initialize(),this.activityStorage.add(Un.buildPageviewActivity(this.customer,this.environment,this.user,this.attributeStorage,this.customerStorage)),ws.runCustomerCode(this.customer,this.statusModel,this.environment.getWindow().document),this.pageContext.reinitialize();const h=new Ja(this.environment,this.customer,this.user,this.integrationDataStorage);this.taskManager.addTask(h),this.scheduleTasks(),this.hasRun=!0,this.isEditorMode&&this.environment.injectScript("https://intellimizeditor.com/common.js"),fs.timeEnd("Client run time"),this.taskManager.runNow()}))}reRun(e){fs.info("Restarting client"),this.isRestartingStatus=!0,this.taskManager.onDone((()=>{this.statusModel.reinitializeExperienceVariations(),this.environment.reinitialize(),this.taskManager.addTask(new Ra(this.elementObserver)),this.customerStorage.updateAndGetSessionId(),ws.updateInternalAttributes(this.environment,this.attributeStorage,this.customer),this.attributeData.reinitialize(),this.internalApi.reinitialize(),e.forEach((e=>{xs.executeFunction(e,4)})),this.activityStorage.add(Un.buildPageviewActivity(this.customer,this.environment,this.user,this.attributeStorage,this.customerStorage)),this.pageContext.reinitialize(),ws.runCustomerCode(this.customer,this.statusModel,this.environment.getWindow().document),this.scheduleTasks(),this.isRestartingStatus=!1})),this.taskManager.stop()}isRestarting(){return fs.debug(`Client.isRestarting() => ${this.isRestartingStatus}`),this.isRestartingStatus}scheduleTasks(){if(!this.isEditorMode){const e=new Ya(this.environment,this.customer,this.customerStorage,this.attributeStorage,this.activityStorage,this.user,this.override,this.pageContext,this.serverContext,this.attributeData,this.policy,this.statusModel,this.conditionEvaluationRuntime,this.hider,this.getVariationRecordedCallbackTuples.bind(this),this.elementObserver),t=new Oa(this.environment,this.customer,this.customerStorage,this.attributeStorage,this.activityStorage,this.user,this.override,this.pageContext,this.serverContext,this.policy,this.statusModel),i=new Ga(this.environment,this.customer,this.user,this.customerStorage,this.attributeStorage,this.pageContext,this.serverContext,this.policy,this.override),s=new Na(this.environment,this.customer,this.user,this.integrationDataStorage,this.override);if(this.taskManager.addTask(i),this.taskManager.addTask(s),this.taskManager.addTask(e),this.taskManager.addTask(t),an(this.customer)){const e=new Va(this.environment,this.customer,this.user),t=new za(this.environment,this.customer,this.user,this.override,this.activityStorage,this.attributeStorage,this.customerStorage,this.pageContext,this.serverContext,this.policy,this.statusModel);this.taskManager.addTask(e),this.taskManager.addTask(t)}}}}function Xa(e,t){return i=>{fs.time("frameTick",["raf"]);const s=null!=t?t:i;i-s<e&&window.requestAnimationFrame(Xa(e,s)),fs.timeEnd("frameTick",["raf"])}}function eo(){new MutationObserver((e=>{Ps.time(`mutations: ${e.length}`),e.forEach((e=>{Ps.debug(`Doc mutation: ${Ri(e)}`)})),Ps.timeEnd(`mutations: ${e.length}`)})).observe(document.documentElement,{subtree:!0,childList:!0,attributes:!0,characterData:!0,attributeOldValue:!0,characterDataOldValue:!0})}(()=>{__async(this,null,(function*(){try{fs.time("client startup time"),fs.getLevel()<=i.LogLevel.DEBUG&&(window.requestAnimationFrame(Xa(2e3)),eo());const e=new Za;yield e.run(),fs.timeEnd("client startup time")}catch(e){Us.revealAll(document);const t=As(e);fs.error(t,31)}}))})()}();

